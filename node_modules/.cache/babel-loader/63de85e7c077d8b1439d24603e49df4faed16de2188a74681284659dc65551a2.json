{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\InteractiveDCAChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkenColor = (hex, factor = 0.8) => {\n  let c = d3.color(hex);\n  if (c) {\n    c.r = Math.floor(c.r * factor);\n    c.g = Math.floor(c.g * factor);\n    c.b = Math.floor(c.b * factor);\n    return c.formatHex();\n  }\n  return hex;\n};\nconst lightenColor = (hex, factor = 1.2) => {\n  let c = d3.color(hex);\n  if (c) {\n    c.r = Math.min(255, Math.floor(c.r * factor));\n    c.g = Math.min(255, Math.floor(c.g * factor));\n    c.b = Math.min(255, Math.floor(c.b * factor));\n    return c.formatHex();\n  }\n  return hex;\n};\nconst detectDateColumn = headers => {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return lower.includes(\"prod\") && lower.includes(\"date\") || lower.includes(\"proddt\") || lower.includes(\"proddttm\") || lower === \"date\" || lower === \"datetime\";\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n};\nconst detectColumns = headers => {\n  let phases = {};\n  headers.forEach(header => {\n    const lower = header.toLowerCase();\n    if (lower.includes(\"bopd\")) {\n      phases.oil = header;\n    } else if (lower.includes(\"oil\") && !phases.oil) {\n      phases.oil = header;\n    }\n    if (lower.includes(\"bwpd\")) {\n      phases.water = header;\n    } else if (lower.includes(\"water\") && !phases.water) {\n      phases.water = header;\n    }\n    if (lower.includes(\"mcfd\")) {\n      phases.gas = header;\n    } else if (lower.includes(\"gas\") && !phases.gas) {\n      phases.gas = header;\n    }\n    if ((lower.includes(\"pip\") || lower.includes(\"pressure\") || lower.includes(\"psi\")) && !phases.pressure) {\n      phases.pressure = header;\n    }\n  });\n  return phases;\n};\nconst calculateRate = (Qi, b, D, t) => {\n  if (b === 0) {\n    return Qi * Math.exp(-D * t);\n  } else {\n    return Qi / Math.pow(1 + b * D * t, 1 / b);\n  }\n};\nconst fitDeclineParameters = (data, fitWindow = 60) => {\n  var _data$;\n  if (!data || data.length < 3) return {\n    Qi: (data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.value) || 100,\n    b: 0.9,\n    D: 0.01\n  };\n  const sortedData = [...data].sort((a, b) => a.t - b.t);\n  const Qi = sortedData[0].value;\n  const recentData = sortedData.slice(-Math.min(fitWindow, sortedData.length));\n  let bestB = 0,\n    bestD = 0.01,\n    bestError = Infinity;\n  for (let b = 0; b <= 1; b += 0.1) {\n    const {\n      D,\n      error\n    } = findOptimalD(recentData, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestB = b;\n      bestD = D;\n    }\n  }\n  const minB = Math.max(0, bestB - 0.1);\n  const maxB = Math.min(1, bestB + 0.1);\n  for (let b = minB; b <= maxB; b += 0.01) {\n    const {\n      D,\n      error\n    } = findOptimalD(recentData, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestB = b;\n      bestD = D;\n    }\n  }\n  return {\n    Qi,\n    b: bestB,\n    D: bestD\n  };\n};\nconst findOptimalD = (data, Qi, b) => {\n  let bestD = 0.01,\n    bestError = Infinity;\n  for (let D = 0.001; D <= 0.5; D += 0.005) {\n    let error = 0;\n    data.forEach(d => {\n      const predicted = calculateRate(Qi, b, D, d.t);\n      error += Math.pow(predicted - d.value, 2);\n    });\n    if (error < bestError) {\n      bestError = error;\n      bestD = D;\n    }\n  }\n  const minD = Math.max(0.001, bestD - 0.005);\n  const maxD = bestD + 0.005;\n  for (let D = minD; D <= maxD; D += 0.0005) {\n    let error = 0;\n    data.forEach(d => {\n      const predicted = calculateRate(Qi, b, D, d.t);\n      error += Math.pow(predicted - d.value, 2);\n    });\n    if (error < bestError) {\n      bestError = error;\n      bestD = D;\n    }\n  }\n  return {\n    D: bestD,\n    error: bestError\n  };\n};\nfunction InteractiveDCAChart({\n  dataString,\n  startDate,\n  endDate,\n  colors,\n  yScaleType,\n  yMultiplier,\n  // Always 1 from parent.\n  forecastDays,\n  autoForecast = true,\n  onParametersCalculated\n}) {\n  _s();\n  const svgRef = useRef(null);\n  const xScaleRef = useRef(null);\n  // For tooltip: store hover info.\n  const [hoverInfo, setHoverInfo] = useState(null);\n\n  // Parse CSV data.\n  const parsedData = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      console.error(\"Error parsing CSV:\", err);\n      return [];\n    }\n  }, [dataString]);\n  const hasData = parsedData.length > 0;\n  const prodDateCol = hasData ? detectDateColumn(parsedData.columns) : \"Production_Date\";\n  const phasesDetected = hasData ? detectColumns(parsedData.columns) : {};\n  const filteredData = useMemo(() => {\n    if (!hasData) return [];\n    let dataWithDates = parsedData.map(row => ({\n      ...row,\n      [prodDateCol]: new Date(row[prodDateCol])\n    }));\n    dataWithDates = dataWithDates.filter(row => !isNaN(row[prodDateCol].getTime()));\n    dataWithDates.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\n    if (startDate) {\n      const sd = new Date(startDate);\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] >= sd);\n    }\n    if (endDate) {\n      const ed = new Date(endDate);\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] <= ed);\n    }\n    return dataWithDates;\n  }, [parsedData, prodDateCol, startDate, endDate, hasData]);\n  const localHasData = filteredData.length > 0;\n  const firstDate = localHasData ? filteredData[0][prodDateCol] : new Date();\n  const data = useMemo(() => {\n    if (!localHasData) return [];\n    return filteredData.map(row => {\n      const date = row[prodDateCol];\n      return {\n        ...row,\n        t: (date - firstDate) / (1000 * 60 * 60 * 24)\n      };\n    });\n  }, [filteredData, localHasData, firstDate, prodDateCol]);\n  const phaseData = useMemo(() => {\n    let result = {};\n    Object.keys(phasesDetected).forEach(phase => {\n      result[phase] = data.map(d => ({\n        t: d.t,\n        value: +d[phasesDetected[phase]]\n      })).filter(d => !isNaN(d.value));\n    });\n    return result;\n  }, [data, phasesDetected]);\n  const tMax = localHasData ? d3.max(data, d => d.t) : 0;\n  const maxProdDate = localHasData ? d3.max(data, d => d[prodDateCol]) : new Date();\n  const [phaseParams, setPhaseParams] = useState({});\n  const [autoFitEnabled, setAutoFitEnabled] = useState(true);\n  const [activeKey, setActiveKey] = useState(null);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      const key = e.key.toLowerCase();\n      if ([\"d\", \"q\", \"b\"].includes(key)) setActiveKey(key);\n    };\n    const handleKeyUp = () => setActiveKey(null);\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n  useEffect(() => {\n    let newParams = {};\n    Object.keys(phaseData).forEach(phase => {\n      let series = phaseData[phase];\n      if (series.length < 3) {\n        var _series$;\n        newParams[phase] = {\n          Qi: (series === null || series === void 0 ? void 0 : (_series$ = series[0]) === null || _series$ === void 0 ? void 0 : _series$.value) || 100,\n          b: 0.9,\n          D: 0.01\n        };\n      } else {\n        newParams[phase] = fitDeclineParameters(series);\n      }\n    });\n    // Only update if newParams differ from current phaseParams.\n    if (autoFitEnabled && JSON.stringify(newParams) !== JSON.stringify(phaseParams)) {\n      setPhaseParams(newParams);\n    }\n  }, [phaseData, autoFitEnabled, phaseParams]);\n  const calculatedEUR = useMemo(() => {\n    let results = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      if (b === 0) results[phase] = Qi / D;else if (b > 0 && b < 1) results[phase] = Qi / (D * (1 - b));else if (b === 1) results[phase] = Qi * (1 + Math.log(Qi / 1) / D);else results[phase] = \"N/A\";\n    });\n    return results;\n  }, [phaseParams]);\n\n  // Compute forecast average for the first 60 days.\n  const forecastAverage = useMemo(() => {\n    let fa = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      const Q_start = calculateRate(Qi, b, D, tMax);\n      const steps = 60;\n      let sum = 0;\n      for (let i = 0; i <= steps; i++) {\n        const t = i / steps * 60;\n        const Q = b === 0 ? Q_start * Math.exp(-D * t) : Q_start / Math.pow(1 + b * D * t, 1 / b);\n        sum += Q;\n      }\n      fa[phase] = sum / (steps + 1);\n    });\n    return fa;\n  }, [phaseParams, tMax]);\n  useEffect(() => {\n    if (onParametersCalculated) {\n      onParametersCalculated({\n        phaseParams,\n        calculatedEUR,\n        forecastAverage\n      });\n    }\n  }, [phaseParams, calculatedEUR, forecastAverage, onParametersCalculated]);\n  const allHistoricalPoints = useMemo(() => {\n    let points = [];\n    Object.keys(phaseData).forEach(phase => {\n      phaseData[phase].forEach(d => {\n        points.push({\n          date: new Date(firstDate.getTime() + d.t * 24 * 60 * 60 * 1000),\n          Q: d.value,\n          phase\n        });\n      });\n    });\n    return points;\n  }, [phaseData, firstDate]);\n  const calcForecast = (Qi, b, D, tMaxVal, forecastDaysVal) => {\n    let Qstart = calculateRate(Qi, b, D, tMaxVal);\n    let arr = [];\n    let steps = 50;\n    let lastDate = localHasData ? d3.max(data, d => d[prodDateCol]) : new Date();\n    for (let i = 0; i <= steps; i++) {\n      let tF = forecastDaysVal * i / steps;\n      let q = calculateRate(Qstart, b, D, tF);\n      let dt = new Date(lastDate.getTime() + tF * 24 * 60 * 60 * 1000);\n      arr.push({\n        date: dt,\n        Q: q,\n        t: tF,\n        phase: \"forecast\"\n      });\n    }\n    return arr;\n  };\n  const allForecastPoints = useMemo(() => {\n    let forecasts = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      if (!Qi || D <= 0) {\n        forecasts[phase] = [];\n      } else {\n        let fc = calcForecast(Qi, b, D, tMax, forecastDays);\n        fc.forEach(x => x.phase = phase);\n        forecasts[phase] = fc;\n      }\n    });\n    return forecasts;\n  }, [phaseParams, tMax, forecastDays, localHasData, data, prodDateCol]);\n  const combinedAll = useMemo(() => {\n    let all = [...allHistoricalPoints];\n    Object.values(allForecastPoints).forEach(arr => all = all.concat(arr));\n    return all;\n  }, [allHistoricalPoints, allForecastPoints]);\n\n  // D3 rendering.\n  useEffect(() => {\n    if (!localHasData) return;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 60\n    };\n    const width = 800;\n    const height = 400;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const [minDateDomain, maxDateDomain] = d3.extent(combinedAll, d => d.date);\n    let [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\n    if (yScaleType === \"log\" && minQ <= 0) minQ = 1e-2;\n    const xScale = d3.scaleTime().domain([minDateDomain, maxDateDomain]).range([margin.left, width - margin.right]);\n    xScaleRef.current = xScale;\n    const yDomain = yScaleType === \"log\" ? [Math.max(1e-5, minQ), maxQ * 1] : [0, maxQ * 1];\n    let yScale = yScaleType === \"log\" ? d3.scaleLog().domain(yDomain).range([height - margin.bottom, margin.top]) : d3.scaleLinear().domain(yDomain).range([height - margin.bottom, margin.top]);\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\n    const yAxis = yScaleType === \"log\" ? d3.axisLeft(yScale).ticks(6, \"~s\") : d3.axisLeft(yScale);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height - 5).style(\"text-anchor\", \"middle\").text(\"Date\");\n    svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", 15).style(\"text-anchor\", \"middle\").text(\"Production Rate\");\n\n    // Plot historical points.\n    Object.keys(phasesDetected).forEach(phase => {\n      const pts = allHistoricalPoints.filter(p => p.phase === phase);\n      svg.selectAll(`circle.hist-${phase}`).data(pts).enter().append(\"circle\").attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.Q)).attr(\"r\", 3).attr(\"fill\", colors[phase] || \"#888\");\n    });\n\n    // Plot decline lines with drag behavior.\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      const lineData = [];\n      const steps = 100;\n      for (let i = 0; i <= steps; i++) {\n        const frac = i / steps;\n        const tVal = tMax * frac;\n        const QVal = calculateRate(Qi, b, D, tVal);\n        const dt = new Date(firstDate.getTime() + tVal * 24 * 60 * 60 * 1000);\n        lineData.push({\n          date: dt,\n          Q: QVal\n        });\n      }\n      const lineGen = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(lineData).attr(\"fill\", \"none\").attr(\"stroke\", colors[phase] || \"#888888\").attr(\"stroke-width\", 2).style(\"cursor\", \"pointer\").attr(\"d\", lineGen).call(d3.drag().on(\"drag\", event => {\n        if (autoFitEnabled) setAutoFitEnabled(false);\n        setPhaseParams(prev => {\n          const newParams = {\n            ...prev\n          };\n          const curr = {\n            ...prev[phase]\n          };\n          if (activeKey === \"d\") {\n            curr.D = Math.max(0.0001, curr.D + event.dy * 0.001);\n          } else if (activeKey === \"q\") {\n            curr.Qi = Math.max(1, curr.Qi - event.dy);\n          } else if (activeKey === \"b\") {\n            curr.b = Math.max(0, Math.min(1, curr.b + event.dy * 0.005));\n          }\n          newParams[phase] = curr;\n          return newParams;\n        });\n      }));\n    });\n\n    // Plot forecast lines with hover and grab effects.\n    Object.keys(allForecastPoints).forEach(phase => {\n      const fc = allForecastPoints[phase];\n      if (fc.length > 1) {\n        const lineGenFc = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n        svg.append(\"path\").datum(fc).attr(\"fill\", \"none\").attr(\"stroke\", d3.color(colors[phase] || \"#888\").brighter(1.2)).attr(\"stroke-width\", 3).attr(\"stroke-dasharray\", \"5,3\").attr(\"d\", lineGenFc).on(\"mouseover\", function () {\n          d3.select(this).attr(\"stroke-width\", 5);\n        }).on(\"mouseout\", function () {\n          d3.select(this).attr(\"stroke-width\", 3);\n        }).on(\"mousedown\", function () {\n          d3.select(this).style(\"cursor\", \"grabbing\");\n        }).on(\"mouseup\", function () {\n          d3.select(this).style(\"cursor\", \"grab\");\n        });\n      }\n    });\n    svg.append(\"line\").attr(\"x1\", xScale(maxProdDate)).attr(\"y1\", margin.top).attr(\"x2\", xScale(maxProdDate)).attr(\"y2\", height - margin.bottom).attr(\"stroke\", \"#666\").attr(\"stroke-width\", 1).attr(\"stroke-dasharray\", \"5,5\");\n    svg.append(\"text\").attr(\"x\", xScale(maxProdDate) + 5).attr(\"y\", margin.top + 15).attr(\"fill\", \"#666\").text(\"Forecast →\");\n\n    // d3-zoom for vertical scaling.\n    const zoomBehavior = d3.zoom().scaleExtent([0.5, 10]).on(\"zoom\", event => {\n      const newYScale = event.transform.rescaleY(yScale);\n      svg.selectAll(\"circle\").attr(\"cy\", d => newYScale(d.Q));\n      svg.selectAll(\"path\").each(function (d) {\n        if (Array.isArray(d)) {\n          const newLineGen = d3.line().x(dd => xScale(dd.date)).y(dd => newYScale(dd.Q)).curve(d3.curveMonotoneX);\n          d3.select(this).attr(\"d\", newLineGen(d));\n        }\n      });\n      svg.select(\"g\").call(yAxis.scale(newYScale));\n    });\n    svg.call(zoomBehavior);\n  }, [combinedAll, colors, activeKey, yScaleType, forecastDays, autoFitEnabled, tMax, firstDate, phasesDetected, phaseParams, allHistoricalPoints, allForecastPoints, maxProdDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 800,\n      height: 400,\n      onMouseMove: event => {\n        if (!localHasData || !xScaleRef.current) return;\n        const [mouseX] = d3.pointer(event, svgRef.current);\n        const date = xScaleRef.current.invert(mouseX);\n        const t = (date - firstDate) / (1000 * 60 * 60 * 24);\n        let values = {};\n        Object.keys(phaseParams).forEach(phase => {\n          const {\n            Qi,\n            b,\n            D\n          } = phaseParams[phase] || {};\n          if (Qi && b !== undefined && D) {\n            values[phase] = calculateRate(Qi, b, D, t);\n          }\n        });\n        setHoverInfo({\n          x: mouseX,\n          date,\n          values\n        });\n      },\n      onMouseOut: () => setHoverInfo(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), hoverInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: hoverInfo.x + 5,\n        top: 0,\n        pointerEvents: 'none',\n        background: 'rgba(255,255,255,0.9)',\n        border: '1px solid #ccc',\n        padding: 5,\n        fontSize: 12,\n        borderRadius: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: hoverInfo.date.toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }, this), Object.keys(hoverInfo.values).map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [phase.toUpperCase(), \": \", hoverInfo.values[phase].toFixed(2)]\n      }, phase, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractiveDCAChart, \"R/oVDMr46Zw7ONb2354uZxEUFKI=\");\n_c = InteractiveDCAChart;\nexport default InteractiveDCAChart;\nvar _c;\n$RefreshReg$(_c, \"InteractiveDCAChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","d3","jsxDEV","_jsxDEV","darkenColor","hex","factor","c","color","r","Math","floor","g","b","formatHex","lightenColor","min","detectDateColumn","headers","candidates","filter","h","lower","toLowerCase","includes","length","detectColumns","phases","forEach","header","oil","water","gas","pressure","calculateRate","Qi","D","t","exp","pow","fitDeclineParameters","data","fitWindow","_data$","value","sortedData","sort","a","recentData","slice","bestB","bestD","bestError","Infinity","error","findOptimalD","minB","max","maxB","d","predicted","minD","maxD","InteractiveDCAChart","dataString","startDate","endDate","colors","yScaleType","yMultiplier","forecastDays","autoForecast","onParametersCalculated","_s","svgRef","xScaleRef","hoverInfo","setHoverInfo","parsedData","csvParse","err","console","hasData","prodDateCol","columns","phasesDetected","filteredData","dataWithDates","map","row","Date","isNaN","getTime","sd","ed","localHasData","firstDate","date","phaseData","result","Object","keys","phase","tMax","maxProdDate","phaseParams","setPhaseParams","autoFitEnabled","setAutoFitEnabled","activeKey","setActiveKey","handleKeyDown","e","key","handleKeyUp","window","addEventListener","removeEventListener","newParams","series","_series$","JSON","stringify","calculatedEUR","results","log","forecastAverage","fa","Q_start","steps","sum","i","Q","allHistoricalPoints","points","push","calcForecast","tMaxVal","forecastDaysVal","Qstart","arr","lastDate","tF","q","dt","allForecastPoints","forecasts","fc","x","combinedAll","all","values","concat","margin","top","right","bottom","left","width","height","svg","select","current","selectAll","remove","minDateDomain","maxDateDomain","extent","minQ","maxQ","xScale","scaleTime","domain","range","yDomain","yScale","scaleLog","scaleLinear","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisLeft","ticks","append","attr","call","style","text","pts","p","enter","lineData","frac","tVal","QVal","lineGen","line","y","curve","curveMonotoneX","datum","drag","on","event","prev","curr","dy","lineGenFc","brighter","zoomBehavior","zoom","scaleExtent","newYScale","transform","rescaleY","each","Array","isArray","newLineGen","dd","scale","position","children","ref","onMouseMove","mouseX","pointer","invert","undefined","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","pointerEvents","background","border","padding","fontSize","borderRadius","toDateString","toUpperCase","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/InteractiveDCAChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst darkenColor = (hex, factor = 0.8) => {\r\n  let c = d3.color(hex);\r\n  if (c) {\r\n    c.r = Math.floor(c.r * factor);\r\n    c.g = Math.floor(c.g * factor);\r\n    c.b = Math.floor(c.b * factor);\r\n    return c.formatHex();\r\n  }\r\n  return hex;\r\n};\r\n\r\nconst lightenColor = (hex, factor = 1.2) => {\r\n  let c = d3.color(hex);\r\n  if (c) {\r\n    c.r = Math.min(255, Math.floor(c.r * factor));\r\n    c.g = Math.min(255, Math.floor(c.g * factor));\r\n    c.b = Math.min(255, Math.floor(c.b * factor));\r\n    return c.formatHex();\r\n  }\r\n  return hex;\r\n};\r\n\r\nconst detectDateColumn = (headers) => {\r\n  const candidates = headers.filter(h => {\r\n    const lower = h.toLowerCase();\r\n    return (\r\n      (lower.includes(\"prod\") && lower.includes(\"date\")) ||\r\n      lower.includes(\"proddt\") ||\r\n      lower.includes(\"proddttm\") ||\r\n      lower === \"date\" ||\r\n      lower === \"datetime\"\r\n    );\r\n  });\r\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\r\n};\r\n\r\nconst detectColumns = (headers) => {\r\n  let phases = {};\r\n  headers.forEach(header => {\r\n    const lower = header.toLowerCase();\r\n    if (lower.includes(\"bopd\")) {\r\n      phases.oil = header;\r\n    } else if (lower.includes(\"oil\") && !phases.oil) {\r\n      phases.oil = header;\r\n    }\r\n    if (lower.includes(\"bwpd\")) {\r\n      phases.water = header;\r\n    } else if (lower.includes(\"water\") && !phases.water) {\r\n      phases.water = header;\r\n    }\r\n    if (lower.includes(\"mcfd\")) {\r\n      phases.gas = header;\r\n    } else if (lower.includes(\"gas\") && !phases.gas) {\r\n      phases.gas = header;\r\n    }\r\n    if ((lower.includes(\"pip\") || lower.includes(\"pressure\") || lower.includes(\"psi\")) && !phases.pressure) {\r\n      phases.pressure = header;\r\n    }\r\n  });\r\n  return phases;\r\n};\r\n\r\nconst calculateRate = (Qi, b, D, t) => {\r\n  if (b === 0) {\r\n    return Qi * Math.exp(-D * t);\r\n  } else {\r\n    return Qi / Math.pow(1 + b * D * t, 1 / b);\r\n  }\r\n};\r\n\r\nconst fitDeclineParameters = (data, fitWindow = 60) => {\r\n  if (!data || data.length < 3) return { Qi: data?.[0]?.value || 100, b: 0.9, D: 0.01 };\r\n  const sortedData = [...data].sort((a, b) => a.t - b.t);\r\n  const Qi = sortedData[0].value;\r\n  const recentData = sortedData.slice(-Math.min(fitWindow, sortedData.length));\r\n  let bestB = 0, bestD = 0.01, bestError = Infinity;\r\n  for (let b = 0; b <= 1; b += 0.1) {\r\n    const { D, error } = findOptimalD(recentData, Qi, b);\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestB = b;\r\n      bestD = D;\r\n    }\r\n  }\r\n  const minB = Math.max(0, bestB - 0.1);\r\n  const maxB = Math.min(1, bestB + 0.1);\r\n  for (let b = minB; b <= maxB; b += 0.01) {\r\n    const { D, error } = findOptimalD(recentData, Qi, b);\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestB = b;\r\n      bestD = D;\r\n    }\r\n  }\r\n  return { Qi, b: bestB, D: bestD };\r\n};\r\n\r\nconst findOptimalD = (data, Qi, b) => {\r\n  let bestD = 0.01, bestError = Infinity;\r\n  for (let D = 0.001; D <= 0.5; D += 0.005) {\r\n    let error = 0;\r\n    data.forEach(d => {\r\n      const predicted = calculateRate(Qi, b, D, d.t);\r\n      error += Math.pow(predicted - d.value, 2);\r\n    });\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestD = D;\r\n    }\r\n  }\r\n  const minD = Math.max(0.001, bestD - 0.005);\r\n  const maxD = bestD + 0.005;\r\n  for (let D = minD; D <= maxD; D += 0.0005) {\r\n    let error = 0;\r\n    data.forEach(d => {\r\n      const predicted = calculateRate(Qi, b, D, d.t);\r\n      error += Math.pow(predicted - d.value, 2);\r\n    });\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestD = D;\r\n    }\r\n  }\r\n  return { D: bestD, error: bestError };\r\n};\r\n\r\nfunction InteractiveDCAChart({\r\n  dataString,\r\n  startDate,\r\n  endDate,\r\n  colors,\r\n  yScaleType,\r\n  yMultiplier, // Always 1 from parent.\r\n  forecastDays,\r\n  autoForecast = true,\r\n  onParametersCalculated\r\n}) {\r\n  const svgRef = useRef(null);\r\n  const xScaleRef = useRef(null);\r\n  // For tooltip: store hover info.\r\n  const [hoverInfo, setHoverInfo] = useState(null);\r\n\r\n  // Parse CSV data.\r\n  const parsedData = useMemo(() => {\r\n    try {\r\n      return d3.csvParse(dataString);\r\n    } catch (err) {\r\n      console.error(\"Error parsing CSV:\", err);\r\n      return [];\r\n    }\r\n  }, [dataString]);\r\n\r\n  const hasData = parsedData.length > 0;\r\n  const prodDateCol = hasData ? detectDateColumn(parsedData.columns) : \"Production_Date\";\r\n  const phasesDetected = hasData ? detectColumns(parsedData.columns) : {};\r\n  const filteredData = useMemo(() => {\r\n    if (!hasData) return [];\r\n    let dataWithDates = parsedData.map(row => ({\r\n      ...row,\r\n      [prodDateCol]: new Date(row[prodDateCol])\r\n    }));\r\n    dataWithDates = dataWithDates.filter(row => !isNaN(row[prodDateCol].getTime()));\r\n    dataWithDates.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\r\n    if (startDate) {\r\n      const sd = new Date(startDate);\r\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] >= sd);\r\n    }\r\n    if (endDate) {\r\n      const ed = new Date(endDate);\r\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] <= ed);\r\n    }\r\n    return dataWithDates;\r\n  }, [parsedData, prodDateCol, startDate, endDate, hasData]);\r\n\r\n  const localHasData = filteredData.length > 0;\r\n  const firstDate = localHasData ? filteredData[0][prodDateCol] : new Date();\r\n\r\n  const data = useMemo(() => {\r\n    if (!localHasData) return [];\r\n    return filteredData.map(row => {\r\n      const date = row[prodDateCol];\r\n      return { ...row, t: (date - firstDate) / (1000 * 60 * 60 * 24) };\r\n    });\r\n  }, [filteredData, localHasData, firstDate, prodDateCol]);\r\n\r\n  const phaseData = useMemo(() => {\r\n    let result = {};\r\n    Object.keys(phasesDetected).forEach(phase => {\r\n      result[phase] = data.map(d => ({\r\n        t: d.t,\r\n        value: +d[phasesDetected[phase]]\r\n      })).filter(d => !isNaN(d.value));\r\n    });\r\n    return result;\r\n  }, [data, phasesDetected]);\r\n\r\n  const tMax = localHasData ? d3.max(data, d => d.t) : 0;\r\n  const maxProdDate = localHasData\r\n    ? d3.max(data, d => d[prodDateCol])\r\n    : new Date();\r\n\r\n  const [phaseParams, setPhaseParams] = useState({});\r\n  const [autoFitEnabled, setAutoFitEnabled] = useState(true);\r\n  const [activeKey, setActiveKey] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      const key = e.key.toLowerCase();\r\n      if ([\"d\", \"q\", \"b\"].includes(key)) setActiveKey(key);\r\n    };\r\n    const handleKeyUp = () => setActiveKey(null);\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      window.removeEventListener(\"keyup\", handleKeyUp);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let newParams = {};\r\n    Object.keys(phaseData).forEach(phase => {\r\n      let series = phaseData[phase];\r\n      if (series.length < 3) {\r\n        newParams[phase] = { Qi: series?.[0]?.value || 100, b: 0.9, D: 0.01 };\r\n      } else {\r\n        newParams[phase] = fitDeclineParameters(series);\r\n      }\r\n    });\r\n    // Only update if newParams differ from current phaseParams.\r\n    if (autoFitEnabled && JSON.stringify(newParams) !== JSON.stringify(phaseParams)) {\r\n      setPhaseParams(newParams);\r\n    }\r\n  }, [phaseData, autoFitEnabled, phaseParams]);\r\n\r\n  const calculatedEUR = useMemo(() => {\r\n    let results = {};\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      if (b === 0) results[phase] = Qi / D;\r\n      else if (b > 0 && b < 1) results[phase] = Qi / (D * (1 - b));\r\n      else if (b === 1) results[phase] = Qi * (1 + Math.log(Qi / 1) / D);\r\n      else results[phase] = \"N/A\";\r\n    });\r\n    return results;\r\n  }, [phaseParams]);\r\n\r\n  // Compute forecast average for the first 60 days.\r\n  const forecastAverage = useMemo(() => {\r\n    let fa = {};\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      const Q_start = calculateRate(Qi, b, D, tMax);\r\n      const steps = 60;\r\n      let sum = 0;\r\n      for (let i = 0; i <= steps; i++) {\r\n        const t = (i / steps) * 60;\r\n        const Q = b === 0 ? Q_start * Math.exp(-D * t) : Q_start / Math.pow(1 + b * D * t, 1 / b);\r\n        sum += Q;\r\n      }\r\n      fa[phase] = sum / (steps + 1);\r\n    });\r\n    return fa;\r\n  }, [phaseParams, tMax]);\r\n\r\n  useEffect(() => {\r\n    if (onParametersCalculated) {\r\n      onParametersCalculated({ phaseParams, calculatedEUR, forecastAverage });\r\n    }\r\n  }, [phaseParams, calculatedEUR, forecastAverage, onParametersCalculated]);\r\n\r\n  const allHistoricalPoints = useMemo(() => {\r\n    let points = [];\r\n    Object.keys(phaseData).forEach(phase => {\r\n      phaseData[phase].forEach(d => {\r\n        points.push({\r\n          date: new Date(firstDate.getTime() + d.t * 24 * 60 * 60 * 1000),\r\n          Q: d.value,\r\n          phase\r\n        });\r\n      });\r\n    });\r\n    return points;\r\n  }, [phaseData, firstDate]);\r\n\r\n  const calcForecast = (Qi, b, D, tMaxVal, forecastDaysVal) => {\r\n    let Qstart = calculateRate(Qi, b, D, tMaxVal);\r\n    let arr = [];\r\n    let steps = 50;\r\n    let lastDate = localHasData ? d3.max(data, d => d[prodDateCol]) : new Date();\r\n    for (let i = 0; i <= steps; i++) {\r\n      let tF = (forecastDaysVal * i) / steps;\r\n      let q = calculateRate(Qstart, b, D, tF);\r\n      let dt = new Date(lastDate.getTime() + tF * 24 * 60 * 60 * 1000);\r\n      arr.push({ date: dt, Q: q, t: tF, phase: \"forecast\" });\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const allForecastPoints = useMemo(() => {\r\n    let forecasts = {};\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      if (!Qi || D <= 0) {\r\n        forecasts[phase] = [];\r\n      } else {\r\n        let fc = calcForecast(Qi, b, D, tMax, forecastDays);\r\n        fc.forEach(x => (x.phase = phase));\r\n        forecasts[phase] = fc;\r\n      }\r\n    });\r\n    return forecasts;\r\n  }, [phaseParams, tMax, forecastDays, localHasData, data, prodDateCol]);\r\n\r\n  const combinedAll = useMemo(() => {\r\n    let all = [...allHistoricalPoints];\r\n    Object.values(allForecastPoints).forEach(arr => (all = all.concat(arr)));\r\n    return all;\r\n  }, [allHistoricalPoints, allForecastPoints]);\r\n\r\n  // D3 rendering.\r\n  useEffect(() => {\r\n    if (!localHasData) return;\r\n    const margin = { top: 20, right: 30, bottom: 40, left: 60 };\r\n    const width = 800;\r\n    const height = 400;\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove();\r\n    const [minDateDomain, maxDateDomain] = d3.extent(combinedAll, d => d.date);\r\n    let [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\r\n    if (yScaleType === \"log\" && minQ <= 0) minQ = 1e-2;\r\n    const xScale = d3.scaleTime()\r\n      .domain([minDateDomain, maxDateDomain])\r\n      .range([margin.left, width - margin.right]);\r\n    xScaleRef.current = xScale;\r\n    const yDomain = yScaleType === \"log\"\r\n      ? [Math.max(1e-5, minQ), maxQ * 1]\r\n      : [0, maxQ * 1];\r\n    let yScale = yScaleType === \"log\"\r\n      ? d3.scaleLog().domain(yDomain).range([height - margin.bottom, margin.top])\r\n      : d3.scaleLinear().domain(yDomain).range([height - margin.bottom, margin.top]);\r\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\r\n    const yAxis = yScaleType === \"log\"\r\n      ? d3.axisLeft(yScale).ticks(6, \"~s\")\r\n      : d3.axisLeft(yScale);\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n      .call(xAxis)\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\");\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},0)`)\r\n      .call(yAxis);\r\n    svg.append(\"text\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", height - 5)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Date\");\r\n    svg.append(\"text\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"x\", -height / 2)\r\n      .attr(\"y\", 15)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Production Rate\");\r\n    \r\n    // Plot historical points.\r\n    Object.keys(phasesDetected).forEach(phase => {\r\n      const pts = allHistoricalPoints.filter(p => p.phase === phase);\r\n      svg.selectAll(`circle.hist-${phase}`)\r\n        .data(pts)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"cx\", d => xScale(d.date))\r\n        .attr(\"cy\", d => yScale(d.Q))\r\n        .attr(\"r\", 3)\r\n        .attr(\"fill\", colors[phase] || \"#888\");\r\n    });\r\n    \r\n    // Plot decline lines with drag behavior.\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      const lineData = [];\r\n      const steps = 100;\r\n      for (let i = 0; i <= steps; i++) {\r\n        const frac = i / steps;\r\n        const tVal = tMax * frac;\r\n        const QVal = calculateRate(Qi, b, D, tVal);\r\n        const dt = new Date(firstDate.getTime() + tVal * 24 * 60 * 60 * 1000);\r\n        lineData.push({ date: dt, Q: QVal });\r\n      }\r\n      const lineGen = d3.line()\r\n        .x(d => xScale(d.date))\r\n        .y(d => yScale(d.Q))\r\n        .curve(d3.curveMonotoneX);\r\n      svg.append(\"path\")\r\n        .datum(lineData)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", colors[phase] || \"#888888\")\r\n        .attr(\"stroke-width\", 2)\r\n        .style(\"cursor\", \"pointer\")\r\n        .attr(\"d\", lineGen)\r\n        .call(\r\n          d3.drag().on(\"drag\", (event) => {\r\n            if (autoFitEnabled) setAutoFitEnabled(false);\r\n            setPhaseParams(prev => {\r\n              const newParams = { ...prev };\r\n              const curr = { ...prev[phase] };\r\n              if (activeKey === \"d\") {\r\n                curr.D = Math.max(0.0001, curr.D + event.dy * 0.001);\r\n              } else if (activeKey === \"q\") {\r\n                curr.Qi = Math.max(1, curr.Qi - event.dy);\r\n              } else if (activeKey === \"b\") {\r\n                curr.b = Math.max(0, Math.min(1, curr.b + event.dy * 0.005));\r\n              }\r\n              newParams[phase] = curr;\r\n              return newParams;\r\n            });\r\n          })\r\n        );\r\n    });\r\n    \r\n    // Plot forecast lines with hover and grab effects.\r\n    Object.keys(allForecastPoints).forEach(phase => {\r\n      const fc = allForecastPoints[phase];\r\n      if (fc.length > 1) {\r\n        const lineGenFc = d3.line()\r\n          .x(d => xScale(d.date))\r\n          .y(d => yScale(d.Q))\r\n          .curve(d3.curveMonotoneX);\r\n        svg.append(\"path\")\r\n          .datum(fc)\r\n          .attr(\"fill\", \"none\")\r\n          .attr(\"stroke\", d3.color(colors[phase] || \"#888\").brighter(1.2))\r\n          .attr(\"stroke-width\", 3)\r\n          .attr(\"stroke-dasharray\", \"5,3\")\r\n          .attr(\"d\", lineGenFc)\r\n          .on(\"mouseover\", function() {\r\n            d3.select(this).attr(\"stroke-width\", 5);\r\n          })\r\n          .on(\"mouseout\", function() {\r\n            d3.select(this).attr(\"stroke-width\", 3);\r\n          })\r\n          .on(\"mousedown\", function() {\r\n            d3.select(this).style(\"cursor\", \"grabbing\");\r\n          })\r\n          .on(\"mouseup\", function() {\r\n            d3.select(this).style(\"cursor\", \"grab\");\r\n          });\r\n      }\r\n    });\r\n    \r\n    svg.append(\"line\")\r\n      .attr(\"x1\", xScale(maxProdDate))\r\n      .attr(\"y1\", margin.top)\r\n      .attr(\"x2\", xScale(maxProdDate))\r\n      .attr(\"y2\", height - margin.bottom)\r\n      .attr(\"stroke\", \"#666\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-dasharray\", \"5,5\");\r\n    svg.append(\"text\")\r\n      .attr(\"x\", xScale(maxProdDate) + 5)\r\n      .attr(\"y\", margin.top + 15)\r\n      .attr(\"fill\", \"#666\")\r\n      .text(\"Forecast →\");\r\n    \r\n    // d3-zoom for vertical scaling.\r\n    const zoomBehavior = d3.zoom()\r\n      .scaleExtent([0.5, 10])\r\n      .on(\"zoom\", (event) => {\r\n        const newYScale = event.transform.rescaleY(yScale);\r\n        svg.selectAll(\"circle\").attr(\"cy\", d => newYScale(d.Q));\r\n        svg.selectAll(\"path\").each(function(d) {\r\n          if (Array.isArray(d)) {\r\n            const newLineGen = d3.line()\r\n              .x(dd => xScale(dd.date))\r\n              .y(dd => newYScale(dd.Q))\r\n              .curve(d3.curveMonotoneX);\r\n            d3.select(this).attr(\"d\", newLineGen(d));\r\n          }\r\n        });\r\n        svg.select(\"g\").call(yAxis.scale(newYScale));\r\n      });\r\n    svg.call(zoomBehavior);\r\n  }, [\r\n    combinedAll,\r\n    colors,\r\n    activeKey,\r\n    yScaleType,\r\n    forecastDays,\r\n    autoFitEnabled,\r\n    tMax,\r\n    firstDate,\r\n    phasesDetected,\r\n    phaseParams,\r\n    allHistoricalPoints,\r\n    allForecastPoints,\r\n    maxProdDate\r\n  ]);\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <svg\r\n        ref={svgRef}\r\n        width={800}\r\n        height={400}\r\n        onMouseMove={(event) => {\r\n          if (!localHasData || !xScaleRef.current) return;\r\n          const [mouseX] = d3.pointer(event, svgRef.current);\r\n          const date = xScaleRef.current.invert(mouseX);\r\n          const t = (date - firstDate) / (1000 * 60 * 60 * 24);\r\n          let values = {};\r\n          Object.keys(phaseParams).forEach(phase => {\r\n            const { Qi, b, D } = phaseParams[phase] || {};\r\n            if (Qi && b !== undefined && D) {\r\n              values[phase] = calculateRate(Qi, b, D, t);\r\n            }\r\n          });\r\n          setHoverInfo({ x: mouseX, date, values });\r\n        }}\r\n        onMouseOut={() => setHoverInfo(null)}\r\n      />\r\n      {hoverInfo && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            left: hoverInfo.x + 5,\r\n            top: 0,\r\n            pointerEvents: 'none',\r\n            background: 'rgba(255,255,255,0.9)',\r\n            border: '1px solid #ccc',\r\n            padding: 5,\r\n            fontSize: 12,\r\n            borderRadius: 4\r\n          }}\r\n        >\r\n          <div>{hoverInfo.date.toDateString()}</div>\r\n          {Object.keys(hoverInfo.values).map(phase => (\r\n            <div key={phase}>\r\n              {phase.toUpperCase()}: {hoverInfo.values[phase].toFixed(2)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InteractiveDCAChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}