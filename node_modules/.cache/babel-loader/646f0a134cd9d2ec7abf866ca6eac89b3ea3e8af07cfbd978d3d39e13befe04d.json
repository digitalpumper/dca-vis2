{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport * as XLSX from 'xlsx';\nimport * as d3 from 'd3';\nimport InteractiveDCAChart from './InteractiveDCAChart';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\n// Helper: Auto-detect production date column.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst detectDateColumn = headers => {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return lower.includes(\"prod\") && lower.includes(\"date\") || lower.includes(\"proddt\") || lower.includes(\"proddttm\") || lower === \"date\" || lower === \"datetime\";\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n};\nfunction App() {\n  _s();\n  const [secret, setSecret] = useState('');\n  const [dataString, setDataString] = useState('');\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Date filter states.\n  const [minDate, setMinDate] = useState(null);\n  const [maxDate, setMaxDate] = useState(null);\n  // Range values (in days) for the slider.\n  const [dateRange, setDateRange] = useState([0, 0]);\n\n  // Toggle for showing/hiding the CSV text area and the parameters overlay.\n  const [showDataInput, setShowDataInput] = useState(false);\n  const [showParameters, setShowParameters] = useState(false);\n\n  // Parse query parameters for secret and CSV data.\n  useEffect(() => {\n    const params = queryString.parse(window.location.search);\n    if (params.secret) setSecret(params.secret);\n    if (params.data) {\n      setDataString(params.data);\n      setShowDataInput(false);\n    }\n  }, []);\n\n  // When CSV data changes, determine production date range.\n  useEffect(() => {\n    if (!dataString) return;\n    try {\n      const parsed = d3.csvParse(dataString);\n      if (parsed && parsed.length > 0 && parsed.columns) {\n        const dateCol = detectDateColumn(parsed.columns);\n        const dates = parsed.map(row => new Date(row[dateCol])).filter(d => !isNaN(d));\n        if (dates.length > 0) {\n          const minD = new Date(Math.min(...dates));\n          const maxD = new Date(Math.max(...dates));\n          setMinDate(minD);\n          setMaxDate(maxD);\n          const totalDays = Math.ceil((maxD.getTime() - minD.getTime()) / (1000 * 60 * 60 * 24));\n          setDateRange([0, totalDays]);\n        }\n      }\n    } catch (e) {\n      console.error(\"Error parsing dates\", e);\n    }\n  }, [dataString]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const fileName = file.name.toLowerCase();\n    const reader = new FileReader();\n    if (fileName.endsWith('.csv') || fileName.endsWith('.txt')) {\n      reader.onload = e => setDataString(e.target.result);\n      reader.readAsText(file);\n    } else if (fileName.endsWith('.xls') || fileName.endsWith('.xlsx')) {\n      reader.onload = e => {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const csv = XLSX.utils.sheet_to_csv(worksheet);\n        setDataString(csv);\n      };\n      reader.readAsArrayBuffer(file);\n    } else {\n      alert('Unsupported file format. Please upload CSV, TXT, XLS, or XLSX.');\n    }\n  };\n  const handleSubmit = async () => {\n    if (!secret || !dataString) {\n      setError('Secret key and data are required.');\n      return;\n    }\n    try {\n      const res = await fetch('http://127.0.0.1:5000/api/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          secret,\n          data: dataString\n        })\n      });\n      const json = await res.json();\n      if (json.error) {\n        setError(json.error);\n        setResponse(null);\n      } else {\n        setResponse(json);\n        setError(null);\n      }\n    } catch (err) {\n      setError('Error connecting to backend: ' + err.toString());\n      setResponse(null);\n    }\n  };\n  const totalDays = minDate && maxDate ? Math.ceil((maxDate.getTime() - minDate.getTime()) / (1000 * 60 * 60 * 24)) : 0;\n\n  // Calculate filtered start and end dates from the slider values.\n  const filteredStartDate = minDate ? new Date(minDate.getTime() + dateRange[0] * 24 * 60 * 60 * 1000) : null;\n  const filteredEndDate = minDate ? new Date(minDate.getTime() + dateRange[1] * 24 * 60 * 60 * 1000) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom DCA Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Secret Key:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: secret,\n          onChange: e => setSecret(e.target.value),\n          placeholder: \"Enter secret key\",\n          style: {\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload CSV/Excel file:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDataInput(prev => !prev),\n        children: showDataInput ? 'Hide CSV Data' : 'Show CSV Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), showDataInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: dataString,\n        onChange: e => setDataString(e.target.value),\n        placeholder: \"Paste CSV data here...\",\n        rows: \"6\",\n        cols: \"80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: 10\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Successfully Processed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Columns: \", response.columns.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rows: \", response.rows]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowParameters(prev => !prev),\n          style: {\n            position: 'absolute',\n            top: 10,\n            right: 10,\n            zIndex: 10,\n            padding: '6px 12px',\n            border: 'none',\n            background: '#1890ff',\n            color: '#fff',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: showParameters ? 'Hide Parameters' : 'Show Parameters'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), showParameters && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 50,\n            right: 10,\n            background: 'rgba(255,255,255,0.95)',\n            border: '1px solid #ccc',\n            padding: 10,\n            zIndex: 10,\n            maxWidth: 300,\n            borderRadius: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Decline Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Parameters table goes here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowParameters(false),\n            style: {\n              marginTop: 10\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InteractiveDCAChart, {\n          dataString: dataString,\n          startDate: filteredStartDate ? filteredStartDate.toISOString().slice(0, 10) : \"\",\n          endDate: filteredEndDate ? filteredEndDate.toISOString().slice(0, 10) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Production Date Range:\", /*#__PURE__*/_jsxDEV(Slider.Range, {\n              min: 0,\n              max: totalDays,\n              value: dateRange,\n              onChange: newRange => setDateRange(newRange),\n              tipFormatter: value => {\n                if (!minDate) return '';\n                const d = new Date(minDate.getTime() + value * 24 * 60 * 60 * 1000);\n                return d.toDateString();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [filteredStartDate ? filteredStartDate.toDateString() : 'N/A', \" \\u2013 \", filteredEndDate ? filteredEndDate.toDateString() : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 250,\n          marginLeft: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Phase Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), ['oil', 'water', 'gas', 'pressure'].map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [phase.toUpperCase(), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"color\",\n                value: '#008000' // Replace with state-managed color if desired.\n                ,\n                onChange: () => {},\n                style: {\n                  marginLeft: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)\n          }, phase, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Axis Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"linear\" /* Add onChange handler */\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), \" Linear\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginLeft: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"log\" /* Add onChange handler */\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), \" Log\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y-Axis Multiplier:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"3\",\n                step: \"0.05\"\n                /* Add onChange handler here */,\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tehSg2wJQmFrmjrFsW6WTfTaKqY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","queryString","XLSX","d3","InteractiveDCAChart","Slider","jsxDEV","_jsxDEV","detectDateColumn","headers","candidates","filter","h","lower","toLowerCase","includes","length","App","_s","secret","setSecret","dataString","setDataString","response","setResponse","error","setError","minDate","setMinDate","maxDate","setMaxDate","dateRange","setDateRange","showDataInput","setShowDataInput","showParameters","setShowParameters","params","parse","window","location","search","data","parsed","csvParse","columns","dateCol","dates","map","row","Date","d","isNaN","minD","Math","min","maxD","max","totalDays","ceil","getTime","e","console","handleFileUpload","event","file","target","files","fileName","name","reader","FileReader","endsWith","onload","result","readAsText","Uint8Array","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","csv","utils","sheet_to_csv","readAsArrayBuffer","alert","handleSubmit","res","fetch","method","body","JSON","stringify","json","err","toString","filteredStartDate","filteredEndDate","style","padding","fontFamily","children","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","placeholder","width","onClick","prev","rows","cols","color","join","display","flexDirection","alignItems","flexGrow","position","top","right","zIndex","border","background","borderRadius","cursor","maxWidth","marginTop","startDate","toISOString","slice","endDate","Range","newRange","tipFormatter","toDateString","marginLeft","phase","toUpperCase","step","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport * as XLSX from 'xlsx';\nimport * as d3 from 'd3';\nimport InteractiveDCAChart from './InteractiveDCAChart';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\n// Helper: Auto-detect production date column.\nconst detectDateColumn = (headers) => {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return (lower.includes(\"prod\") && lower.includes(\"date\")) ||\n           lower.includes(\"proddt\") ||\n           lower.includes(\"proddttm\") ||\n           lower === \"date\" ||\n           lower === \"datetime\";\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n};\n\nfunction App() {\n  const [secret, setSecret] = useState('');\n  const [dataString, setDataString] = useState('');\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Date filter states.\n  const [minDate, setMinDate] = useState(null);\n  const [maxDate, setMaxDate] = useState(null);\n  // Range values (in days) for the slider.\n  const [dateRange, setDateRange] = useState([0, 0]);\n\n  // Toggle for showing/hiding the CSV text area and the parameters overlay.\n  const [showDataInput, setShowDataInput] = useState(false);\n  const [showParameters, setShowParameters] = useState(false);\n\n  // Parse query parameters for secret and CSV data.\n  useEffect(() => {\n    const params = queryString.parse(window.location.search);\n    if (params.secret) setSecret(params.secret);\n    if (params.data) {\n      setDataString(params.data);\n      setShowDataInput(false);\n    }\n  }, []);\n\n  // When CSV data changes, determine production date range.\n  useEffect(() => {\n    if (!dataString) return;\n    try {\n      const parsed = d3.csvParse(dataString);\n      if (parsed && parsed.length > 0 && parsed.columns) {\n        const dateCol = detectDateColumn(parsed.columns);\n        const dates = parsed.map(row => new Date(row[dateCol])).filter(d => !isNaN(d));\n        if (dates.length > 0) {\n          const minD = new Date(Math.min(...dates));\n          const maxD = new Date(Math.max(...dates));\n          setMinDate(minD);\n          setMaxDate(maxD);\n          const totalDays = Math.ceil((maxD.getTime() - minD.getTime()) / (1000 * 60 * 60 * 24));\n          setDateRange([0, totalDays]);\n        }\n      }\n    } catch (e) {\n      console.error(\"Error parsing dates\", e);\n    }\n  }, [dataString]);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const fileName = file.name.toLowerCase();\n    const reader = new FileReader();\n    if (fileName.endsWith('.csv') || fileName.endsWith('.txt')) {\n      reader.onload = (e) => setDataString(e.target.result);\n      reader.readAsText(file);\n    } else if (fileName.endsWith('.xls') || fileName.endsWith('.xlsx')) {\n      reader.onload = (e) => {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, { type: 'array' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const csv = XLSX.utils.sheet_to_csv(worksheet);\n        setDataString(csv);\n      };\n      reader.readAsArrayBuffer(file);\n    } else {\n      alert('Unsupported file format. Please upload CSV, TXT, XLS, or XLSX.');\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!secret || !dataString) {\n      setError('Secret key and data are required.');\n      return;\n    }\n    try {\n      const res = await fetch('http://127.0.0.1:5000/api/validate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ secret, data: dataString })\n      });\n      const json = await res.json();\n      if (json.error) {\n        setError(json.error);\n        setResponse(null);\n      } else {\n        setResponse(json);\n        setError(null);\n      }\n    } catch (err) {\n      setError('Error connecting to backend: ' + err.toString());\n      setResponse(null);\n    }\n  };\n\n  const totalDays = minDate && maxDate\n    ? Math.ceil((maxDate.getTime() - minDate.getTime()) / (1000 * 60 * 60 * 24))\n    : 0;\n\n  // Calculate filtered start and end dates from the slider values.\n  const filteredStartDate = minDate\n    ? new Date(minDate.getTime() + dateRange[0] * 24 * 60 * 60 * 1000)\n    : null;\n  const filteredEndDate = minDate\n    ? new Date(minDate.getTime() + dateRange[1] * 24 * 60 * 60 * 1000)\n    : null;\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial, sans-serif' }}>\n      <h2>Custom DCA Application</h2>\n      \n      <div style={{ marginBottom: 10 }}>\n        <label>\n          Secret Key:&nbsp;\n          <input\n            type=\"text\"\n            value={secret}\n            onChange={(e) => setSecret(e.target.value)}\n            placeholder=\"Enter secret key\"\n            style={{ width: '300px' }}\n          />\n        </label>\n      </div>\n      \n      <div style={{ marginBottom: 10 }}>\n        <label>\n          Upload CSV/Excel file:&nbsp;\n          <input type=\"file\" onChange={handleFileUpload} />\n        </label>\n      </div>\n      \n      <div style={{ marginBottom: 10 }}>\n        <button onClick={() => setShowDataInput(prev => !prev)}>\n          {showDataInput ? 'Hide CSV Data' : 'Show CSV Data'}\n        </button>\n      </div>\n      \n      {showDataInput && (\n        <div style={{ marginBottom: 10 }}>\n          <textarea\n            value={dataString}\n            onChange={(e) => setDataString(e.target.value)}\n            placeholder=\"Paste CSV data here...\"\n            rows=\"6\"\n            cols=\"80\"\n          ></textarea>\n        </div>\n      )}\n      \n      <div style={{ marginBottom: 10 }}>\n        <button onClick={handleSubmit}>Submit Data</button>\n      </div>\n      \n      {error && <div style={{ color: 'red', marginBottom: 10 }}>{error}</div>}\n      {response && (\n        <div style={{ marginBottom: 10 }}>\n          <h3>Data Successfully Processed</h3>\n          <p>Columns: {response.columns.join(', ')}</p>\n          <p>Rows: {response.rows}</p>\n        </div>\n      )}\n      \n      {/* Main Content: Chart and Sidebar */}\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start' }}>\n        {/* Chart Area */}\n        <div style={{ flexGrow: 1, position: 'relative' }}>\n          {/* Parameters overlay toggle button */}\n          <button\n            onClick={() => setShowParameters(prev => !prev)}\n            style={{\n              position: 'absolute',\n              top: 10,\n              right: 10,\n              zIndex: 10,\n              padding: '6px 12px',\n              border: 'none',\n              background: '#1890ff',\n              color: '#fff',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            {showParameters ? 'Hide Parameters' : 'Show Parameters'}\n          </button>\n          \n          {/* Decline Parameters Overlay */}\n          {showParameters && (\n            <div\n              style={{\n                position: 'absolute',\n                top: 50,\n                right: 10,\n                background: 'rgba(255,255,255,0.95)',\n                border: '1px solid #ccc',\n                padding: 10,\n                zIndex: 10,\n                maxWidth: 300,\n                borderRadius: '4px'\n              }}\n            >\n              <h4 style={{ marginTop: 0 }}>Decline Parameters</h4>\n              {/* Replace the placeholder below with your actual parameters table */}\n              <p>Parameters table goes here...</p>\n              <button onClick={() => setShowParameters(false)} style={{ marginTop: 10 }}>\n                Close\n              </button>\n            </div>\n          )}\n          \n          <InteractiveDCAChart\n            dataString={dataString}\n            startDate={filteredStartDate ? filteredStartDate.toISOString().slice(0, 10) : \"\"}\n            endDate={filteredEndDate ? filteredEndDate.toISOString().slice(0, 10) : \"\"}\n          />\n          \n          {/* Dual-Range Slider below the chart */}\n          <div style={{ marginTop: 10 }}>\n            <label>\n              Production Date Range:\n              <Slider.Range\n                min={0}\n                max={totalDays}\n                value={dateRange}\n                onChange={(newRange) => setDateRange(newRange)}\n                tipFormatter={value => {\n                  if (!minDate) return '';\n                  const d = new Date(minDate.getTime() + value * 24 * 60 * 60 * 1000);\n                  return d.toDateString();\n                }}\n              />\n            </label>\n            <div>\n              {filteredStartDate ? filteredStartDate.toDateString() : 'N/A'} – {filteredEndDate ? filteredEndDate.toDateString() : 'N/A'}\n            </div>\n          </div>\n        </div>\n        \n        {/* Sidebar */}\n        <div style={{ width: 250, marginLeft: 20 }}>\n          <div style={{ marginBottom: 20 }}>\n            <h4>Phase Colors</h4>\n            {['oil', 'water', 'gas', 'pressure'].map(phase => (\n              <div key={phase} style={{ marginBottom: 5 }}>\n                <label>\n                  {phase.toUpperCase()}:\n                  <input\n                    type=\"color\"\n                    value={'#008000'} // Replace with state-managed color if desired.\n                    onChange={() => {}}\n                    style={{ marginLeft: 5 }}\n                  />\n                </label>\n              </div>\n            ))}\n          </div>\n          <div>\n            <h4>Axis Controls</h4>\n            <div style={{ marginBottom: 10 }}>\n              <label>\n                <input type=\"radio\" name=\"yScaleType\" value=\"linear\" /* Add onChange handler */ /> Linear\n              </label>\n              <label style={{ marginLeft: 10 }}>\n                <input type=\"radio\" name=\"yScaleType\" value=\"log\" /* Add onChange handler */ /> Log\n              </label>\n            </div>\n            <div>\n              <label>\n                Y-Axis Multiplier:\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"3\"\n                  step=\"0.05\"\n                  /* Add onChange handler here */\n                  style={{ width: '100%' }}\n                />\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}