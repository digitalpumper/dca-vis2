{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\InteractiveDCAChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateRate = (Qi, b, D, t) => {\n  if (b === 0) {\n    return Qi * Math.exp(-D * t);\n  }\n  return Qi / Math.pow(1 + b * D * t, 1 / b);\n};\nconst fitDeclineParameters = (data, fitWindow = 60) => {\n  var _data$;\n  if (!data || data.length < 3) return {\n    Qi: (data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.value) || 100,\n    b: 0.9,\n    D: 0.01\n  };\n  const sorted = data.slice().sort((a, b) => a.t - b.t);\n  const Qi = sorted[0].value;\n  const recent = sorted.slice(-Math.min(fitWindow, sorted.length));\n  let bestParams = {\n      b: 0,\n      D: 0.01\n    },\n    bestError = Infinity;\n\n  // Coarse search for b\n  for (let b = 0; b <= 1; b += 0.1) {\n    const {\n      D,\n      error\n    } = findOptimalD(recent, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestParams = {\n        b,\n        D\n      };\n    }\n  }\n  // Refine b\n  const bmin = Math.max(0, bestParams.b - 0.1);\n  const bmax = Math.min(1, bestParams.b + 0.1);\n  for (let b = bmin; b <= bmax; b += 0.01) {\n    const {\n      D,\n      error\n    } = findOptimalD(recent, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestParams = {\n        b,\n        D\n      };\n    }\n  }\n  return {\n    Qi,\n    b: bestParams.b,\n    D: bestParams.D\n  };\n};\nfunction findOptimalD(recentData, Qi, b) {\n  let bestD = 0.01,\n    bestError = Infinity;\n  for (let D = 0.001; D <= 0.5; D += 0.005) {\n    let err = 0;\n    for (const d of recentData) {\n      const pred = calculateRate(Qi, b, D, d.t);\n      err += (pred - d.value) ** 2;\n    }\n    if (err < bestError) {\n      bestError = err;\n      bestD = D;\n    }\n  }\n  // Refine around bestD\n  const Dmin = Math.max(0.001, bestD - 0.005);\n  const Dmax = bestD + 0.005;\n  for (let D = Dmin; D <= Dmax; D += 0.0005) {\n    let err = 0;\n    for (const d of recentData) {\n      const pred = calculateRate(Qi, b, D, d.t);\n      err += (pred - d.value) ** 2;\n    }\n    if (err < bestError) {\n      bestError = err;\n      bestD = D;\n    }\n  }\n  return {\n    D: bestD,\n    error: bestError\n  };\n}\nexport default function InteractiveDCAChart({\n  dataString,\n  startDate,\n  endDate,\n  colors,\n  yScaleType,\n  yMultiplier,\n  // Always 1 from parent.\n  forecastDays,\n  autoForecast = true,\n  onParametersCalculated\n}) {\n  _s();\n  const svgRef = useRef(null);\n  const xScaleRef = useRef(null);\n  // For tooltip: store hover info.\n  const [hoverInfo, setHoverInfo] = useState(null);\n\n  // Parse CSV data.\n  const parsedData = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      console.error(\"Error parsing CSV:\", err);\n      return [];\n    }\n  }, [dataString]);\n  const hasData = parsedData.length > 0;\n  const prodDateCol = hasData ? detectDateColumn(parsedData.columns) : \"Production_Date\";\n  const phasesDetected = hasData ? detectColumns(parsedData.columns) : {};\n  const filteredData = useMemo(() => {\n    if (!hasData) return [];\n    let arr = parsedData.map(row => ({\n      ...row,\n      [prodDateCol]: new Date(row[prodDateCol])\n    })).filter(row => !isNaN(row[prodDateCol].getTime()));\n    arr.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\n    if (startDate) {\n      const sd = new Date(startDate);\n      arr = arr.filter(row => row[prodDateCol] >= sd);\n    }\n    if (endDate) {\n      const ed = new Date(endDate);\n      arr = arr.filter(row => row[prodDateCol] <= ed);\n    }\n    return arr;\n  }, [parsedData, prodDateCol, startDate, endDate, hasData]);\n  const localHasData = filteredData.length > 0;\n  const firstDate = localHasData ? filteredData[0][prodDateCol] : new Date();\n  const data = useMemo(() => {\n    if (!localHasData) return [];\n    return filteredData.map(row => {\n      const date = row[prodDateCol];\n      return {\n        ...row,\n        t: (date - firstDate) / (1000 * 60 * 60 * 24)\n      };\n    });\n  }, [filteredData, localHasData, firstDate, prodDateCol]);\n  const phaseData = useMemo(() => {\n    let result = {};\n    Object.keys(phasesDetected).forEach(phase => {\n      result[phase] = data.map(d => ({\n        t: d.t,\n        value: +d[phasesDetected[phase]]\n      })).filter(d => !isNaN(d.value));\n    });\n    return result;\n  }, [data, phasesDetected]);\n  const tMax = localHasData ? d3.max(data, d => d.t) : 0;\n  const lastProdDate = localHasData ? d3.max(data, d => d[prodDateCol]) : new Date();\n  const [phaseParams, setPhaseParams] = useState({});\n  const [autoFitEnabled, setAutoFitEnabled] = useState(true);\n  const [activeKey, setActiveKey] = useState(null);\n\n  // Key events for adjusting parameters.\n  useEffect(() => {\n    const handleKeyDown = e => {\n      const key = e.key.toLowerCase();\n      if ([\"d\", \"q\", \"b\"].includes(key)) setActiveKey(key);\n    };\n    const handleKeyUp = () => setActiveKey(null);\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n\n  // Auto-fit decline parameters.\n  const prevParamsRef = useRef({});\n  useEffect(() => {\n    if (!localHasData) return;\n    let newParams = {};\n    Object.keys(phaseData).forEach(phase => {\n      const arr = phaseData[phase];\n      if (arr.length < 3) {\n        var _arr$;\n        newParams[phase] = {\n          Qi: (arr === null || arr === void 0 ? void 0 : (_arr$ = arr[0]) === null || _arr$ === void 0 ? void 0 : _arr$.value) || 100,\n          b: 0.9,\n          D: 0.01\n        };\n      } else {\n        newParams[phase] = fitDeclineParameters(arr);\n      }\n    });\n    if (autoFitEnabled && JSON.stringify(newParams) !== JSON.stringify(prevParamsRef.current)) {\n      prevParamsRef.current = newParams;\n      setPhaseParams(newParams);\n    }\n  }, [phaseData, localHasData, autoFitEnabled]);\n  const calculatedEUR = useMemo(() => {\n    let results = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      if (b === 0) results[phase] = Qi / D;else if (b > 0 && b < 1) results[phase] = Qi / (D * (1 - b));else if (b === 1) results[phase] = Qi * 10000;else results[phase] = \"N/A\";\n    });\n    return results;\n  }, [phaseParams]);\n\n  // Compute forecast average for first 60 days.\n  const forecastAverage = useMemo(() => {\n    let fa = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      const Q_start = calculateRate(Qi, b, D, tMax);\n      const steps = 60;\n      let sum = 0;\n      for (let i = 0; i <= steps; i++) {\n        const t = i / steps * 60;\n        const Q = b === 0 ? Q_start * Math.exp(-D * t) : Q_start / Math.pow(1 + b * D * t, 1 / b);\n        sum += Q;\n      }\n      fa[phase] = sum / (steps + 1);\n    });\n    return fa;\n  }, [phaseParams, tMax]);\n  useEffect(() => {\n    if (onParametersCalculated) {\n      onParametersCalculated({\n        phaseParams,\n        calculatedEUR,\n        forecastAverage\n      });\n    }\n  }, [phaseParams, calculatedEUR, forecastAverage, onParametersCalculated]);\n  const allHistoricalPoints = useMemo(() => {\n    let out = [];\n    Object.keys(phaseData).forEach(phase => {\n      phaseData[phase].forEach(d => {\n        out.push({\n          date: new Date(firstDate.getTime() + d.t * 86400000),\n          Q: d.value,\n          phase\n        });\n      });\n    });\n    return out;\n  }, [phaseData, firstDate]);\n  function calcForecast(Qi, b, D, tMaxVal, days) {\n    let Qstart = calculateRate(Qi, b, D, tMaxVal);\n    let arr = [];\n    const steps = 50;\n    for (let i = 0; i <= steps; i++) {\n      const dtFraction = i / steps * days;\n      const q = b === 0 ? Qstart * Math.exp(-D * dtFraction) : Qstart / Math.pow(1 + b * D * dtFraction, 1 / b);\n      const dt = new Date(lastProdDate.getTime() + dtFraction * 86400000);\n      arr.push({\n        date: dt,\n        Q: q\n      });\n    }\n    return arr;\n  }\n  const allForecastPoints = useMemo(() => {\n    let out = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      if (!Qi || D <= 0) {\n        out[phase] = [];\n      } else {\n        out[phase] = calcForecast(Qi, b, D, tMax, forecastDays).map(obj => ({\n          ...obj,\n          phase\n        }));\n      }\n    });\n    return out;\n  }, [phaseParams, tMax, forecastDays, localHasData]);\n  const combinedAll = useMemo(() => {\n    let arr = [...allHistoricalPoints];\n    Object.values(allForecastPoints).forEach(a => arr = arr.concat(a));\n    return arr;\n  }, [allHistoricalPoints, allForecastPoints]);\n\n  // D3 rendering.\n  useEffect(() => {\n    if (!localHasData) return;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 60\n    };\n    const width = 800;\n    const height = 400;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const [minDateDomain, maxDateDomain] = d3.extent(combinedAll, d => d.date);\n    let [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\n    if (yScaleType === \"log\" && minQ <= 0) minQ = 1e-2;\n    const xScale = d3.scaleTime().domain([minDateDomain, maxDateDomain]).range([margin.left, width - margin.right]);\n    xScaleRef.current = xScale;\n    const yDomain = yScaleType === \"log\" ? [Math.max(1e-5, minQ), maxQ] : [0, maxQ];\n    const yScale = yScaleType === \"log\" ? d3.scaleLog().domain(yDomain).range([height - margin.bottom, margin.top]) : d3.scaleLinear().domain(yDomain).range([height - margin.bottom, margin.top]);\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\n    const yAxis = yScaleType === \"log\" ? d3.axisLeft(yScale).ticks(6, \"~s\") : d3.axisLeft(yScale);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height - 5).style(\"text-anchor\", \"middle\").text(\"Date\");\n    svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", 15).style(\"text-anchor\", \"middle\").text(\"Production Rate\");\n\n    // Plot historical points.\n    Object.keys(phasesDetected).forEach(phase => {\n      const pts = allHistoricalPoints.filter(o => o.phase === phase);\n      svg.selectAll(`circle.hist-${phase}`).data(pts).enter().append(\"circle\").attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.Q)).attr(\"r\", 3).attr(\"fill\", colors[phase] || \"#888\");\n    });\n\n    // Plot decline lines with drag behavior.\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      const lineData = [];\n      const steps = 100;\n      for (let i = 0; i <= steps; i++) {\n        const frac = i / steps;\n        const tVal = tMax * frac;\n        const QVal = calculateRate(Qi, b, D, tVal);\n        const dt = new Date(firstDate.getTime() + tVal * 86400000);\n        lineData.push({\n          date: dt,\n          Q: QVal\n        });\n      }\n      const lineGen = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(lineData).attr(\"fill\", \"none\").attr(\"stroke\", colors[phase] || \"#888888\").attr(\"stroke-width\", 2).style(\"cursor\", \"pointer\").attr(\"d\", lineGen).call(d3.drag().on(\"drag\", event => {\n        if (autoFitEnabled) setAutoFitEnabled(false);\n        setPhaseParams(prev => {\n          const copy = {\n            ...prev\n          };\n          const curr = {\n            ...copy[phase]\n          };\n          if (activeKey === \"d\") {\n            curr.D = Math.max(0.0001, curr.D + event.dy * 0.001);\n          } else if (activeKey === \"q\") {\n            curr.Qi = Math.max(1, curr.Qi - event.dy);\n          } else if (activeKey === \"b\") {\n            curr.b = Math.max(0, Math.min(1, curr.b + event.dy * 0.005));\n          }\n          copy[phase] = curr;\n          return copy;\n        });\n      }));\n    });\n\n    // Plot forecast lines with hover/drag effects.\n    Object.keys(allForecastPoints).forEach(phase => {\n      const fc = allForecastPoints[phase];\n      if (fc.length > 1) {\n        const lineGenFc = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n        svg.append(\"path\").datum(fc).attr(\"fill\", \"none\").attr(\"stroke\", d3.color(colors[phase] || \"#888\").brighter(1.2)).attr(\"stroke-width\", 3).attr(\"stroke-dasharray\", \"5,3\").attr(\"d\", lineGenFc).on(\"mouseover\", function () {\n          d3.select(this).attr(\"stroke-width\", 5);\n        }).on(\"mouseout\", function () {\n          d3.select(this).attr(\"stroke-width\", 3);\n        }).on(\"mousedown\", function () {\n          d3.select(this).style(\"cursor\", \"grabbing\");\n        }).on(\"mouseup\", function () {\n          d3.select(this).style(\"cursor\", \"grab\");\n        });\n      }\n    });\n    svg.append(\"line\").attr(\"x1\", xScale(lastProdDate)).attr(\"y1\", margin.top).attr(\"x2\", xScale(lastProdDate)).attr(\"y2\", height - margin.bottom).attr(\"stroke\", \"#666\").attr(\"stroke-width\", 1).attr(\"stroke-dasharray\", \"5,5\");\n    svg.append(\"text\").attr(\"x\", xScale(lastProdDate) + 5).attr(\"y\", margin.top + 15).attr(\"fill\", \"#666\").text(\"Forecast →\");\n\n    // d3-zoom for vertical scaling (only update DOM, no state changes)\n    const zoomBehavior = d3.zoom().scaleExtent([0.5, 10]).on(\"zoom\", event => {\n      const newYScale = event.transform.rescaleY(yScale);\n      svg.selectAll(\"circle\").attr(\"cy\", d => newYScale(d.Q));\n      svg.selectAll(\"path\").each(function (d) {\n        if (Array.isArray(d)) {\n          const newLineGen = d3.line().x(dd => xScale(dd.date)).y(dd => newYScale(dd.Q)).curve(d3.curveMonotoneX);\n          d3.select(this).attr(\"d\", newLineGen(d));\n        }\n      });\n      svg.select(\"g\").call(yAxis.scale(newYScale));\n    });\n    svg.call(zoomBehavior);\n  }, [localHasData, combinedAll, firstDate, lastProdDate, yScaleType, forecastDays, autoFitEnabled, tMax, activeKey, phaseParams, colors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 800,\n      height: 400,\n      onMouseMove: event => {\n        if (!localHasData || !xScaleRef.current) return;\n        const [mouseX] = d3.pointer(event, svgRef.current);\n        const date = xScaleRef.current.invert(mouseX);\n        const t = (date - firstDate) / 86400000;\n        let vals = {};\n        Object.keys(phaseParams).forEach(phase => {\n          const {\n            Qi,\n            b,\n            D\n          } = phaseParams[phase] || {};\n          if (Qi && b !== undefined && D) {\n            vals[phase] = calculateRate(Qi, b, D, t);\n          }\n        });\n        setHoverInfo({\n          x: mouseX,\n          date,\n          values: vals\n        });\n      },\n      onMouseOut: () => setHoverInfo(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), hoverInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: hoverInfo.x + 5,\n        top: 0,\n        pointerEvents: 'none',\n        background: 'rgba(255,255,255,0.9)',\n        border: '1px solid #ccc',\n        padding: 5,\n        fontSize: 12,\n        borderRadius: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: hoverInfo.date.toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), Object.keys(hoverInfo.values).map(ph => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [ph.toUpperCase(), \": \", hoverInfo.values[ph].toFixed(2)]\n      }, ph, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractiveDCAChart, \"5wwLfyRXmIHOVTZ6OFk+LcFJqAY=\");\n_c = InteractiveDCAChart;\nvar _c;\n$RefreshReg$(_c, \"InteractiveDCAChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","d3","jsxDEV","_jsxDEV","calculateRate","Qi","b","D","t","Math","exp","pow","fitDeclineParameters","data","fitWindow","_data$","length","value","sorted","slice","sort","a","recent","min","bestParams","bestError","Infinity","error","findOptimalD","bmin","max","bmax","recentData","bestD","err","d","pred","Dmin","Dmax","InteractiveDCAChart","dataString","startDate","endDate","colors","yScaleType","yMultiplier","forecastDays","autoForecast","onParametersCalculated","_s","svgRef","xScaleRef","hoverInfo","setHoverInfo","parsedData","csvParse","console","hasData","prodDateCol","detectDateColumn","columns","phasesDetected","detectColumns","filteredData","arr","map","row","Date","filter","isNaN","getTime","sd","ed","localHasData","firstDate","date","phaseData","result","Object","keys","forEach","phase","tMax","lastProdDate","phaseParams","setPhaseParams","autoFitEnabled","setAutoFitEnabled","activeKey","setActiveKey","handleKeyDown","e","key","toLowerCase","includes","handleKeyUp","window","addEventListener","removeEventListener","prevParamsRef","newParams","_arr$","JSON","stringify","current","calculatedEUR","results","forecastAverage","fa","Q_start","steps","sum","i","Q","allHistoricalPoints","out","push","calcForecast","tMaxVal","days","Qstart","dtFraction","q","dt","allForecastPoints","obj","combinedAll","values","concat","margin","top","right","bottom","left","width","height","svg","select","selectAll","remove","minDateDomain","maxDateDomain","extent","minQ","maxQ","xScale","scaleTime","domain","range","yDomain","yScale","scaleLog","scaleLinear","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisLeft","ticks","append","attr","call","style","text","pts","o","enter","lineData","frac","tVal","QVal","lineGen","line","x","y","curve","curveMonotoneX","datum","drag","on","event","prev","copy","curr","dy","fc","lineGenFc","color","brighter","zoomBehavior","zoom","scaleExtent","newYScale","transform","rescaleY","each","Array","isArray","newLineGen","dd","scale","position","children","ref","onMouseMove","mouseX","pointer","invert","vals","undefined","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","pointerEvents","background","border","padding","fontSize","borderRadius","toDateString","ph","toUpperCase","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/InteractiveDCAChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst calculateRate = (Qi, b, D, t) => {\r\n  if (b === 0) {\r\n    return Qi * Math.exp(-D * t);\r\n  }\r\n  return Qi / Math.pow(1 + b * D * t, 1 / b);\r\n};\r\n\r\nconst fitDeclineParameters = (data, fitWindow = 60) => {\r\n  if (!data || data.length < 3)\r\n    return { Qi: data?.[0]?.value || 100, b: 0.9, D: 0.01 };\r\n\r\n  const sorted = data.slice().sort((a, b) => a.t - b.t);\r\n  const Qi = sorted[0].value;\r\n  const recent = sorted.slice(-Math.min(fitWindow, sorted.length));\r\n  let bestParams = { b: 0, D: 0.01 }, bestError = Infinity;\r\n\r\n  // Coarse search for b\r\n  for (let b = 0; b <= 1; b += 0.1) {\r\n    const { D, error } = findOptimalD(recent, Qi, b);\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestParams = { b, D };\r\n    }\r\n  }\r\n  // Refine b\r\n  const bmin = Math.max(0, bestParams.b - 0.1);\r\n  const bmax = Math.min(1, bestParams.b + 0.1);\r\n  for (let b = bmin; b <= bmax; b += 0.01) {\r\n    const { D, error } = findOptimalD(recent, Qi, b);\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestParams = { b, D };\r\n    }\r\n  }\r\n  return { Qi, b: bestParams.b, D: bestParams.D };\r\n};\r\n\r\nfunction findOptimalD(recentData, Qi, b) {\r\n  let bestD = 0.01, bestError = Infinity;\r\n  for (let D = 0.001; D <= 0.5; D += 0.005) {\r\n    let err = 0;\r\n    for (const d of recentData) {\r\n      const pred = calculateRate(Qi, b, D, d.t);\r\n      err += (pred - d.value) ** 2;\r\n    }\r\n    if (err < bestError) {\r\n      bestError = err;\r\n      bestD = D;\r\n    }\r\n  }\r\n  // Refine around bestD\r\n  const Dmin = Math.max(0.001, bestD - 0.005);\r\n  const Dmax = bestD + 0.005;\r\n  for (let D = Dmin; D <= Dmax; D += 0.0005) {\r\n    let err = 0;\r\n    for (const d of recentData) {\r\n      const pred = calculateRate(Qi, b, D, d.t);\r\n      err += (pred - d.value) ** 2;\r\n    }\r\n    if (err < bestError) {\r\n      bestError = err;\r\n      bestD = D;\r\n    }\r\n  }\r\n  return { D: bestD, error: bestError };\r\n}\r\n\r\nexport default function InteractiveDCAChart({\r\n  dataString,\r\n  startDate,\r\n  endDate,\r\n  colors,\r\n  yScaleType,\r\n  yMultiplier, // Always 1 from parent.\r\n  forecastDays,\r\n  autoForecast = true,\r\n  onParametersCalculated\r\n}) {\r\n  const svgRef = useRef(null);\r\n  const xScaleRef = useRef(null);\r\n  // For tooltip: store hover info.\r\n  const [hoverInfo, setHoverInfo] = useState(null);\r\n\r\n  // Parse CSV data.\r\n  const parsedData = useMemo(() => {\r\n    try {\r\n      return d3.csvParse(dataString);\r\n    } catch (err) {\r\n      console.error(\"Error parsing CSV:\", err);\r\n      return [];\r\n    }\r\n  }, [dataString]);\r\n\r\n  const hasData = parsedData.length > 0;\r\n  const prodDateCol = hasData ? detectDateColumn(parsedData.columns) : \"Production_Date\";\r\n  const phasesDetected = hasData ? detectColumns(parsedData.columns) : {};\r\n  const filteredData = useMemo(() => {\r\n    if (!hasData) return [];\r\n    let arr = parsedData.map(row => ({\r\n      ...row,\r\n      [prodDateCol]: new Date(row[prodDateCol])\r\n    })).filter(row => !isNaN(row[prodDateCol].getTime()));\r\n    arr.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\r\n    if (startDate) {\r\n      const sd = new Date(startDate);\r\n      arr = arr.filter(row => row[prodDateCol] >= sd);\r\n    }\r\n    if (endDate) {\r\n      const ed = new Date(endDate);\r\n      arr = arr.filter(row => row[prodDateCol] <= ed);\r\n    }\r\n    return arr;\r\n  }, [parsedData, prodDateCol, startDate, endDate, hasData]);\r\n\r\n  const localHasData = filteredData.length > 0;\r\n  const firstDate = localHasData ? filteredData[0][prodDateCol] : new Date();\r\n\r\n  const data = useMemo(() => {\r\n    if (!localHasData) return [];\r\n    return filteredData.map(row => {\r\n      const date = row[prodDateCol];\r\n      return { ...row, t: (date - firstDate) / (1000 * 60 * 60 * 24) };\r\n    });\r\n  }, [filteredData, localHasData, firstDate, prodDateCol]);\r\n\r\n  const phaseData = useMemo(() => {\r\n    let result = {};\r\n    Object.keys(phasesDetected).forEach(phase => {\r\n      result[phase] = data.map(d => ({\r\n        t: d.t,\r\n        value: +d[phasesDetected[phase]]\r\n      })).filter(d => !isNaN(d.value));\r\n    });\r\n    return result;\r\n  }, [data, phasesDetected]);\r\n\r\n  const tMax = localHasData ? d3.max(data, d => d.t) : 0;\r\n  const lastProdDate = localHasData\r\n    ? d3.max(data, d => d[prodDateCol])\r\n    : new Date();\r\n\r\n  const [phaseParams, setPhaseParams] = useState({});\r\n  const [autoFitEnabled, setAutoFitEnabled] = useState(true);\r\n  const [activeKey, setActiveKey] = useState(null);\r\n\r\n  // Key events for adjusting parameters.\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      const key = e.key.toLowerCase();\r\n      if ([\"d\", \"q\", \"b\"].includes(key)) setActiveKey(key);\r\n    };\r\n    const handleKeyUp = () => setActiveKey(null);\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      window.removeEventListener(\"keyup\", handleKeyUp);\r\n    };\r\n  }, []);\r\n\r\n  // Auto-fit decline parameters.\r\n  const prevParamsRef = useRef({});\r\n  useEffect(() => {\r\n    if (!localHasData) return;\r\n    let newParams = {};\r\n    Object.keys(phaseData).forEach(phase => {\r\n      const arr = phaseData[phase];\r\n      if (arr.length < 3) {\r\n        newParams[phase] = { Qi: arr?.[0]?.value || 100, b: 0.9, D: 0.01 };\r\n      } else {\r\n        newParams[phase] = fitDeclineParameters(arr);\r\n      }\r\n    });\r\n    if (autoFitEnabled && JSON.stringify(newParams) !== JSON.stringify(prevParamsRef.current)) {\r\n      prevParamsRef.current = newParams;\r\n      setPhaseParams(newParams);\r\n    }\r\n  }, [phaseData, localHasData, autoFitEnabled]);\r\n\r\n  const calculatedEUR = useMemo(() => {\r\n    let results = {};\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      if (b === 0) results[phase] = Qi / D;\r\n      else if (b > 0 && b < 1) results[phase] = Qi / (D * (1 - b));\r\n      else if (b === 1) results[phase] = Qi * 10000;\r\n      else results[phase] = \"N/A\";\r\n    });\r\n    return results;\r\n  }, [phaseParams]);\r\n\r\n  // Compute forecast average for first 60 days.\r\n  const forecastAverage = useMemo(() => {\r\n    let fa = {};\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      const Q_start = calculateRate(Qi, b, D, tMax);\r\n      const steps = 60;\r\n      let sum = 0;\r\n      for (let i = 0; i <= steps; i++) {\r\n        const t = (i / steps) * 60;\r\n        const Q = b === 0 ? Q_start * Math.exp(-D * t) : Q_start / Math.pow(1 + b * D * t, 1 / b);\r\n        sum += Q;\r\n      }\r\n      fa[phase] = sum / (steps + 1);\r\n    });\r\n    return fa;\r\n  }, [phaseParams, tMax]);\r\n\r\n  useEffect(() => {\r\n    if (onParametersCalculated) {\r\n      onParametersCalculated({ phaseParams, calculatedEUR, forecastAverage });\r\n    }\r\n  }, [phaseParams, calculatedEUR, forecastAverage, onParametersCalculated]);\r\n\r\n  const allHistoricalPoints = useMemo(() => {\r\n    let out = [];\r\n    Object.keys(phaseData).forEach(phase => {\r\n      phaseData[phase].forEach(d => {\r\n        out.push({\r\n          date: new Date(firstDate.getTime() + d.t * 86400000),\r\n          Q: d.value,\r\n          phase\r\n        });\r\n      });\r\n    });\r\n    return out;\r\n  }, [phaseData, firstDate]);\r\n\r\n  function calcForecast(Qi, b, D, tMaxVal, days) {\r\n    let Qstart = calculateRate(Qi, b, D, tMaxVal);\r\n    let arr = [];\r\n    const steps = 50;\r\n    for (let i = 0; i <= steps; i++) {\r\n      const dtFraction = (i / steps) * days;\r\n      const q = b === 0 ? Qstart * Math.exp(-D * dtFraction) : Qstart / Math.pow(1 + b * D * dtFraction, 1 / b);\r\n      const dt = new Date(lastProdDate.getTime() + dtFraction * 86400000);\r\n      arr.push({ date: dt, Q: q });\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  const allForecastPoints = useMemo(() => {\r\n    let out = {};\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      if (!Qi || D <= 0) {\r\n        out[phase] = [];\r\n      } else {\r\n        out[phase] = calcForecast(Qi, b, D, tMax, forecastDays).map(obj => ({\r\n          ...obj,\r\n          phase\r\n        }));\r\n      }\r\n    });\r\n    return out;\r\n  }, [phaseParams, tMax, forecastDays, localHasData]);\r\n\r\n  const combinedAll = useMemo(() => {\r\n    let arr = [...allHistoricalPoints];\r\n    Object.values(allForecastPoints).forEach(a => (arr = arr.concat(a)));\r\n    return arr;\r\n  }, [allHistoricalPoints, allForecastPoints]);\r\n\r\n  // D3 rendering.\r\n  useEffect(() => {\r\n    if (!localHasData) return;\r\n    const margin = { top: 20, right: 30, bottom: 40, left: 60 };\r\n    const width = 800;\r\n    const height = 400;\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    const [minDateDomain, maxDateDomain] = d3.extent(combinedAll, d => d.date);\r\n    let [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\r\n    if (yScaleType === \"log\" && minQ <= 0) minQ = 1e-2;\r\n    const xScale = d3.scaleTime()\r\n      .domain([minDateDomain, maxDateDomain])\r\n      .range([margin.left, width - margin.right]);\r\n    xScaleRef.current = xScale;\r\n    const yDomain = yScaleType === \"log\" ? [Math.max(1e-5, minQ), maxQ] : [0, maxQ];\r\n    const yScale = yScaleType === \"log\"\r\n      ? d3.scaleLog().domain(yDomain).range([height - margin.bottom, margin.top])\r\n      : d3.scaleLinear().domain(yDomain).range([height - margin.bottom, margin.top]);\r\n\r\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\r\n    const yAxis = yScaleType === \"log\" ? d3.axisLeft(yScale).ticks(6, \"~s\") : d3.axisLeft(yScale);\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n      .call(xAxis)\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\");\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},0)`)\r\n      .call(yAxis);\r\n    svg.append(\"text\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", height - 5)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Date\");\r\n    svg.append(\"text\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"x\", -height / 2)\r\n      .attr(\"y\", 15)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Production Rate\");\r\n\r\n    // Plot historical points.\r\n    Object.keys(phasesDetected).forEach(phase => {\r\n      const pts = allHistoricalPoints.filter(o => o.phase === phase);\r\n      svg.selectAll(`circle.hist-${phase}`)\r\n        .data(pts)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"cx\", d => xScale(d.date))\r\n        .attr(\"cy\", d => yScale(d.Q))\r\n        .attr(\"r\", 3)\r\n        .attr(\"fill\", colors[phase] || \"#888\");\r\n    });\r\n\r\n    // Plot decline lines with drag behavior.\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      const lineData = [];\r\n      const steps = 100;\r\n      for (let i = 0; i <= steps; i++) {\r\n        const frac = i / steps;\r\n        const tVal = tMax * frac;\r\n        const QVal = calculateRate(Qi, b, D, tVal);\r\n        const dt = new Date(firstDate.getTime() + tVal * 86400000);\r\n        lineData.push({ date: dt, Q: QVal });\r\n      }\r\n      const lineGen = d3.line()\r\n        .x(d => xScale(d.date))\r\n        .y(d => yScale(d.Q))\r\n        .curve(d3.curveMonotoneX);\r\n      svg.append(\"path\")\r\n        .datum(lineData)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", colors[phase] || \"#888888\")\r\n        .attr(\"stroke-width\", 2)\r\n        .style(\"cursor\", \"pointer\")\r\n        .attr(\"d\", lineGen)\r\n        .call(\r\n          d3.drag().on(\"drag\", (event) => {\r\n            if (autoFitEnabled) setAutoFitEnabled(false);\r\n            setPhaseParams(prev => {\r\n              const copy = { ...prev };\r\n              const curr = { ...copy[phase] };\r\n              if (activeKey === \"d\") {\r\n                curr.D = Math.max(0.0001, curr.D + event.dy * 0.001);\r\n              } else if (activeKey === \"q\") {\r\n                curr.Qi = Math.max(1, curr.Qi - event.dy);\r\n              } else if (activeKey === \"b\") {\r\n                curr.b = Math.max(0, Math.min(1, curr.b + event.dy * 0.005));\r\n              }\r\n              copy[phase] = curr;\r\n              return copy;\r\n            });\r\n          })\r\n        );\r\n    });\r\n\r\n    // Plot forecast lines with hover/drag effects.\r\n    Object.keys(allForecastPoints).forEach(phase => {\r\n      const fc = allForecastPoints[phase];\r\n      if (fc.length > 1) {\r\n        const lineGenFc = d3.line()\r\n          .x(d => xScale(d.date))\r\n          .y(d => yScale(d.Q))\r\n          .curve(d3.curveMonotoneX);\r\n        svg.append(\"path\")\r\n          .datum(fc)\r\n          .attr(\"fill\", \"none\")\r\n          .attr(\"stroke\", d3.color(colors[phase] || \"#888\").brighter(1.2))\r\n          .attr(\"stroke-width\", 3)\r\n          .attr(\"stroke-dasharray\", \"5,3\")\r\n          .attr(\"d\", lineGenFc)\r\n          .on(\"mouseover\", function() {\r\n            d3.select(this).attr(\"stroke-width\", 5);\r\n          })\r\n          .on(\"mouseout\", function() {\r\n            d3.select(this).attr(\"stroke-width\", 3);\r\n          })\r\n          .on(\"mousedown\", function() {\r\n            d3.select(this).style(\"cursor\", \"grabbing\");\r\n          })\r\n          .on(\"mouseup\", function() {\r\n            d3.select(this).style(\"cursor\", \"grab\");\r\n          });\r\n      }\r\n    });\r\n\r\n    svg.append(\"line\")\r\n      .attr(\"x1\", xScale(lastProdDate))\r\n      .attr(\"y1\", margin.top)\r\n      .attr(\"x2\", xScale(lastProdDate))\r\n      .attr(\"y2\", height - margin.bottom)\r\n      .attr(\"stroke\", \"#666\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-dasharray\", \"5,5\");\r\n    svg.append(\"text\")\r\n      .attr(\"x\", xScale(lastProdDate) + 5)\r\n      .attr(\"y\", margin.top + 15)\r\n      .attr(\"fill\", \"#666\")\r\n      .text(\"Forecast →\");\r\n\r\n    // d3-zoom for vertical scaling (only update DOM, no state changes)\r\n    const zoomBehavior = d3.zoom()\r\n      .scaleExtent([0.5, 10])\r\n      .on(\"zoom\", (event) => {\r\n        const newYScale = event.transform.rescaleY(yScale);\r\n        svg.selectAll(\"circle\").attr(\"cy\", d => newYScale(d.Q));\r\n        svg.selectAll(\"path\").each(function(d) {\r\n          if (Array.isArray(d)) {\r\n            const newLineGen = d3.line()\r\n              .x(dd => xScale(dd.date))\r\n              .y(dd => newYScale(dd.Q))\r\n              .curve(d3.curveMonotoneX);\r\n            d3.select(this).attr(\"d\", newLineGen(d));\r\n          }\r\n        });\r\n        svg.select(\"g\").call(yAxis.scale(newYScale));\r\n      });\r\n    svg.call(zoomBehavior);\r\n  }, [\r\n    localHasData,\r\n    combinedAll,\r\n    firstDate,\r\n    lastProdDate,\r\n    yScaleType,\r\n    forecastDays,\r\n    autoFitEnabled,\r\n    tMax,\r\n    activeKey,\r\n    phaseParams,\r\n    colors\r\n  ]);\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <svg\r\n        ref={svgRef}\r\n        width={800}\r\n        height={400}\r\n        onMouseMove={(event) => {\r\n          if (!localHasData || !xScaleRef.current) return;\r\n          const [mouseX] = d3.pointer(event, svgRef.current);\r\n          const date = xScaleRef.current.invert(mouseX);\r\n          const t = (date - firstDate) / 86400000;\r\n          let vals = {};\r\n          Object.keys(phaseParams).forEach(phase => {\r\n            const { Qi, b, D } = phaseParams[phase] || {};\r\n            if (Qi && b !== undefined && D) {\r\n              vals[phase] = calculateRate(Qi, b, D, t);\r\n            }\r\n          });\r\n          setHoverInfo({ x: mouseX, date, values: vals });\r\n        }}\r\n        onMouseOut={() => setHoverInfo(null)}\r\n      />\r\n      {hoverInfo && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            left: hoverInfo.x + 5,\r\n            top: 0,\r\n            pointerEvents: 'none',\r\n            background: 'rgba(255,255,255,0.9)',\r\n            border: '1px solid #ccc',\r\n            padding: 5,\r\n            fontSize: 12,\r\n            borderRadius: 4\r\n          }}\r\n        >\r\n          <div>{hoverInfo.date.toDateString()}</div>\r\n          {Object.keys(hoverInfo.values).map(ph => (\r\n            <div key={ph}>\r\n              {ph.toUpperCase()}: {hoverInfo.values[ph].toFixed(2)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}