{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\InteractiveDCAChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveDCAChart = ({\n  data,\n  columns\n}) => {\n  _s();\n  const svgRef = useRef();\n  const width = 900;\n  const height = 500;\n  const [params, setParams] = useState({\n    oil: {\n      Qi: 100,\n      b: 0.9,\n      D: 0.01\n    },\n    water: {\n      Qi: 100,\n      b: 0.9,\n      D: 0.01\n    },\n    gas: {\n      Qi: 100,\n      b: 0.9,\n      D: 0.01\n    },\n    pressure: {\n      Qi: 100,\n      b: 0.9,\n      D: 0.01\n    }\n  });\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const parseDate = d3.timeParse(\"%Y-%m-%d\");\n    const prodData = data.map(d => ({\n      date: parseDate(d[columns.date].slice(0, 10)),\n      oil: +d[columns.oil],\n      water: columns.water ? +d[columns.water] : null,\n      gas: columns.gas ? +d[columns.gas] : null,\n      pressure: columns.pressure ? +d[columns.pressure] : null\n    })).filter(d => d.date);\n    prodData.sort((a, b) => a.date - b.date);\n    const xScale = d3.scaleTime().domain(d3.extent(prodData, d => d.date)).range([50, width - 50]);\n    const yMax = d3.max(prodData, d => Math.max(d.oil, d.water || 0, d.gas || 0, d.pressure || 0));\n    const yScale = d3.scaleLinear().domain([0, yMax * 1.2]).range([height - 50, 50]);\n\n    // Axes\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - 50})`).call(d3.axisBottom(xScale));\n    svg.append(\"g\").attr(\"transform\", `translate(50,0)`).call(d3.axisLeft(yScale));\n\n    // Historical Lines\n    [\"oil\", \"water\", \"gas\", \"pressure\"].forEach(key => {\n      if (!columns[key]) return;\n      const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d[key]));\n      svg.append(\"path\").datum(prodData).attr(\"fill\", \"none\").attr(\"stroke\", key === \"oil\" ? \"green\" : key === \"water\" ? \"blue\" : key === \"gas\" ? \"red\" : \"black\").attr(\"stroke-width\", 2).attr(\"d\", line);\n    });\n\n    // Forecast Lines (simplified, from today, constant Qi initially at 100)\n    const today = new Date();\n    const futureDates = d3.timeDays(today, d3.timeMonth.offset(today, 6));\n    [\"oil\", \"water\", \"gas\", \"pressure\"].forEach(key => {\n      if (!columns[key]) return;\n      const forecastLine = d3.line().x((d, i) => xScale(d)).y((d, i) => yScale(params[key].Qi / Math.pow(1 + params[key].b * params[key].D * i, 1 / params[key].b)));\n      svg.append(\"path\").datum(futureDates).attr(\"fill\", \"none\").attr(\"stroke\", key === \"oil\" ? \"#7fc97f\" : key === \"water\" ? \"#add8e6\" : key === \"gas\" ? \"#f08080\" : \"#a9a9a9\").attr(\"stroke-width\", 3).attr(\"stroke-dasharray\", \"5,3\").attr(\"d\", forecastLine);\n    });\n  }, [data, columns, params]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Interactive DCA Chart (Basic)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveDCAChart, \"Y8lScH+1QfVoRyfST9ertL1SWD4=\");\n_c = InteractiveDCAChart;\nexport default InteractiveDCAChart;\nvar _c;\n$RefreshReg$(_c, \"InteractiveDCAChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","InteractiveDCAChart","data","columns","_s","svgRef","width","height","params","setParams","oil","Qi","b","D","water","gas","pressure","svg","select","current","selectAll","remove","parseDate","timeParse","prodData","map","d","date","slice","filter","sort","a","xScale","scaleTime","domain","extent","range","yMax","max","Math","yScale","scaleLinear","append","attr","call","axisBottom","axisLeft","forEach","key","line","x","y","datum","today","Date","futureDates","timeDays","timeMonth","offset","forecastLine","i","pow","children","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/InteractiveDCAChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst InteractiveDCAChart = ({ data, columns }) => {\r\n  const svgRef = useRef();\r\n  const width = 900;\r\n  const height = 500;\r\n\r\n  const [params, setParams] = useState({\r\n    oil: { Qi: 100, b: 0.9, D: 0.01 },\r\n    water: { Qi: 100, b: 0.9, D: 0.01 },\r\n    gas: { Qi: 100, b: 0.9, D: 0.01 },\r\n    pressure: { Qi: 100, b: 0.9, D: 0.01 },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    const parseDate = d3.timeParse(\"%Y-%m-%d\");\r\n    const prodData = data.map(d => ({\r\n      date: parseDate(d[columns.date].slice(0,10)),\r\n      oil: +d[columns.oil],\r\n      water: columns.water ? +d[columns.water] : null,\r\n      gas: columns.gas ? +d[columns.gas] : null,\r\n      pressure: columns.pressure ? +d[columns.pressure] : null\r\n    })).filter(d => d.date);\r\n\r\n    prodData.sort((a,b) => a.date - b.date);\r\n    const xScale = d3.scaleTime()\r\n      .domain(d3.extent(prodData, d => d.date))\r\n      .range([50, width - 50]);\r\n\r\n    const yMax = d3.max(prodData, d => Math.max(d.oil, d.water || 0, d.gas || 0, d.pressure || 0));\r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, yMax * 1.2])\r\n      .range([height - 50, 50]);\r\n\r\n    // Axes\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height - 50})`)\r\n      .call(d3.axisBottom(xScale));\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(50,0)`)\r\n      .call(d3.axisLeft(yScale));\r\n\r\n    // Historical Lines\r\n    [\"oil\", \"water\", \"gas\", \"pressure\"].forEach(key => {\r\n      if (!columns[key]) return;\r\n      const line = d3.line()\r\n        .x(d => xScale(d.date))\r\n        .y(d => yScale(d[key]));\r\n\r\n      svg.append(\"path\")\r\n        .datum(prodData)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", key===\"oil\"?\"green\":key===\"water\"?\"blue\":key===\"gas\"?\"red\":\"black\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"d\", line);\r\n    });\r\n\r\n    // Forecast Lines (simplified, from today, constant Qi initially at 100)\r\n    const today = new Date();\r\n    const futureDates = d3.timeDays(today, d3.timeMonth.offset(today,6));\r\n    [\"oil\", \"water\", \"gas\", \"pressure\"].forEach(key => {\r\n      if (!columns[key]) return;\r\n      const forecastLine = d3.line()\r\n        .x((d,i) => xScale(d))\r\n        .y((d,i) => yScale(params[key].Qi / Math.pow((1 + params[key].b * params[key].D * i), (1/params[key].b))));\r\n\r\n      svg.append(\"path\")\r\n        .datum(futureDates)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", key===\"oil\"?\"#7fc97f\":key===\"water\"?\"#add8e6\":key===\"gas\"?\"#f08080\":\"#a9a9a9\")\r\n        .attr(\"stroke-width\", 3)\r\n        .attr(\"stroke-dasharray\", \"5,3\")\r\n        .attr(\"d\", forecastLine);\r\n    });\r\n\r\n  }, [data, columns, params]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{marginTop:\"20px\"}}>Interactive DCA Chart (Basic)</h3>\r\n      <svg ref={svgRef} width={width} height={height}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveDCAChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,MAAM,GAAGT,MAAM,CAAC,CAAC;EACvB,MAAMU,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAElB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC;IACnCa,GAAG,EAAE;MAAEC,EAAE,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAK,CAAC;IACjCC,KAAK,EAAE;MAAEH,EAAE,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAK,CAAC;IACnCE,GAAG,EAAE;MAAEJ,EAAE,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAK,CAAC;IACjCG,QAAQ,EAAE;MAAEL,EAAE,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAK;EACvC,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACd,MAAMsB,GAAG,GAAGnB,EAAE,CAACoB,MAAM,CAACb,MAAM,CAACc,OAAO,CAAC;IACrCF,GAAG,CAACG,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAE3B,MAAMC,SAAS,GAAGxB,EAAE,CAACyB,SAAS,CAAC,UAAU,CAAC;IAC1C,MAAMC,QAAQ,GAAGtB,IAAI,CAACuB,GAAG,CAACC,CAAC,KAAK;MAC9BC,IAAI,EAAEL,SAAS,CAACI,CAAC,CAACvB,OAAO,CAACwB,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;MAC5ClB,GAAG,EAAE,CAACgB,CAAC,CAACvB,OAAO,CAACO,GAAG,CAAC;MACpBI,KAAK,EAAEX,OAAO,CAACW,KAAK,GAAG,CAACY,CAAC,CAACvB,OAAO,CAACW,KAAK,CAAC,GAAG,IAAI;MAC/CC,GAAG,EAAEZ,OAAO,CAACY,GAAG,GAAG,CAACW,CAAC,CAACvB,OAAO,CAACY,GAAG,CAAC,GAAG,IAAI;MACzCC,QAAQ,EAAEb,OAAO,CAACa,QAAQ,GAAG,CAACU,CAAC,CAACvB,OAAO,CAACa,QAAQ,CAAC,GAAG;IACtD,CAAC,CAAC,CAAC,CAACa,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;IAEvBH,QAAQ,CAACM,IAAI,CAAC,CAACC,CAAC,EAACnB,CAAC,KAAKmB,CAAC,CAACJ,IAAI,GAAGf,CAAC,CAACe,IAAI,CAAC;IACvC,MAAMK,MAAM,GAAGlC,EAAE,CAACmC,SAAS,CAAC,CAAC,CAC1BC,MAAM,CAACpC,EAAE,CAACqC,MAAM,CAACX,QAAQ,EAAEE,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CACxCS,KAAK,CAAC,CAAC,EAAE,EAAE9B,KAAK,GAAG,EAAE,CAAC,CAAC;IAE1B,MAAM+B,IAAI,GAAGvC,EAAE,CAACwC,GAAG,CAACd,QAAQ,EAAEE,CAAC,IAAIa,IAAI,CAACD,GAAG,CAACZ,CAAC,CAAChB,GAAG,EAAEgB,CAAC,CAACZ,KAAK,IAAI,CAAC,EAAEY,CAAC,CAACX,GAAG,IAAI,CAAC,EAAEW,CAAC,CAACV,QAAQ,IAAI,CAAC,CAAC,CAAC;IAC9F,MAAMwB,MAAM,GAAG1C,EAAE,CAAC2C,WAAW,CAAC,CAAC,CAC5BP,MAAM,CAAC,CAAC,CAAC,EAAEG,IAAI,GAAG,GAAG,CAAC,CAAC,CACvBD,KAAK,CAAC,CAAC7B,MAAM,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE3B;IACAU,GAAG,CAACyB,MAAM,CAAC,GAAG,CAAC,CACZC,IAAI,CAAC,WAAW,EAAE,eAAepC,MAAM,GAAG,EAAE,GAAG,CAAC,CAChDqC,IAAI,CAAC9C,EAAE,CAAC+C,UAAU,CAACb,MAAM,CAAC,CAAC;IAC9Bf,GAAG,CAACyB,MAAM,CAAC,GAAG,CAAC,CACZC,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,CACpCC,IAAI,CAAC9C,EAAE,CAACgD,QAAQ,CAACN,MAAM,CAAC,CAAC;;IAE5B;IACA,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,CAACO,OAAO,CAACC,GAAG,IAAI;MACjD,IAAI,CAAC7C,OAAO,CAAC6C,GAAG,CAAC,EAAE;MACnB,MAAMC,IAAI,GAAGnD,EAAE,CAACmD,IAAI,CAAC,CAAC,CACnBC,CAAC,CAACxB,CAAC,IAAIM,MAAM,CAACN,CAAC,CAACC,IAAI,CAAC,CAAC,CACtBwB,CAAC,CAACzB,CAAC,IAAIc,MAAM,CAACd,CAAC,CAACsB,GAAG,CAAC,CAAC,CAAC;MAEzB/B,GAAG,CAACyB,MAAM,CAAC,MAAM,CAAC,CACfU,KAAK,CAAC5B,QAAQ,CAAC,CACfmB,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAEK,GAAG,KAAG,KAAK,GAAC,OAAO,GAACA,GAAG,KAAG,OAAO,GAAC,MAAM,GAACA,GAAG,KAAG,KAAK,GAAC,KAAK,GAAC,OAAO,CAAC,CAClFL,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,GAAG,EAAEM,IAAI,CAAC;IACpB,CAAC,CAAC;;IAEF;IACA,MAAMI,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAGzD,EAAE,CAAC0D,QAAQ,CAACH,KAAK,EAAEvD,EAAE,CAAC2D,SAAS,CAACC,MAAM,CAACL,KAAK,EAAC,CAAC,CAAC,CAAC;IACpE,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,CAACN,OAAO,CAACC,GAAG,IAAI;MACjD,IAAI,CAAC7C,OAAO,CAAC6C,GAAG,CAAC,EAAE;MACnB,MAAMW,YAAY,GAAG7D,EAAE,CAACmD,IAAI,CAAC,CAAC,CAC3BC,CAAC,CAAC,CAACxB,CAAC,EAACkC,CAAC,KAAK5B,MAAM,CAACN,CAAC,CAAC,CAAC,CACrByB,CAAC,CAAC,CAACzB,CAAC,EAACkC,CAAC,KAAKpB,MAAM,CAAChC,MAAM,CAACwC,GAAG,CAAC,CAACrC,EAAE,GAAG4B,IAAI,CAACsB,GAAG,CAAE,CAAC,GAAGrD,MAAM,CAACwC,GAAG,CAAC,CAACpC,CAAC,GAAGJ,MAAM,CAACwC,GAAG,CAAC,CAACnC,CAAC,GAAG+C,CAAC,EAAI,CAAC,GAACpD,MAAM,CAACwC,GAAG,CAAC,CAACpC,CAAE,CAAC,CAAC,CAAC;MAE5GK,GAAG,CAACyB,MAAM,CAAC,MAAM,CAAC,CACfU,KAAK,CAACG,WAAW,CAAC,CAClBZ,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAEK,GAAG,KAAG,KAAK,GAAC,SAAS,GAACA,GAAG,KAAG,OAAO,GAAC,SAAS,GAACA,GAAG,KAAG,KAAK,GAAC,SAAS,GAAC,SAAS,CAAC,CAC7FL,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAC/BA,IAAI,CAAC,GAAG,EAAEgB,YAAY,CAAC;IAC5B,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACzD,IAAI,EAAEC,OAAO,EAAEK,MAAM,CAAC,CAAC;EAE3B,oBACER,OAAA;IAAA8D,QAAA,gBACE9D,OAAA;MAAI+D,KAAK,EAAE;QAACC,SAAS,EAAC;MAAM,CAAE;MAAAF,QAAA,EAAC;IAA6B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjEpE,OAAA;MAAKqE,GAAG,EAAEhE,MAAO;MAACC,KAAK,EAAEA,KAAM;MAACC,MAAM,EAAEA;IAAO;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAAChE,EAAA,CApFIH,mBAAmB;AAAAqE,EAAA,GAAnBrE,mBAAmB;AAsFzB,eAAeA,mBAAmB;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}