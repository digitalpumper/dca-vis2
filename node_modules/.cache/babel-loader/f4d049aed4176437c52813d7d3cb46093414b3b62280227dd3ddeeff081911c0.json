{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport queryString from 'query-string';\nimport * as XLSX from 'xlsx';\nimport * as d3 from 'd3';\nimport InteractiveDCAChart from './InteractiveDCAChart';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\n// Helper: Auto-detect the production date column.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction detectDateColumn(headers) {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return lower.includes(\"prod\") && lower.includes(\"date\") || lower.includes(\"proddt\") || lower.includes(\"proddttm\") || lower === \"date\" || lower === \"datetime\";\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n}\nfunction App() {\n  _s();\n  // Basic state.\n  const [secret, setSecret] = useState('');\n  const [dataString, setDataString] = useState('');\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Date filter state.\n  const [minDate, setMinDate] = useState(null);\n  const [maxDate, setMaxDate] = useState(null);\n  const [dateRange, setDateRange] = useState([0, 0]);\n\n  // Toggles.\n  const [showDataInput, setShowDataInput] = useState(false);\n  const [showParameters, setShowParameters] = useState(false);\n  const [showInstructions, setShowInstructions] = useState(false);\n\n  // Sidebar controls.\n  const [colors, setColors] = useState({\n    oil: \"#008000\",\n    water: \"#0000ff\",\n    gas: \"#ff0000\",\n    pressure: \"#000000\"\n  });\n  const [yScaleType, setYScaleType] = useState(\"linear\");\n  const [yMultiplier, setYMultiplier] = useState(1.1);\n  const [forecastDays, setForecastDays] = useState(90);\n\n  // Chart reset key.\n  const [chartKey, setChartKey] = useState(0);\n  const resetAutoFit = () => {\n    setChartKey(prev => prev + 1);\n  };\n\n  // Computed parameters from chart.\n  const [chartParams, setChartParams] = useState(null);\n\n  // 60-day averages.\n  const [show60DayAverages, setShow60DayAverages] = useState(false);\n  const [sixtyDayAverages, setSixtyDayAverages] = useState(null);\n  const [sixtyDayJSON, setSixtyDayJSON] = useState(\"\");\n\n  // Parse query parameters on mount.\n  useEffect(() => {\n    const params = queryString.parse(window.location.search);\n    if (params.secret) setSecret(params.secret);\n    if (params.data) {\n      setDataString(params.data);\n      setShowDataInput(false);\n    }\n  }, []);\n\n  // When CSV data changes, parse to set min and max dates.\n  useEffect(() => {\n    if (!dataString) return;\n    try {\n      const parsed = d3.csvParse(dataString);\n      if (parsed && parsed.length > 0 && parsed.columns) {\n        const dateCol = detectDateColumn(parsed.columns);\n        const dates = parsed.map(row => new Date(row[dateCol])).filter(d => !isNaN(d));\n        if (dates.length > 0) {\n          const minD = new Date(Math.min(...dates));\n          const maxD = new Date(Math.max(...dates));\n          setMinDate(minD);\n          setMaxDate(maxD);\n          const totalDays = Math.ceil((maxD.getTime() - minD.getTime()) / (1000 * 60 * 60 * 24));\n          setDateRange([0, totalDays]);\n        }\n      }\n    } catch (e) {\n      console.error(\"Error parsing dates\", e);\n    }\n  }, [dataString]);\n\n  // File upload.\n  function handleFileUpload(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const fileName = file.name.toLowerCase();\n    const reader = new FileReader();\n    if (fileName.endsWith('.csv') || fileName.endsWith('.txt')) {\n      reader.onload = ev => setDataString(ev.target.result);\n      reader.readAsText(file);\n    } else if (fileName.endsWith('.xls') || fileName.endsWith('.xlsx')) {\n      reader.onload = ev => {\n        const data = new Uint8Array(ev.target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const csv = XLSX.utils.sheet_to_csv(worksheet);\n        setDataString(csv);\n      };\n      reader.readAsArrayBuffer(file);\n    } else {\n      alert('Unsupported file format. Please upload CSV, TXT, XLS, or XLSX.');\n    }\n  }\n\n  // Submit data.\n  async function handleSubmit() {\n    if (!secret || !dataString) {\n      setError('Secret key and data are required.');\n      return;\n    }\n    try {\n      const res = await fetch('http://127.0.0.1:5000/api/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          secret,\n          data: dataString\n        })\n      });\n      const json = await res.json();\n      if (json.error) {\n        setError(json.error);\n        setResponse(null);\n      } else {\n        setResponse(json);\n        setError(null);\n      }\n    } catch (err) {\n      setError('Error connecting to backend: ' + err.toString());\n      setResponse(null);\n    }\n  }\n  const totalDays = minDate && maxDate ? Math.ceil((maxDate.getTime() - minDate.getTime()) / (1000 * 60 * 60 * 24)) : 0;\n  const filteredStartDate = minDate ? new Date(minDate.getTime() + dateRange[0] * 24 * 60 * 60 * 1000) : null;\n  const filteredEndDate = minDate ? new Date(minDate.getTime() + dateRange[1] * 24 * 60 * 60 * 1000) : null;\n\n  // Compute 60-day averages.\n  const csvParsed = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      return [];\n    }\n  }, [dataString]);\n  const phasesDetected = useMemo(() => {\n    return csvParsed && csvParsed.length > 0 ? detectColumns(csvParsed.columns) : {};\n  }, [csvParsed]);\n  function calculate60DayAvg(data, phases) {\n    let results = {\n      oil: 0,\n      water: 0,\n      gas: 0,\n      pressure: 0\n    };\n    let counters = {\n      oil: 0,\n      water: 0,\n      gas: 0,\n      pressure: 0\n    };\n    data.forEach(row => {\n      if (row.t <= 60) {\n        if (phases.oil && !isNaN(+row[phases.oil])) {\n          results.oil += +row[phases.oil];\n          counters.oil++;\n        }\n        if (phases.water && !isNaN(+row[phases.water])) {\n          results.water += +row[phases.water];\n          counters.water++;\n        }\n        if (phases.gas && !isNaN(+row[phases.gas])) {\n          results.gas += +row[phases.gas];\n          counters.gas++;\n        }\n        if (phases.pressure && !isNaN(+row[phases.pressure])) {\n          results.pressure += +row[phases.pressure];\n          counters.pressure++;\n        }\n      }\n    });\n    Object.keys(results).forEach(key => {\n      results[key] = counters[key] > 0 ? results[key] / counters[key] : 0;\n    });\n    return results;\n  }\n  useEffect(() => {\n    if (!csvParsed || csvParsed.length === 0 || !minDate) return;\n    const dateCol = csvParsed.columns ? detectDateColumn(csvParsed.columns) : \"Production_Date\";\n    const localData = csvParsed.map(row => {\n      const dt = new Date(row[dateCol]);\n      return {\n        ...row,\n        t: (dt - minDate) / (1000 * 60 * 60 * 24)\n      };\n    });\n    const result = calculate60DayAvg(localData, phasesDetected);\n    setSixtyDayAverages(result);\n    setSixtyDayJSON(JSON.stringify(result, null, 2));\n  }, [csvParsed, minDate, phasesDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom DCA Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 10,\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Secret Key:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: secret,\n          onChange: e => setSecret(e.target.value),\n          placeholder: \"Enter secret key\",\n          style: {\n            width: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload CSV/Excel:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDataInput(prev => !prev),\n        children: showDataInput ? 'Hide CSV Data' : 'Show CSV Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), showDataInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: dataString,\n        onChange: e => setDataString(e.target.value),\n        placeholder: \"Paste CSV data here...\",\n        rows: \"6\",\n        cols: \"80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: 10\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Data Successfully Processed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Columns: \", response.columns.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rows: \", response.rows]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShow60DayAverages(prev => !prev),\n        children: show60DayAverages ? 'Hide 60-Day Averages' : 'Show 60-Day Averages'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), show60DayAverages && sixtyDayAverages && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f9f9f9',\n        border: '1px solid #ccc',\n        padding: 10,\n        marginBottom: 10,\n        borderRadius: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"60-Day Averages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          margin: 0\n        },\n        children: sixtyDayJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 10,\n            left: 10,\n            zIndex: 10,\n            display: 'flex',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowInstructions(prev => !prev),\n            style: {\n              padding: '6px 12px',\n              border: 'none',\n              background: '#666',\n              color: '#fff',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: showInstructions ? 'Hide Instructions' : 'Show Instructions'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowParameters(prev => !prev),\n            style: {\n              padding: '6px 12px',\n              border: 'none',\n              background: '#1890ff',\n              color: '#fff',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: showParameters ? 'Hide Parameters' : 'Show Parameters'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), showParameters && chartParams && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 50,\n            right: 10,\n            background: 'rgba(255,255,255,0.95)',\n            border: '1px solid #ccc',\n            padding: 10,\n            zIndex: 10,\n            maxWidth: 300,\n            borderRadius: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Decline Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              width: '100%',\n              borderCollapse: 'collapse'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"Phase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"Qi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"b\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"EUR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: chartParams.phaseParams && Object.keys(chartParams.phaseParams).map(phase => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: phase.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: chartParams.phaseParams[phase].Qi.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: chartParams.phaseParams[phase].b.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: chartParams.phaseParams[phase].D.toFixed(4)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: typeof chartParams.calculatedEUR[phase] === 'number' ? chartParams.calculatedEUR[phase].toFixed(0) : chartParams.calculatedEUR[phase]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this)]\n              }, phase, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowParameters(false),\n            style: {\n              marginTop: 10\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), showInstructions && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 50,\n            left: 10,\n            background: 'rgba(255,255,255,0.95)',\n            border: '1px solid #ccc',\n            padding: 10,\n            zIndex: 10,\n            maxWidth: 300,\n            borderRadius: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Interactive Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 22\n            }, this), \" and drag vertically to adjust decline rate (D).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 88\n            }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Q\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 22\n            }, this), \" and drag vertically to adjust initial rate (Qi).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 89\n            }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 22\n            }, this), \" and drag vertically to adjust decline exponent (b).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 92\n            }, this), \"(Dragging disables autofit until reset.)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 57\n            }, this), \"You can also scroll/drag vertically in the chart to zoom the y-axis.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowInstructions(false),\n            style: {\n              marginTop: 10\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InteractiveDCAChart, {\n          dataString: dataString,\n          startDate: filteredStartDate ? filteredStartDate.toISOString().slice(0, 10) : \"\",\n          endDate: filteredEndDate ? filteredEndDate.toISOString().slice(0, 10) : \"\",\n          colors: colors,\n          yScaleType: yScaleType,\n          yMultiplier: yMultiplier,\n          forecastDays: forecastDays,\n          onParametersCalculated: setChartParams\n        }, chartKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Production Date Range:\", /*#__PURE__*/_jsxDEV(Slider.Range, {\n              min: 0,\n              max: totalDays,\n              value: dateRange,\n              onChange: newRange => setDateRange(newRange),\n              tipFormatter: value => {\n                if (!minDate) return '';\n                const d = new Date(minDate.getTime() + value * 24 * 60 * 60 * 1000);\n                return d.toDateString();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [filteredStartDate ? filteredStartDate.toDateString() : 'N/A', \" \\u2013 \", filteredEndDate ? filteredEndDate.toDateString() : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 250\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Phase Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), ['oil', 'water', 'gas', 'pressure'].map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [phase.toUpperCase(), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"color\",\n                value: colors[phase],\n                onChange: e => setColors(prev => ({\n                  ...prev,\n                  [phase]: e.target.value\n                })),\n                style: {\n                  marginLeft: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)\n          }, phase, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Axis Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"linear\",\n                checked: yScaleType === \"linear\",\n                onChange: () => setYScaleType(\"linear\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), \" Linear\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginLeft: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"log\",\n                checked: yScaleType === \"log\",\n                onChange: () => setYScaleType(\"log\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), \" Log\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y-Axis Multiplier: \", yMultiplier.toFixed(2), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"3\",\n                step: \"0.05\",\n                value: yMultiplier,\n                onChange: e => setYMultiplier(+e.target.value),\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Forecast Extension (Days): \", forecastDays, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"30\",\n                max: \"365\",\n                step: \"30\",\n                value: forecastDays,\n                onChange: e => setForecastDays(+e.target.value),\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetAutoFit,\n            style: {\n              padding: '6px 12px',\n              border: 'none',\n              background: '#fa541c',\n              color: '#fff',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Reset Autofit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iJtvMH/cbkUEEMqYRSW79Ggs8KU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","queryString","XLSX","d3","InteractiveDCAChart","Slider","jsxDEV","_jsxDEV","detectDateColumn","headers","candidates","filter","h","lower","toLowerCase","includes","length","App","_s","secret","setSecret","dataString","setDataString","response","setResponse","error","setError","minDate","setMinDate","maxDate","setMaxDate","dateRange","setDateRange","showDataInput","setShowDataInput","showParameters","setShowParameters","showInstructions","setShowInstructions","colors","setColors","oil","water","gas","pressure","yScaleType","setYScaleType","yMultiplier","setYMultiplier","forecastDays","setForecastDays","chartKey","setChartKey","resetAutoFit","prev","chartParams","setChartParams","show60DayAverages","setShow60DayAverages","sixtyDayAverages","setSixtyDayAverages","sixtyDayJSON","setSixtyDayJSON","params","parse","window","location","search","data","parsed","csvParse","columns","dateCol","dates","map","row","Date","d","isNaN","minD","Math","min","maxD","max","totalDays","ceil","getTime","e","console","handleFileUpload","file","target","files","fileName","name","reader","FileReader","endsWith","onload","ev","result","readAsText","Uint8Array","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","csv","utils","sheet_to_csv","readAsArrayBuffer","alert","handleSubmit","res","fetch","method","body","JSON","stringify","json","err","toString","filteredStartDate","filteredEndDate","csvParsed","phasesDetected","detectColumns","calculate60DayAvg","phases","results","counters","forEach","t","Object","keys","key","localData","dt","style","padding","fontFamily","children","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","marginBottom","value","onChange","placeholder","width","onClick","rows","cols","color","join","background","border","borderRadius","marginTop","margin","flexGrow","position","top","left","zIndex","cursor","right","maxWidth","borderCollapse","phaseParams","phase","toUpperCase","Qi","toFixed","b","D","calculatedEUR","startDate","toISOString","slice","endDate","onParametersCalculated","Range","newRange","tipFormatter","toDateString","marginLeft","checked","step","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport queryString from 'query-string';\nimport * as XLSX from 'xlsx';\nimport * as d3 from 'd3';\nimport InteractiveDCAChart from './InteractiveDCAChart';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\n// Helper: Auto-detect the production date column.\nfunction detectDateColumn(headers) {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return (\n      (lower.includes(\"prod\") && lower.includes(\"date\")) ||\n      lower.includes(\"proddt\") ||\n      lower.includes(\"proddttm\") ||\n      lower === \"date\" ||\n      lower === \"datetime\"\n    );\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n}\n\nfunction App() {\n  // Basic state.\n  const [secret, setSecret] = useState('');\n  const [dataString, setDataString] = useState('');\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Date filter state.\n  const [minDate, setMinDate] = useState(null);\n  const [maxDate, setMaxDate] = useState(null);\n  const [dateRange, setDateRange] = useState([0, 0]);\n\n  // Toggles.\n  const [showDataInput, setShowDataInput] = useState(false);\n  const [showParameters, setShowParameters] = useState(false);\n  const [showInstructions, setShowInstructions] = useState(false);\n\n  // Sidebar controls.\n  const [colors, setColors] = useState({\n    oil: \"#008000\",\n    water: \"#0000ff\",\n    gas: \"#ff0000\",\n    pressure: \"#000000\"\n  });\n  const [yScaleType, setYScaleType] = useState(\"linear\");\n  const [yMultiplier, setYMultiplier] = useState(1.1);\n  const [forecastDays, setForecastDays] = useState(90);\n\n  // Chart reset key.\n  const [chartKey, setChartKey] = useState(0);\n  const resetAutoFit = () => {\n    setChartKey(prev => prev + 1);\n  };\n\n  // Computed parameters from chart.\n  const [chartParams, setChartParams] = useState(null);\n\n  // 60-day averages.\n  const [show60DayAverages, setShow60DayAverages] = useState(false);\n  const [sixtyDayAverages, setSixtyDayAverages] = useState(null);\n  const [sixtyDayJSON, setSixtyDayJSON] = useState(\"\");\n\n  // Parse query parameters on mount.\n  useEffect(() => {\n    const params = queryString.parse(window.location.search);\n    if (params.secret) setSecret(params.secret);\n    if (params.data) {\n      setDataString(params.data);\n      setShowDataInput(false);\n    }\n  }, []);\n\n  // When CSV data changes, parse to set min and max dates.\n  useEffect(() => {\n    if (!dataString) return;\n    try {\n      const parsed = d3.csvParse(dataString);\n      if (parsed && parsed.length > 0 && parsed.columns) {\n        const dateCol = detectDateColumn(parsed.columns);\n        const dates = parsed.map(row => new Date(row[dateCol])).filter(d => !isNaN(d));\n        if (dates.length > 0) {\n          const minD = new Date(Math.min(...dates));\n          const maxD = new Date(Math.max(...dates));\n          setMinDate(minD);\n          setMaxDate(maxD);\n          const totalDays = Math.ceil((maxD.getTime() - minD.getTime()) / (1000 * 60 * 60 * 24));\n          setDateRange([0, totalDays]);\n        }\n      }\n    } catch (e) {\n      console.error(\"Error parsing dates\", e);\n    }\n  }, [dataString]);\n\n  // File upload.\n  function handleFileUpload(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const fileName = file.name.toLowerCase();\n    const reader = new FileReader();\n    if (fileName.endsWith('.csv') || fileName.endsWith('.txt')) {\n      reader.onload = (ev) => setDataString(ev.target.result);\n      reader.readAsText(file);\n    } else if (fileName.endsWith('.xls') || fileName.endsWith('.xlsx')) {\n      reader.onload = (ev) => {\n        const data = new Uint8Array(ev.target.result);\n        const workbook = XLSX.read(data, { type: 'array' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const csv = XLSX.utils.sheet_to_csv(worksheet);\n        setDataString(csv);\n      };\n      reader.readAsArrayBuffer(file);\n    } else {\n      alert('Unsupported file format. Please upload CSV, TXT, XLS, or XLSX.');\n    }\n  }\n\n  // Submit data.\n  async function handleSubmit() {\n    if (!secret || !dataString) {\n      setError('Secret key and data are required.');\n      return;\n    }\n    try {\n      const res = await fetch('http://127.0.0.1:5000/api/validate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ secret, data: dataString })\n      });\n      const json = await res.json();\n      if (json.error) {\n        setError(json.error);\n        setResponse(null);\n      } else {\n        setResponse(json);\n        setError(null);\n      }\n    } catch (err) {\n      setError('Error connecting to backend: ' + err.toString());\n      setResponse(null);\n    }\n  }\n\n  const totalDays = minDate && maxDate\n    ? Math.ceil((maxDate.getTime() - minDate.getTime()) / (1000 * 60 * 60 * 24))\n    : 0;\n\n  const filteredStartDate = minDate\n    ? new Date(minDate.getTime() + dateRange[0] * 24 * 60 * 60 * 1000)\n    : null;\n  const filteredEndDate = minDate\n    ? new Date(minDate.getTime() + dateRange[1] * 24 * 60 * 60 * 1000)\n    : null;\n\n  // Compute 60-day averages.\n  const csvParsed = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      return [];\n    }\n  }, [dataString]);\n\n  const phasesDetected = useMemo(() => {\n    return (csvParsed && csvParsed.length > 0)\n      ? detectColumns(csvParsed.columns)\n      : {};\n  }, [csvParsed]);\n\n  function calculate60DayAvg(data, phases) {\n    let results = { oil: 0, water: 0, gas: 0, pressure: 0 };\n    let counters = { oil: 0, water: 0, gas: 0, pressure: 0 };\n    data.forEach(row => {\n      if (row.t <= 60) {\n        if (phases.oil && !isNaN(+row[phases.oil])) {\n          results.oil += +row[phases.oil];\n          counters.oil++;\n        }\n        if (phases.water && !isNaN(+row[phases.water])) {\n          results.water += +row[phases.water];\n          counters.water++;\n        }\n        if (phases.gas && !isNaN(+row[phases.gas])) {\n          results.gas += +row[phases.gas];\n          counters.gas++;\n        }\n        if (phases.pressure && !isNaN(+row[phases.pressure])) {\n          results.pressure += +row[phases.pressure];\n          counters.pressure++;\n        }\n      }\n    });\n    Object.keys(results).forEach(key => {\n      results[key] = counters[key] > 0 ? results[key] / counters[key] : 0;\n    });\n    return results;\n  }\n\n  useEffect(() => {\n    if (!csvParsed || csvParsed.length === 0 || !minDate) return;\n    const dateCol = csvParsed.columns ? detectDateColumn(csvParsed.columns) : \"Production_Date\";\n    const localData = csvParsed.map(row => {\n      const dt = new Date(row[dateCol]);\n      return { ...row, t: (dt - minDate) / (1000 * 60 * 60 * 24) };\n    });\n    const result = calculate60DayAvg(localData, phasesDetected);\n    setSixtyDayAverages(result);\n    setSixtyDayJSON(JSON.stringify(result, null, 2));\n  }, [csvParsed, minDate, phasesDetected]);\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial, sans-serif' }}>\n      <h2>Custom DCA Application</h2>\n      \n      {/* Top row: horizontally aligned controls */}\n      <div style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 10 }}>\n        <label>\n          Secret Key:&nbsp;\n          <input\n            type=\"text\"\n            value={secret}\n            onChange={(e) => setSecret(e.target.value)}\n            placeholder=\"Enter secret key\"\n            style={{ width: '200px' }}\n          />\n        </label>\n        <label>\n          Upload CSV/Excel:&nbsp;\n          <input type=\"file\" onChange={handleFileUpload} />\n        </label>\n        <button onClick={() => setShowDataInput(prev => !prev)}>\n          {showDataInput ? 'Hide CSV Data' : 'Show CSV Data'}\n        </button>\n        <button onClick={handleSubmit}>Submit Data</button>\n      </div>\n      \n      {showDataInput && (\n        <div style={{ marginBottom: 10 }}>\n          <textarea\n            value={dataString}\n            onChange={(e) => setDataString(e.target.value)}\n            placeholder=\"Paste CSV data here...\"\n            rows=\"6\"\n            cols=\"80\"\n          ></textarea>\n        </div>\n      )}\n      \n      {error && <div style={{ color: 'red', marginBottom: 10 }}>{error}</div>}\n      {response && (\n        <div style={{ marginBottom: 10 }}>\n          <h4>Data Successfully Processed</h4>\n          <p>Columns: {response.columns.join(', ')}</p>\n          <p>Rows: {response.rows}</p>\n        </div>\n      )}\n      \n      {/* Show 60-day averages overlay */}\n      <div style={{ marginBottom: 10 }}>\n        <button onClick={() => setShow60DayAverages(prev => !prev)}>\n          {show60DayAverages ? 'Hide 60-Day Averages' : 'Show 60-Day Averages'}\n        </button>\n      </div>\n      {show60DayAverages && sixtyDayAverages && (\n        <div style={{\n          background: '#f9f9f9',\n          border: '1px solid #ccc',\n          padding: 10,\n          marginBottom: 10,\n          borderRadius: 4\n        }}>\n          <h4 style={{ marginTop: 0 }}>60-Day Averages</h4>\n          <pre style={{ margin: 0 }}>{sixtyDayJSON}</pre>\n        </div>\n      )}\n      \n      {/* Main layout: Chart & Sidebar */}\n      <div style={{ display: 'flex', gap: 20 }}>\n        {/* Chart Area */}\n        <div style={{ flexGrow: 1, position: 'relative' }}>\n          {/* Overlay buttons on chart */}\n          <div style={{ position: 'absolute', top: 10, left: 10, zIndex: 10, display: 'flex', gap: '10px' }}>\n            <button \n              onClick={() => setShowInstructions(prev => !prev)}\n              style={{\n                padding: '6px 12px',\n                border: 'none',\n                background: '#666',\n                color: '#fff',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              {showInstructions ? 'Hide Instructions' : 'Show Instructions'}\n            </button>\n            <button \n              onClick={() => setShowParameters(prev => !prev)}\n              style={{\n                padding: '6px 12px',\n                border: 'none',\n                background: '#1890ff',\n                color: '#fff',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              {showParameters ? 'Hide Parameters' : 'Show Parameters'}\n            </button>\n          </div>\n          \n          {/* Parameters overlay */}\n          {showParameters && chartParams && (\n            <div style={{\n              position: 'absolute',\n              top: 50,\n              right: 10,\n              background: 'rgba(255,255,255,0.95)',\n              border: '1px solid #ccc',\n              padding: 10,\n              zIndex: 10,\n              maxWidth: 300,\n              borderRadius: 4\n            }}>\n              <h4 style={{ marginTop: 0 }}>Decline Parameters</h4>\n              <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                <thead>\n                  <tr>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>Phase</th>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>Qi</th>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>b</th>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>D</th>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>EUR</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {chartParams.phaseParams && Object.keys(chartParams.phaseParams).map(phase => (\n                    <tr key={phase}>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>{phase.toUpperCase()}</td>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>\n                        {chartParams.phaseParams[phase].Qi.toFixed(2)}\n                      </td>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>\n                        {chartParams.phaseParams[phase].b.toFixed(3)}\n                      </td>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>\n                        {chartParams.phaseParams[phase].D.toFixed(4)}\n                      </td>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>\n                        {typeof chartParams.calculatedEUR[phase] === 'number'\n                          ? chartParams.calculatedEUR[phase].toFixed(0)\n                          : chartParams.calculatedEUR[phase]}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <button onClick={() => setShowParameters(false)} style={{ marginTop: 10 }}>\n                Close\n              </button>\n            </div>\n          )}\n          \n          {/* Instructions overlay */}\n          {showInstructions && (\n            <div style={{\n              position: 'absolute',\n              top: 50,\n              left: 10,\n              background: 'rgba(255,255,255,0.95)',\n              border: '1px solid #ccc',\n              padding: 10,\n              zIndex: 10,\n              maxWidth: 300,\n              borderRadius: 4\n            }}>\n              <h4 style={{ marginTop: 0 }}>Interactive Controls</h4>\n              <p>\n                Hold <strong>D</strong> and drag vertically to adjust decline rate (D).<br />\n                Hold <strong>Q</strong> and drag vertically to adjust initial rate (Qi).<br />\n                Hold <strong>B</strong> and drag vertically to adjust decline exponent (b).<br />\n                (Dragging disables autofit until reset.)<br />\n                You can also scroll/drag vertically in the chart to zoom the y-axis.\n              </p>\n              <button onClick={() => setShowInstructions(false)} style={{ marginTop: 10 }}>\n                Close\n              </button>\n            </div>\n          )}\n          \n          {/* Interactive Chart */}\n          <InteractiveDCAChart\n            key={chartKey}\n            dataString={dataString}\n            startDate={filteredStartDate ? filteredStartDate.toISOString().slice(0, 10) : \"\"}\n            endDate={filteredEndDate ? filteredEndDate.toISOString().slice(0, 10) : \"\"}\n            colors={colors}\n            yScaleType={yScaleType}\n            yMultiplier={yMultiplier}\n            forecastDays={forecastDays}\n            onParametersCalculated={setChartParams}\n          />\n          \n          {/* Dual-range slider */}\n          <div style={{ marginTop: 10 }}>\n            <label>\n              Production Date Range:\n              <Slider.Range \n                min={0}\n                max={totalDays}\n                value={dateRange}\n                onChange={(newRange) => setDateRange(newRange)}\n                tipFormatter={value => {\n                  if (!minDate) return '';\n                  const d = new Date(minDate.getTime() + value * 24 * 60 * 60 * 1000);\n                  return d.toDateString();\n                }}\n              />\n            </label>\n            <div>\n              {filteredStartDate ? filteredStartDate.toDateString() : 'N/A'} – {filteredEndDate ? filteredEndDate.toDateString() : 'N/A'}\n            </div>\n          </div>\n        </div>\n        \n        {/* Sidebar */}\n        <div style={{ width: 250 }}>\n          <div style={{ marginBottom: 20 }}>\n            <h4>Phase Colors</h4>\n            {['oil', 'water', 'gas', 'pressure'].map(phase => (\n              <div key={phase} style={{ marginBottom: 5 }}>\n                <label>\n                  {phase.toUpperCase()}:\n                  <input\n                    type=\"color\"\n                    value={colors[phase]}\n                    onChange={(e) => setColors(prev => ({ ...prev, [phase]: e.target.value }))}\n                    style={{ marginLeft: 5 }}\n                  />\n                </label>\n              </div>\n            ))}\n          </div>\n          <div style={{ marginBottom: 20 }}>\n            <h4>Axis Controls</h4>\n            <div style={{ marginBottom: 10 }}>\n              <label>\n                <input \n                  type=\"radio\"\n                  name=\"yScaleType\"\n                  value=\"linear\"\n                  checked={yScaleType === \"linear\"}\n                  onChange={() => setYScaleType(\"linear\")}\n                /> Linear\n              </label>\n              <label style={{ marginLeft: 10 }}>\n                <input \n                  type=\"radio\"\n                  name=\"yScaleType\"\n                  value=\"log\"\n                  checked={yScaleType === \"log\"}\n                  onChange={() => setYScaleType(\"log\")}\n                /> Log\n              </label>\n            </div>\n            <div style={{ marginBottom: 10 }}>\n              <label>\n                Y-Axis Multiplier: {yMultiplier.toFixed(2)}\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"3\"\n                  step=\"0.05\"\n                  value={yMultiplier}\n                  onChange={(e) => setYMultiplier(+e.target.value)}\n                  style={{ width: '100%' }}\n                />\n              </label>\n            </div>\n            <div>\n              <label>\n                Forecast Extension (Days): {forecastDays}\n                <input\n                  type=\"range\"\n                  min=\"30\"\n                  max=\"365\"\n                  step=\"30\"\n                  value={forecastDays}\n                  onChange={(e) => setForecastDays(+e.target.value)}\n                  style={{ width: '100%' }}\n                />\n              </label>\n            </div>\n          </div>\n          <div>\n            <button \n              onClick={resetAutoFit}\n              style={{\n                padding: '6px 12px',\n                border: 'none',\n                background: '#fa541c',\n                color: '#fff',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              Reset Autofit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}