{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\InteractiveDCAChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkenColor = (hex, factor = 0.8) => {\n  let c = d3.color(hex);\n  if (c) {\n    c.r = Math.floor(c.r * factor);\n    c.g = Math.floor(c.g * factor);\n    c.b = Math.floor(c.b * factor);\n    return c.formatHex();\n  }\n  return hex;\n};\nconst lightenColor = (hex, factor = 1.2) => {\n  let c = d3.color(hex);\n  if (c) {\n    c.r = Math.min(255, Math.floor(c.r * factor));\n    c.g = Math.min(255, Math.floor(c.g * factor));\n    c.b = Math.min(255, Math.floor(c.b * factor));\n    return c.formatHex();\n  }\n  return hex;\n};\nconst detectDateColumn = headers => {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return lower.includes(\"prod\") && lower.includes(\"date\") || lower.includes(\"proddt\") || lower.includes(\"proddttm\") || lower === \"date\" || lower === \"datetime\";\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n};\nconst detectColumns = headers => {\n  let phases = {};\n  headers.forEach(header => {\n    const lower = header.toLowerCase();\n    if (lower.includes(\"bopd\")) {\n      phases.oil = header;\n    } else if (lower.includes(\"oil\") && !phases.oil) {\n      phases.oil = header;\n    }\n    if (lower.includes(\"bwpd\")) {\n      phases.water = header;\n    } else if (lower.includes(\"water\") && !phases.water) {\n      phases.water = header;\n    }\n    if (lower.includes(\"mcfd\")) {\n      phases.gas = header;\n    } else if (lower.includes(\"gas\") && !phases.gas) {\n      phases.gas = header;\n    }\n    if ((lower.includes(\"pip\") || lower.includes(\"pressure\") || lower.includes(\"psi\")) && !phases.pressure) {\n      phases.pressure = header;\n    }\n  });\n  return phases;\n};\nconst calculateRate = (Qi, b, D, t) => {\n  if (b === 0) {\n    return Qi * Math.exp(-D * t);\n  } else {\n    return Qi / Math.pow(1 + b * D * t, 1 / b);\n  }\n};\nconst fitDeclineParameters = (data, fitWindow = 60) => {\n  var _data$;\n  if (!data || data.length < 3) return {\n    Qi: (data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.value) || 100,\n    b: 0.9,\n    D: 0.01\n  };\n  const sortedData = [...data].sort((a, b) => a.t - b.t);\n  const Qi = sortedData[0].value;\n  const recentData = sortedData.slice(-Math.min(fitWindow, sortedData.length));\n  let bestB = 0;\n  let bestD = 0.01;\n  let bestError = Infinity;\n  for (let b = 0; b <= 1; b += 0.1) {\n    const {\n      D,\n      error\n    } = findOptimalD(recentData, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestB = b;\n      bestD = D;\n    }\n  }\n  const minB = Math.max(0, bestB - 0.1);\n  const maxB = Math.min(1, bestB + 0.1);\n  for (let b = minB; b <= maxB; b += 0.01) {\n    const {\n      D,\n      error\n    } = findOptimalD(recentData, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestB = b;\n      bestD = D;\n    }\n  }\n  return {\n    Qi,\n    b: bestB,\n    D: bestD\n  };\n};\nconst findOptimalD = (data, Qi, b) => {\n  let bestD = 0.01;\n  let bestError = Infinity;\n  for (let D = 0.001; D <= 0.5; D += 0.005) {\n    let error = 0;\n    data.forEach(d => {\n      const predicted = calculateRate(Qi, b, D, d.t);\n      error += Math.pow(predicted - d.value, 2);\n    });\n    if (error < bestError) {\n      bestError = error;\n      bestD = D;\n    }\n  }\n  const minD = Math.max(0.001, bestD - 0.005);\n  const maxD = bestD + 0.005;\n  for (let D = minD; D <= maxD; D += 0.0005) {\n    let error = 0;\n    data.forEach(d => {\n      const predicted = calculateRate(Qi, b, D, d.t);\n      error += Math.pow(predicted - d.value, 2);\n    });\n    if (error < bestError) {\n      bestError = error;\n      bestD = D;\n    }\n  }\n  return {\n    D: bestD,\n    error: bestError\n  };\n};\nconst InteractiveDCAChart = ({\n  dataString,\n  startDate,\n  endDate,\n  autoForecast = true\n}) => {\n  _s();\n  const parsedData = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      console.error(\"Error parsing CSV:\", err);\n      return [];\n    }\n  }, [dataString]);\n  const hasData = parsedData && parsedData.length > 0;\n  const svgRef = useRef(null);\n  const prodDateCol = hasData ? detectDateColumn(parsedData.columns) : \"Production_Date\";\n  const phasesDetected = hasData ? detectColumns(parsedData.columns) : {};\n  const filteredData = useMemo(() => {\n    if (!hasData) return [];\n    let dataWithDates = parsedData.map(row => ({\n      ...row,\n      [prodDateCol]: new Date(row[prodDateCol])\n    }));\n    dataWithDates = dataWithDates.filter(row => {\n      const d = new Date(row[prodDateCol]);\n      return !isNaN(d.getTime());\n    });\n    dataWithDates.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\n    if (startDate) {\n      const sd = new Date(startDate);\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] >= sd);\n    }\n    if (endDate) {\n      const ed = new Date(endDate);\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] <= ed);\n    }\n    return dataWithDates;\n  }, [parsedData, startDate, endDate, hasData, prodDateCol]);\n  const localHasData = filteredData && filteredData.length > 0;\n  const firstDate = localHasData ? filteredData[0][prodDateCol] : new Date();\n  const data = useMemo(() => {\n    if (!localHasData) return [];\n    return filteredData.map(row => {\n      const date = row[prodDateCol];\n      return {\n        ...row,\n        Production_Date: date,\n        t: (date - firstDate) / (1000 * 60 * 60 * 24)\n      };\n    });\n  }, [filteredData, prodDateCol, localHasData, firstDate]);\n  const phaseData = useMemo(() => {\n    const result = {};\n    Object.keys(phasesDetected).forEach(phase => {\n      result[phase] = localHasData ? data.map(d => ({\n        t: d.t,\n        value: +d[phasesDetected[phase]]\n      })).filter(d => !isNaN(d.value)) : [];\n    });\n    return result;\n  }, [data, phasesDetected, localHasData]);\n  const tMax = localHasData ? d3.max(data, d => d.t) : 0;\n  const maxProdDate = localHasData ? d3.max(data, d => d.Production_Date) : new Date();\n  const [debouncedPhaseData, setDebouncedPhaseData] = useState(phaseData);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedPhaseData(phaseData);\n    }, 500);\n    return () => clearTimeout(handler);\n  }, [phaseData]);\n  const initialParams = useMemo(() => {\n    const params = {};\n    if (localHasData) {\n      Object.keys(debouncedPhaseData).forEach(phase => {\n        const series = debouncedPhaseData[phase];\n        if (!series || series.length < 3) {\n          var _series$;\n          params[phase] = {\n            Qi: (series === null || series === void 0 ? void 0 : (_series$ = series[0]) === null || _series$ === void 0 ? void 0 : _series$.value) || 100,\n            b: 0.9,\n            D: 0.01\n          };\n          return;\n        }\n        params[phase] = fitDeclineParameters(series);\n      });\n    }\n    return params;\n  }, [debouncedPhaseData, localHasData]);\n  const [phaseParams, setPhaseParams] = useState(initialParams);\n  const [colors, setColors] = useState({\n    oil: \"#008000\",\n    water: \"#0000ff\",\n    gas: \"#ff0000\",\n    pressure: \"#000000\"\n  });\n  const [activeKey, setActiveKey] = useState(null);\n  const [yScaleType, setYScaleType] = useState(\"linear\");\n  const [yMultiplier, setYMultiplier] = useState(1.1);\n  const [forecastDays, setForecastDays] = useState(90);\n  const [autoFitEnabled, setAutoFitEnabled] = useState(true);\n  useEffect(() => {\n    if (autoForecast && autoFitEnabled) {\n      setPhaseParams(initialParams);\n    }\n  }, [initialParams, autoForecast, autoFitEnabled]);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      const key = e.key.toLowerCase();\n      if ([\"d\", \"q\", \"b\"].includes(key)) {\n        setActiveKey(key);\n      }\n    };\n    const handleKeyUp = () => setActiveKey(null);\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n  const allHistoricalPoints = useMemo(() => {\n    const points = [];\n    Object.keys(phaseData).forEach(phase => {\n      phaseData[phase].forEach(d => {\n        points.push({\n          date: new Date(firstDate.getTime() + d.t * 24 * 60 * 60 * 1000),\n          Q: d.value,\n          phase\n        });\n      });\n    });\n    return points;\n  }, [phaseData, firstDate]);\n  const allForecastPoints = useMemo(() => {\n    const forecasts = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      if (!Qi || D <= 0) {\n        forecasts[phase] = [];\n        return;\n      }\n      const Q_start = calculateRate(Qi, b, D, tMax);\n      const forecastStartDate = maxProdDate;\n      const forecastData = [];\n      const numForecastPts = 50;\n      for (let i = 0; i <= numForecastPts; i++) {\n        const tForecast = forecastDays * i / numForecastPts;\n        const Q_forecast = calculateRate(Q_start, b, D, tForecast);\n        const date = new Date(forecastStartDate.getTime() + tForecast * 24 * 60 * 60 * 1000);\n        forecastData.push({\n          date,\n          Q: Q_forecast,\n          phase\n        });\n      }\n      forecasts[phase] = forecastData;\n    });\n    return forecasts;\n  }, [phaseParams, tMax, maxProdDate, forecastDays]);\n  const combinedForecast = useMemo(() => Object.values(allForecastPoints).flat(), [allForecastPoints]);\n  const combinedAll = useMemo(() => [...allHistoricalPoints, ...combinedForecast], [allHistoricalPoints, combinedForecast]);\n  useEffect(() => {\n    if (!localHasData) return;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 60\n    };\n    const width = 800;\n    const height = 400;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const [minDateDomain, maxDateDomain] = d3.extent(combinedAll, d => d.date);\n    const [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\n    const minYVal = minQ <= 0 ? 1e-2 : minQ;\n    const xScale = d3.scaleTime().domain([minDateDomain, maxDateDomain]).range([margin.left, width - margin.right]);\n    let yScale;\n    if (yScaleType === \"log\") {\n      yScale = d3.scaleLog().domain([Math.max(1e-5, minYVal), maxQ * yMultiplier]).range([height - margin.bottom, margin.top]);\n    } else {\n      yScale = d3.scaleLinear().domain([0, maxQ * yMultiplier]).range([height - margin.bottom, margin.top]);\n    }\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\n    const yAxis = yScaleType === \"log\" ? d3.axisLeft(yScale).ticks(6, \"~s\") : d3.axisLeft(yScale);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height - 5).style(\"text-anchor\", \"middle\").text(\"Date\");\n    svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", 15).style(\"text-anchor\", \"middle\").text(\"Production Rate\");\n    Object.keys(phasesDetected).forEach(phase => {\n      const points = allHistoricalPoints.filter(p => p.phase === phase);\n      svg.selectAll(`circle.hist-${phase}`).data(points).enter().append(\"circle\").attr(\"class\", `hist-${phase}`).attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.Q)).attr(\"r\", 3).attr(\"fill\", colors[phase] || \"#888\");\n    });\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      const histLineData = [];\n      const numLinePts = 100;\n      for (let i = 0; i <= numLinePts; i++) {\n        const frac = i / numLinePts;\n        const tVal = tMax * frac;\n        const QVal = calculateRate(Qi, b, D, tVal);\n        const dateVal = new Date(firstDate.getTime() + tVal * 24 * 60 * 60 * 1000);\n        histLineData.push({\n          date: dateVal,\n          Q: QVal\n        });\n      }\n      const lineGenHist = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(histLineData).attr(\"fill\", \"none\").attr(\"stroke\", colors[phase] || \"#888888\").attr(\"stroke-width\", 2).style(\"cursor\", \"pointer\").attr(\"d\", lineGenHist).call(d3.drag().on(\"drag\", event => {\n        if (autoFitEnabled) setAutoFitEnabled(false);\n        setPhaseParams(prevParams => {\n          const newParams = {\n            ...prevParams\n          };\n          const currParams = {\n            ...prevParams[phase]\n          };\n          if (activeKey === \"d\") {\n            currParams.D = Math.max(0.0001, currParams.D + event.dy * 0.001);\n          } else if (activeKey === \"q\") {\n            currParams.Qi = Math.max(1, currParams.Qi - event.dy);\n          } else if (activeKey === \"b\") {\n            currParams.b = Math.max(0, Math.min(1, currParams.b + event.dy * 0.005));\n          }\n          newParams[phase] = currParams;\n          return newParams;\n        });\n      }));\n    });\n    Object.keys(allForecastPoints).forEach(phase => {\n      const fData = allForecastPoints[phase];\n      if (!fData || !fData.length) return;\n      const lineGenForecast = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(fData).attr(\"fill\", \"none\").attr(\"stroke\", lightenColor(colors[phase] || \"#888\", 1.2)).attr(\"stroke-width\", 3).attr(\"stroke-dasharray\", \"5,3\").attr(\"d\", lineGenForecast);\n    });\n    svg.append(\"line\").attr(\"x1\", xScale(maxProdDate)).attr(\"y1\", margin.top).attr(\"x2\", xScale(maxProdDate)).attr(\"y2\", height - margin.bottom).attr(\"stroke\", \"#666\").attr(\"stroke-width\", 1).attr(\"stroke-dasharray\", \"5,5\");\n    svg.append(\"text\").attr(\"x\", xScale(maxProdDate) + 5).attr(\"y\", margin.top + 15).attr(\"fill\", \"#666\").text(\"Forecast →\");\n  }, [localHasData, firstDate, tMax, maxProdDate, data, phasesDetected, phaseData, phaseParams, colors, activeKey, yScaleType, yMultiplier, forecastDays, allHistoricalPoints, allForecastPoints, combinedAll, autoFitEnabled]);\n  const calculatedEUR = useMemo(() => {\n    const results = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      if (b === 0) {\n        results[phase] = Qi / D;\n      } else if (b > 0 && b < 1) {\n        results[phase] = Qi / (D * (1 - b));\n      } else if (b === 1) {\n        const economicLimit = 1;\n        results[phase] = Qi * (1 + Math.log(Qi / economicLimit) / D);\n      } else {\n        results[phase] = \"N/A\";\n      }\n    });\n    return results;\n  }, [phaseParams]);\n  if (!localHasData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No valid data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dca-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Interactive Decline Curve Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 800,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Decline Curve Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"Phase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"Initial Rate (Qi)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"Decline Exponent (b)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"Decline Rate (D)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(phaseParams).map(phase => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: 'inline-block',\n                  width: '12px',\n                  height: '12px',\n                  backgroundColor: colors[phase],\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), phase.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: phaseParams[phase].Qi.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: phaseParams[phase].b.toFixed(3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: phaseParams[phase].D.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: typeof calculatedEUR[phase] === 'number' ? calculatedEUR[phase].toFixed(0) : calculatedEUR[phase]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)]\n          }, phase, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Interactive Controls:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 49\n        }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 16\n        }, this), \" and drag vertically to adjust decline rate (D).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 82\n        }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 16\n        }, this), \" and drag vertically to adjust initial rate (Qi).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 83\n        }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 16\n        }, this), \" and drag vertically to adjust decline exponent (b).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 86\n        }, this), \"(Dragging disables autofit until reset.)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px',\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Axis Controls:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Y-Axis Scale Type:\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"linear\",\n                checked: yScaleType === \"linear\",\n                onChange: () => setYScaleType(\"linear\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this), \" Linear\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"log\",\n                checked: yScaleType === \"log\",\n                onChange: () => setYScaleType(\"log\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this), \" Log\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Y-Axis Multiplier: \", yMultiplier.toFixed(2), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"3\",\n              step: \"0.05\",\n              value: yMultiplier,\n              onChange: e => setYMultiplier(+e.target.value),\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Forecast Extension (Days): \", forecastDays, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"30\",\n              max: \"365\",\n              step: \"30\",\n              value: forecastDays,\n              onChange: e => setForecastDays(+e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Phase Colors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), Object.keys(colors).map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [phase.toUpperCase(), \" Color:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: colors[phase],\n              onChange: e => setColors(prev => ({\n                ...prev,\n                [phase]: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this)\n        }, phase, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setAutoFitEnabled(true);\n          setPhaseParams(initialParams);\n        },\n        children: \"Reset Autofit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveDCAChart, \"eYuaaj3VDd8TfqxkTcynjxISVfI=\");\n_c = InteractiveDCAChart;\nexport default InteractiveDCAChart;\nvar _c;\n$RefreshReg$(_c, \"InteractiveDCAChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","d3","jsxDEV","_jsxDEV","darkenColor","hex","factor","c","color","r","Math","floor","g","b","formatHex","lightenColor","min","detectDateColumn","headers","candidates","filter","h","lower","toLowerCase","includes","length","detectColumns","phases","forEach","header","oil","water","gas","pressure","calculateRate","Qi","D","t","exp","pow","fitDeclineParameters","data","fitWindow","_data$","value","sortedData","sort","a","recentData","slice","bestB","bestD","bestError","Infinity","error","findOptimalD","minB","max","maxB","d","predicted","minD","maxD","InteractiveDCAChart","dataString","startDate","endDate","autoForecast","_s","parsedData","csvParse","err","console","hasData","svgRef","prodDateCol","columns","phasesDetected","filteredData","dataWithDates","map","row","Date","isNaN","getTime","sd","ed","localHasData","firstDate","date","Production_Date","phaseData","result","Object","keys","phase","tMax","maxProdDate","debouncedPhaseData","setDebouncedPhaseData","handler","setTimeout","clearTimeout","initialParams","params","series","_series$","phaseParams","setPhaseParams","colors","setColors","activeKey","setActiveKey","yScaleType","setYScaleType","yMultiplier","setYMultiplier","forecastDays","setForecastDays","autoFitEnabled","setAutoFitEnabled","handleKeyDown","e","key","handleKeyUp","window","addEventListener","removeEventListener","allHistoricalPoints","points","push","Q","allForecastPoints","forecasts","Q_start","forecastStartDate","forecastData","numForecastPts","i","tForecast","Q_forecast","combinedForecast","values","flat","combinedAll","margin","top","right","bottom","left","width","height","svg","select","current","selectAll","remove","minDateDomain","maxDateDomain","extent","minQ","maxQ","minYVal","xScale","scaleTime","domain","range","yScale","scaleLog","scaleLinear","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisLeft","ticks","append","attr","call","style","text","p","enter","histLineData","numLinePts","frac","tVal","QVal","dateVal","lineGenHist","line","x","y","curve","curveMonotoneX","datum","drag","on","event","prevParams","newParams","currParams","dy","fData","lineGenForecast","calculatedEUR","results","economicLimit","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","marginTop","borderCollapse","border","padding","textAlign","display","backgroundColor","marginRight","toUpperCase","toFixed","flexWrap","gap","type","name","checked","onChange","step","target","marginBottom","prev","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/InteractiveDCAChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst darkenColor = (hex, factor = 0.8) => {\r\n  let c = d3.color(hex);\r\n  if (c) {\r\n    c.r = Math.floor(c.r * factor);\r\n    c.g = Math.floor(c.g * factor);\r\n    c.b = Math.floor(c.b * factor);\r\n    return c.formatHex();\r\n  }\r\n  return hex;\r\n};\r\n\r\nconst lightenColor = (hex, factor = 1.2) => {\r\n  let c = d3.color(hex);\r\n  if (c) {\r\n    c.r = Math.min(255, Math.floor(c.r * factor));\r\n    c.g = Math.min(255, Math.floor(c.g * factor));\r\n    c.b = Math.min(255, Math.floor(c.b * factor));\r\n    return c.formatHex();\r\n  }\r\n  return hex;\r\n};\r\n\r\nconst detectDateColumn = (headers) => {\r\n  const candidates = headers.filter(h => {\r\n    const lower = h.toLowerCase();\r\n    return (lower.includes(\"prod\") && lower.includes(\"date\")) ||\r\n           lower.includes(\"proddt\") ||\r\n           lower.includes(\"proddttm\") ||\r\n           lower === \"date\" ||\r\n           lower === \"datetime\";\r\n  });\r\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\r\n};\r\n\r\nconst detectColumns = (headers) => {\r\n  let phases = {};\r\n  headers.forEach(header => {\r\n    const lower = header.toLowerCase();\r\n    if (lower.includes(\"bopd\")) {\r\n      phases.oil = header;\r\n    } else if (lower.includes(\"oil\") && !phases.oil) {\r\n      phases.oil = header;\r\n    }\r\n    if (lower.includes(\"bwpd\")) {\r\n      phases.water = header;\r\n    } else if (lower.includes(\"water\") && !phases.water) {\r\n      phases.water = header;\r\n    }\r\n    if (lower.includes(\"mcfd\")) {\r\n      phases.gas = header;\r\n    } else if (lower.includes(\"gas\") && !phases.gas) {\r\n      phases.gas = header;\r\n    }\r\n    if ((lower.includes(\"pip\") || lower.includes(\"pressure\") || lower.includes(\"psi\")) && !phases.pressure) {\r\n      phases.pressure = header;\r\n    }\r\n  });\r\n  return phases;\r\n};\r\n\r\nconst calculateRate = (Qi, b, D, t) => {\r\n  if (b === 0) {\r\n    return Qi * Math.exp(-D * t);\r\n  } else {\r\n    return Qi / Math.pow(1 + b * D * t, 1 / b);\r\n  }\r\n};\r\n\r\nconst fitDeclineParameters = (data, fitWindow = 60) => {\r\n  if (!data || data.length < 3) return { Qi: data?.[0]?.value || 100, b: 0.9, D: 0.01 };\r\n  const sortedData = [...data].sort((a, b) => a.t - b.t);\r\n  const Qi = sortedData[0].value;\r\n  const recentData = sortedData.slice(-Math.min(fitWindow, sortedData.length));\r\n  let bestB = 0;\r\n  let bestD = 0.01;\r\n  let bestError = Infinity;\r\n  for (let b = 0; b <= 1; b += 0.1) {\r\n    const { D, error } = findOptimalD(recentData, Qi, b);\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestB = b;\r\n      bestD = D;\r\n    }\r\n  }\r\n  const minB = Math.max(0, bestB - 0.1);\r\n  const maxB = Math.min(1, bestB + 0.1);\r\n  for (let b = minB; b <= maxB; b += 0.01) {\r\n    const { D, error } = findOptimalD(recentData, Qi, b);\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestB = b;\r\n      bestD = D;\r\n    }\r\n  }\r\n  return { Qi, b: bestB, D: bestD };\r\n};\r\n\r\nconst findOptimalD = (data, Qi, b) => {\r\n  let bestD = 0.01;\r\n  let bestError = Infinity;\r\n  for (let D = 0.001; D <= 0.5; D += 0.005) {\r\n    let error = 0;\r\n    data.forEach(d => {\r\n      const predicted = calculateRate(Qi, b, D, d.t);\r\n      error += Math.pow(predicted - d.value, 2);\r\n    });\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestD = D;\r\n    }\r\n  }\r\n  const minD = Math.max(0.001, bestD - 0.005);\r\n  const maxD = bestD + 0.005;\r\n  for (let D = minD; D <= maxD; D += 0.0005) {\r\n    let error = 0;\r\n    data.forEach(d => {\r\n      const predicted = calculateRate(Qi, b, D, d.t);\r\n      error += Math.pow(predicted - d.value, 2);\r\n    });\r\n    if (error < bestError) {\r\n      bestError = error;\r\n      bestD = D;\r\n    }\r\n  }\r\n  return { D: bestD, error: bestError };\r\n};\r\n\r\nconst InteractiveDCAChart = ({ dataString, startDate, endDate, autoForecast = true }) => {\r\n  const parsedData = useMemo(() => {\r\n    try {\r\n      return d3.csvParse(dataString);\r\n    } catch (err) {\r\n      console.error(\"Error parsing CSV:\", err);\r\n      return [];\r\n    }\r\n  }, [dataString]);\r\n  const hasData = parsedData && parsedData.length > 0;\r\n  const svgRef = useRef(null);\r\n  const prodDateCol = hasData ? detectDateColumn(parsedData.columns) : \"Production_Date\";\r\n  const phasesDetected = hasData ? detectColumns(parsedData.columns) : {};\r\n  const filteredData = useMemo(() => {\r\n    if (!hasData) return [];\r\n    let dataWithDates = parsedData.map(row => ({\r\n      ...row,\r\n      [prodDateCol]: new Date(row[prodDateCol])\r\n    }));\r\n    dataWithDates = dataWithDates.filter(row => {\r\n      const d = new Date(row[prodDateCol]);\r\n      return !isNaN(d.getTime());\r\n    });\r\n    dataWithDates.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\r\n    if (startDate) {\r\n      const sd = new Date(startDate);\r\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] >= sd);\r\n    }\r\n    if (endDate) {\r\n      const ed = new Date(endDate);\r\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] <= ed);\r\n    }\r\n    return dataWithDates;\r\n  }, [parsedData, startDate, endDate, hasData, prodDateCol]);\r\n  const localHasData = filteredData && filteredData.length > 0;\r\n  const firstDate = localHasData ? filteredData[0][prodDateCol] : new Date();\r\n  const data = useMemo(() => {\r\n    if (!localHasData) return [];\r\n    return filteredData.map(row => {\r\n      const date = row[prodDateCol];\r\n      return {\r\n        ...row,\r\n        Production_Date: date,\r\n        t: (date - firstDate) / (1000 * 60 * 60 * 24)\r\n      };\r\n    });\r\n  }, [filteredData, prodDateCol, localHasData, firstDate]);\r\n  const phaseData = useMemo(() => {\r\n    const result = {};\r\n    Object.keys(phasesDetected).forEach(phase => {\r\n      result[phase] = localHasData\r\n        ? data\r\n            .map(d => ({\r\n              t: d.t,\r\n              value: +d[phasesDetected[phase]]\r\n            }))\r\n            .filter(d => !isNaN(d.value))\r\n        : [];\r\n    });\r\n    return result;\r\n  }, [data, phasesDetected, localHasData]);\r\n  const tMax = localHasData ? d3.max(data, d => d.t) : 0;\r\n  const maxProdDate = localHasData\r\n    ? d3.max(data, d => d.Production_Date)\r\n    : new Date();\r\n  const [debouncedPhaseData, setDebouncedPhaseData] = useState(phaseData);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedPhaseData(phaseData);\r\n    }, 500);\r\n    return () => clearTimeout(handler);\r\n  }, [phaseData]);\r\n  const initialParams = useMemo(() => {\r\n    const params = {};\r\n    if (localHasData) {\r\n      Object.keys(debouncedPhaseData).forEach(phase => {\r\n        const series = debouncedPhaseData[phase];\r\n        if (!series || series.length < 3) {\r\n          params[phase] = { Qi: series?.[0]?.value || 100, b: 0.9, D: 0.01 };\r\n          return;\r\n        }\r\n        params[phase] = fitDeclineParameters(series);\r\n      });\r\n    }\r\n    return params;\r\n  }, [debouncedPhaseData, localHasData]);\r\n  const [phaseParams, setPhaseParams] = useState(initialParams);\r\n  const [colors, setColors] = useState({\r\n    oil: \"#008000\",\r\n    water: \"#0000ff\",\r\n    gas: \"#ff0000\",\r\n    pressure: \"#000000\"\r\n  });\r\n  const [activeKey, setActiveKey] = useState(null);\r\n  const [yScaleType, setYScaleType] = useState(\"linear\");\r\n  const [yMultiplier, setYMultiplier] = useState(1.1);\r\n  const [forecastDays, setForecastDays] = useState(90);\r\n  const [autoFitEnabled, setAutoFitEnabled] = useState(true);\r\n  useEffect(() => {\r\n    if (autoForecast && autoFitEnabled) {\r\n      setPhaseParams(initialParams);\r\n    }\r\n  }, [initialParams, autoForecast, autoFitEnabled]);\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      const key = e.key.toLowerCase();\r\n      if ([\"d\", \"q\", \"b\"].includes(key)) {\r\n        setActiveKey(key);\r\n      }\r\n    };\r\n    const handleKeyUp = () => setActiveKey(null);\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      window.removeEventListener(\"keyup\", handleKeyUp);\r\n    };\r\n  }, []);\r\n  const allHistoricalPoints = useMemo(() => {\r\n    const points = [];\r\n    Object.keys(phaseData).forEach(phase => {\r\n      phaseData[phase].forEach(d => {\r\n        points.push({\r\n          date: new Date(firstDate.getTime() + d.t * 24 * 60 * 60 * 1000),\r\n          Q: d.value,\r\n          phase\r\n        });\r\n      });\r\n    });\r\n    return points;\r\n  }, [phaseData, firstDate]);\r\n  const allForecastPoints = useMemo(() => {\r\n    const forecasts = {};\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      if (!Qi || D <= 0) {\r\n        forecasts[phase] = [];\r\n        return;\r\n      }\r\n      const Q_start = calculateRate(Qi, b, D, tMax);\r\n      const forecastStartDate = maxProdDate;\r\n      const forecastData = [];\r\n      const numForecastPts = 50;\r\n      for (let i = 0; i <= numForecastPts; i++) {\r\n        const tForecast = (forecastDays * i) / numForecastPts;\r\n        const Q_forecast = calculateRate(Q_start, b, D, tForecast);\r\n        const date = new Date(forecastStartDate.getTime() + tForecast * 24 * 60 * 60 * 1000);\r\n        forecastData.push({ date, Q: Q_forecast, phase });\r\n      }\r\n      forecasts[phase] = forecastData;\r\n    });\r\n    return forecasts;\r\n  }, [phaseParams, tMax, maxProdDate, forecastDays]);\r\n  const combinedForecast = useMemo(() => Object.values(allForecastPoints).flat(), [allForecastPoints]);\r\n  const combinedAll = useMemo(() => [...allHistoricalPoints, ...combinedForecast], [allHistoricalPoints, combinedForecast]);\r\n  useEffect(() => {\r\n    if (!localHasData) return;\r\n    const margin = { top: 20, right: 30, bottom: 40, left: 60 };\r\n    const width = 800;\r\n    const height = 400;\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove();\r\n    const [minDateDomain, maxDateDomain] = d3.extent(combinedAll, d => d.date);\r\n    const [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\r\n    const minYVal = minQ <= 0 ? 1e-2 : minQ;\r\n    const xScale = d3.scaleTime()\r\n      .domain([minDateDomain, maxDateDomain])\r\n      .range([margin.left, width - margin.right]);\r\n    let yScale;\r\n    if (yScaleType === \"log\") {\r\n      yScale = d3.scaleLog()\r\n        .domain([Math.max(1e-5, minYVal), maxQ * yMultiplier])\r\n        .range([height - margin.bottom, margin.top]);\r\n    } else {\r\n      yScale = d3.scaleLinear()\r\n        .domain([0, maxQ * yMultiplier])\r\n        .range([height - margin.bottom, margin.top]);\r\n    }\r\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\r\n    const yAxis = yScaleType === \"log\"\r\n      ? d3.axisLeft(yScale).ticks(6, \"~s\")\r\n      : d3.axisLeft(yScale);\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n      .call(xAxis)\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\");\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},0)`)\r\n      .call(yAxis);\r\n    svg.append(\"text\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", height - 5)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Date\");\r\n    svg.append(\"text\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"x\", -height / 2)\r\n      .attr(\"y\", 15)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Production Rate\");\r\n    Object.keys(phasesDetected).forEach(phase => {\r\n      const points = allHistoricalPoints.filter(p => p.phase === phase);\r\n      svg.selectAll(`circle.hist-${phase}`)\r\n        .data(points)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"class\", `hist-${phase}`)\r\n        .attr(\"cx\", d => xScale(d.date))\r\n        .attr(\"cy\", d => yScale(d.Q))\r\n        .attr(\"r\", 3)\r\n        .attr(\"fill\", colors[phase] || \"#888\");\r\n    });\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      const histLineData = [];\r\n      const numLinePts = 100;\r\n      for (let i = 0; i <= numLinePts; i++) {\r\n        const frac = i / numLinePts;\r\n        const tVal = tMax * frac;\r\n        const QVal = calculateRate(Qi, b, D, tVal);\r\n        const dateVal = new Date(firstDate.getTime() + tVal * 24 * 60 * 60 * 1000);\r\n        histLineData.push({ date: dateVal, Q: QVal });\r\n      }\r\n      const lineGenHist = d3.line()\r\n        .x(d => xScale(d.date))\r\n        .y(d => yScale(d.Q))\r\n        .curve(d3.curveMonotoneX);\r\n      svg.append(\"path\")\r\n        .datum(histLineData)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", colors[phase] || \"#888888\")\r\n        .attr(\"stroke-width\", 2)\r\n        .style(\"cursor\", \"pointer\")\r\n        .attr(\"d\", lineGenHist)\r\n        .call(d3.drag()\r\n          .on(\"drag\", event => {\r\n            if (autoFitEnabled) setAutoFitEnabled(false);\r\n            setPhaseParams(prevParams => {\r\n              const newParams = { ...prevParams };\r\n              const currParams = { ...prevParams[phase] };\r\n              if (activeKey === \"d\") {\r\n                currParams.D = Math.max(0.0001, currParams.D + event.dy * 0.001);\r\n              } else if (activeKey === \"q\") {\r\n                currParams.Qi = Math.max(1, currParams.Qi - event.dy);\r\n              } else if (activeKey === \"b\") {\r\n                currParams.b = Math.max(0, Math.min(1, currParams.b + event.dy * 0.005));\r\n              }\r\n              newParams[phase] = currParams;\r\n              return newParams;\r\n            });\r\n          })\r\n        );\r\n    });\r\n    Object.keys(allForecastPoints).forEach(phase => {\r\n      const fData = allForecastPoints[phase];\r\n      if (!fData || !fData.length) return;\r\n      const lineGenForecast = d3.line()\r\n        .x(d => xScale(d.date))\r\n        .y(d => yScale(d.Q))\r\n        .curve(d3.curveMonotoneX);\r\n      svg.append(\"path\")\r\n        .datum(fData)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", lightenColor(colors[phase] || \"#888\", 1.2))\r\n        .attr(\"stroke-width\", 3)\r\n        .attr(\"stroke-dasharray\", \"5,3\")\r\n        .attr(\"d\", lineGenForecast);\r\n    });\r\n    svg.append(\"line\")\r\n      .attr(\"x1\", xScale(maxProdDate))\r\n      .attr(\"y1\", margin.top)\r\n      .attr(\"x2\", xScale(maxProdDate))\r\n      .attr(\"y2\", height - margin.bottom)\r\n      .attr(\"stroke\", \"#666\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"stroke-dasharray\", \"5,5\");\r\n    svg.append(\"text\")\r\n      .attr(\"x\", xScale(maxProdDate) + 5)\r\n      .attr(\"y\", margin.top + 15)\r\n      .attr(\"fill\", \"#666\")\r\n      .text(\"Forecast →\");\r\n  }, [\r\n    localHasData, firstDate, tMax, maxProdDate, data,\r\n    phasesDetected, phaseData, phaseParams,\r\n    colors, activeKey,\r\n    yScaleType, yMultiplier, forecastDays,\r\n    allHistoricalPoints, allForecastPoints, combinedAll, autoFitEnabled\r\n  ]);\r\n  const calculatedEUR = useMemo(() => {\r\n    const results = {};\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      if (b === 0) {\r\n        results[phase] = Qi / D;\r\n      } else if (b > 0 && b < 1) {\r\n        results[phase] = Qi / (D * (1 - b));\r\n      } else if (b === 1) {\r\n        const economicLimit = 1;\r\n        results[phase] = Qi * (1 + Math.log(Qi / economicLimit) / D);\r\n      } else {\r\n        results[phase] = \"N/A\";\r\n      }\r\n    });\r\n    return results;\r\n  }, [phaseParams]);\r\n  if (!localHasData) {\r\n    return <div>No valid data found.</div>;\r\n  }\r\n  return (\r\n    <div className=\"dca-container\">\r\n      <h3>Interactive Decline Curve Analysis</h3>\r\n      <svg ref={svgRef} width={800} height={400}></svg>\r\n      <div style={{ marginTop: '20px' }}>\r\n        <h4>Decline Curve Parameters</h4>\r\n        <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Phase</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Initial Rate (Qi)</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Decline Exponent (b)</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Decline Rate (D)</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>EUR</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.keys(phaseParams).map(phase => (\r\n              <tr key={phase}>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>\r\n                  <span style={{ display: 'inline-block', width: '12px', height: '12px', backgroundColor: colors[phase], marginRight: '5px' }}></span>\r\n                  {phase.toUpperCase()}\r\n                </td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>{phaseParams[phase].Qi.toFixed(2)}</td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>{phaseParams[phase].b.toFixed(3)}</td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>{phaseParams[phase].D.toFixed(4)}</td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>\r\n                  {typeof calculatedEUR[phase] === 'number'\r\n                    ? calculatedEUR[phase].toFixed(0)\r\n                    : calculatedEUR[phase]}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div style={{ marginTop: '15px' }}>\r\n        <p>\r\n          <strong>Interactive Controls:</strong><br />\r\n          Hold <strong>D</strong> and drag vertically to adjust decline rate (D).<br />\r\n          Hold <strong>Q</strong> and drag vertically to adjust initial rate (Qi).<br />\r\n          Hold <strong>B</strong> and drag vertically to adjust decline exponent (b).<br />\r\n          (Dragging disables autofit until reset.)\r\n        </p>\r\n      </div>\r\n      <div style={{ marginTop: '15px', display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n        <div>\r\n          <h4>Axis Controls:</h4>\r\n          <div>\r\n            <label>\r\n              Y-Axis Scale Type:&nbsp;\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"yScaleType\"\r\n                  value=\"linear\"\r\n                  checked={yScaleType === \"linear\"}\r\n                  onChange={() => setYScaleType(\"linear\")}\r\n                /> Linear\r\n              </label>\r\n              &nbsp;\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"yScaleType\"\r\n                  value=\"log\"\r\n                  checked={yScaleType === \"log\"}\r\n                  onChange={() => setYScaleType(\"log\")}\r\n                /> Log\r\n              </label>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Y-Axis Multiplier: {yMultiplier.toFixed(2)}\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"3\"\r\n                step=\"0.05\"\r\n                value={yMultiplier}\r\n                onChange={(e) => setYMultiplier(+e.target.value)}\r\n                style={{ width: '100%' }}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Forecast Extension (Days): {forecastDays}\r\n              <input\r\n                type=\"range\"\r\n                min=\"30\"\r\n                max=\"365\"\r\n                step=\"30\"\r\n                value={forecastDays}\r\n                onChange={(e) => setForecastDays(+e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h4>Phase Colors:</h4>\r\n          {Object.keys(colors).map(phase => (\r\n            <div key={phase} style={{ marginBottom: '5px' }}>\r\n              <label>\r\n                {phase.toUpperCase()} Color:&nbsp;\r\n                <input\r\n                  type=\"color\"\r\n                  value={colors[phase]}\r\n                  onChange={(e) => setColors(prev => ({ ...prev, [phase]: e.target.value }))}\r\n                />\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: '15px' }}>\r\n        <button onClick={() => { setAutoFitEnabled(true); setPhaseParams(initialParams); }}>\r\n          Reset Autofit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveDCAChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}