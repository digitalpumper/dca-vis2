{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\InteractiveDCAChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo, useCallback } from 'react';\nimport * as d3 from 'd3';\n\n// Helper: Darken a HEX color by a given factor.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkenColor = (hex, factor = 0.8) => {\n  let c = d3.color(hex);\n  if (c) {\n    c.r = Math.floor(c.r * factor);\n    c.g = Math.floor(c.g * factor);\n    c.b = Math.floor(c.b * factor);\n    return c.formatHex();\n  }\n  return hex;\n};\n\n// Helper: Lighten a HEX color by a given factor.\nconst lightenColor = (hex, factor = 1.2) => {\n  let c = d3.color(hex);\n  if (c) {\n    c.r = Math.min(255, Math.floor(c.r * factor));\n    c.g = Math.min(255, Math.floor(c.g * factor));\n    c.b = Math.min(255, Math.floor(c.b * factor));\n    return c.formatHex();\n  }\n  return hex;\n};\n\n// Auto-detect the production date column from common names.\nconst detectDateColumn = headers => {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return lower.includes(\"prod\") && lower.includes(\"date\") || lower.includes(\"proddt\") || lower.includes(\"proddttm\") || lower === \"date\" || lower === \"datetime\";\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n};\n\n// Auto-detect measurement columns using keywords.\nconst detectColumns = headers => {\n  let phases = {};\n  headers.forEach(header => {\n    const lower = header.toLowerCase();\n    // For oil: prefer \"bopd\", otherwise any \"oil\".\n    if (lower.includes(\"bopd\")) {\n      phases.oil = header;\n    } else if (lower.includes(\"oil\") && !phases.oil) {\n      phases.oil = header;\n    }\n    // For water: prefer \"bwpd\", otherwise any \"water\".\n    if (lower.includes(\"bwpd\")) {\n      phases.water = header;\n    } else if (lower.includes(\"water\") && !phases.water) {\n      phases.water = header;\n    }\n    // For gas: prefer \"mcfd\", otherwise any \"gas\".\n    if (lower.includes(\"mcfd\")) {\n      phases.gas = header;\n    } else if (lower.includes(\"gas\") && !phases.gas) {\n      phases.gas = header;\n    }\n    // For pressure: look for \"pip\", \"pressure\", or \"psi\".\n    if ((lower.includes(\"pip\") || lower.includes(\"pressure\") || lower.includes(\"psi\")) && !phases.pressure) {\n      phases.pressure = header;\n    }\n  });\n  return phases;\n};\n\n// Calculate production rate using Arps equation\nconst calculateRate = (Qi, b, D, t) => {\n  if (b === 0) {\n    // Exponential decline\n    return Qi * Math.exp(-D * t);\n  } else {\n    // Hyperbolic decline\n    return Qi / Math.pow(1 + b * D * t, 1 / b);\n  }\n};\n\n// Improved best-fit parameter calculation using Arps decline curve models\nconst fitDeclineParameters = (data, fitWindow = 60) => {\n  var _data$;\n  if (!data || data.length < 3) return {\n    Qi: (data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.value) || 100,\n    b: 0.9,\n    D: 0.01\n  };\n\n  // Sort data by time and get the initial rate\n  const sortedData = [...data].sort((a, b) => a.t - b.t);\n  const Qi = sortedData[0].value;\n\n  // Use recent data for fitting to prioritize latest trends\n  const recentData = sortedData.slice(-Math.min(fitWindow, sortedData.length));\n\n  // Try different b values and find the one with least error\n  let bestB = 0;\n  let bestD = 0.01;\n  let bestError = Infinity;\n\n  // First, try to find optimal b parameter (decline exponent)\n  for (let b = 0; b <= 1; b += 0.1) {\n    // For each b, find the best D\n    let bestDforB = 0.01;\n    let bestErrorForB = Infinity;\n    for (let D = 0.001; D <= 0.5; D += 0.005) {\n      let error = 0;\n\n      // Calculate mean squared error\n      recentData.forEach(d => {\n        const predicted = calculateRate(Qi, b, D, d.t);\n        error += Math.pow(predicted - d.value, 2);\n      });\n      if (error < bestErrorForB) {\n        bestErrorForB = error;\n        bestDforB = D;\n      }\n    }\n    if (bestErrorForB < bestError) {\n      bestError = bestErrorForB;\n      bestB = b;\n      bestD = bestDforB;\n    }\n  }\n  return {\n    Qi,\n    b: bestB,\n    D: bestD\n  };\n};\nconst InteractiveDCAChart = ({\n  dataString,\n  autoForecast = true\n}) => {\n  _s();\n  // SVG ref and chart settings\n  const svgRef = useRef(null);\n  const [colors, setColors] = useState({\n    oil: \"#008000\",\n    water: \"#0000ff\",\n    gas: \"#ff0000\",\n    pressure: \"#000000\"\n  });\n  const [activeKey, setActiveKey] = useState(null);\n  const [yScaleType, setYScaleType] = useState(\"linear\");\n  const [yMultiplier, setYMultiplier] = useState(1.1);\n  const [forecastDays, setForecastDays] = useState(90);\n  const [isForecasting, setIsForecasting] = useState(true);\n\n  // Add merged date filter state\n  const [dateRange, setDateRange] = useState({\n    start: null,\n    end: null\n  });\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [tempDateRange, setTempDateRange] = useState({\n    start: null,\n    end: null\n  });\n  const [needsReforecast, setNeedsReforecast] = useState(false);\n\n  // 1) Parse CSV data\n  const parsedData = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      console.error(\"Error parsing CSV:\", err);\n      return [];\n    }\n  }, [dataString]);\n  const hasData = parsedData && parsedData.length > 0;\n\n  // 2) Detect columns\n  const prodDateCol = useMemo(() => {\n    return hasData ? detectDateColumn(parsedData.columns) : \"Production_Date\";\n  }, [hasData, parsedData]);\n  const phasesDetected = useMemo(() => {\n    return hasData ? detectColumns(parsedData.columns) : {};\n  }, [hasData, parsedData]);\n\n  // 3) Filter data by date\n  const filteredData = useMemo(() => {\n    if (!hasData) return [];\n    let dataWithDates = parsedData.map(row => ({\n      ...row,\n      [prodDateCol]: new Date(row[prodDateCol])\n    }));\n\n    // valid dates only\n    dataWithDates = dataWithDates.filter(row => {\n      const d = row[prodDateCol];\n      return !isNaN(d.getTime());\n    });\n\n    // sort by date\n    dataWithDates.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\n\n    // apply date range filter\n    if (dateRange.start) {\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] >= dateRange.start);\n    }\n    if (dateRange.end) {\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] <= dateRange.end);\n    }\n    return dataWithDates;\n  }, [parsedData, dateRange, hasData, prodDateCol]);\n  const localHasData = filteredData && filteredData.length > 0;\n\n  // Get the first date and convert all dates to time values\n  const firstDate = useMemo(() => localHasData ? filteredData[0][prodDateCol] : new Date(), [filteredData, localHasData, prodDateCol]);\n  const data = useMemo(() => {\n    if (!localHasData) return [];\n    return filteredData.map(row => {\n      const date = row[prodDateCol];\n      return {\n        ...row,\n        Production_Date: date,\n        t: (date - firstDate) / (1000 * 60 * 60 * 24)\n      };\n    });\n  }, [filteredData, prodDateCol, localHasData, firstDate]);\n\n  // 4) Build phase data (array of {t, value} for each phase)\n  const phaseData = useMemo(() => {\n    const result = {};\n    Object.keys(phasesDetected).forEach(phase => {\n      result[phase] = localHasData ? data.map(d => ({\n        t: d.t,\n        value: +d[phasesDetected[phase]]\n      })).filter(d => !isNaN(d.value)) : [];\n    });\n    return result;\n  }, [data, phasesDetected, localHasData]);\n\n  // 5) Calculate tMax, last production date\n  const tMax = useMemo(() => localHasData ? d3.max(data, d => d.t) : 0, [data, localHasData]);\n  const maxProdDate = useMemo(() => localHasData ? d3.max(data, d => d.Production_Date) : new Date(), [data, localHasData]);\n\n  // 6) Compute initial parameters (but only when needed)\n  const computeInitialParams = useCallback(() => {\n    const params = {};\n    if (localHasData) {\n      Object.keys(phaseData).forEach(phase => {\n        const series = phaseData[phase];\n        if (!series || series.length < 3) {\n          var _series$;\n          params[phase] = {\n            Qi: (series === null || series === void 0 ? void 0 : (_series$ = series[0]) === null || _series$ === void 0 ? void 0 : _series$.value) || 100,\n            b: 0.9,\n            D: 0.01\n          };\n          return;\n        }\n\n        // Automatically fit best parameters\n        params[phase] = fitDeclineParameters(series);\n      });\n    }\n    return params;\n  }, [phaseData, localHasData]);\n\n  // Create state for phase parameters\n  const [phaseParams, setPhaseParams] = useState({});\n\n  // Initial calculation of parameters and update on data change\n  useEffect(() => {\n    setPhaseParams(computeInitialParams());\n    setNeedsReforecast(false);\n  }, [computeInitialParams]);\n\n  // Apply reforecasting when date filter is released\n  useEffect(() => {\n    if (needsReforecast && autoForecast) {\n      setPhaseParams(computeInitialParams());\n      setNeedsReforecast(false);\n    }\n  }, [needsReforecast, computeInitialParams, autoForecast]);\n\n  // Handle date filter apply\n  const handleApplyDateFilter = () => {\n    setDateRange(tempDateRange);\n    setShowDatePicker(false);\n    setNeedsReforecast(true); // Mark for reforecasting when filter is applied\n  };\n\n  // Handle date filter reset\n  const handleResetDateFilter = () => {\n    setTempDateRange({\n      start: null,\n      end: null\n    });\n    setDateRange({\n      start: null,\n      end: null\n    });\n    setShowDatePicker(false);\n    setNeedsReforecast(true); // Mark for reforecasting when filter is reset\n  };\n\n  // 7) Hotkey listeners (D, Q, B)\n  useEffect(() => {\n    const handleKeyDown = e => {\n      const key = e.key.toLowerCase();\n      if ([\"d\", \"q\", \"b\"].includes(key)) {\n        setActiveKey(key);\n      }\n    };\n    const handleKeyUp = () => {\n      setActiveKey(null);\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n\n  // 8) Build data arrays for historical & forecast\n  const allHistoricalPoints = useMemo(() => {\n    const points = [];\n    Object.keys(phaseData).forEach(phase => {\n      phaseData[phase].forEach(d => {\n        points.push({\n          date: new Date(firstDate.getTime() + d.t * 24 * 60 * 60 * 1000),\n          Q: d.value,\n          phase\n        });\n      });\n    });\n    return points;\n  }, [phaseData, firstDate]);\n\n  // Calculate forecast for each phase\n  const allForecastPoints = useMemo(() => {\n    if (!isForecasting) return {};\n    const forecasts = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n\n      // Skip if no valid parameters\n      if (!Qi || D <= 0) {\n        forecasts[phase] = [];\n        return;\n      }\n\n      // Calculate Q at tMax as the \"starting\" forecast value\n      const Q_start = calculateRate(Qi, b, D, tMax);\n      const forecastStartDate = maxProdDate;\n      const forecastData = [];\n      const numForecastPts = 50;\n      for (let i = 0; i <= numForecastPts; i++) {\n        // tForecast is additional time beyond tMax\n        const tForecast = forecastDays * i / numForecastPts;\n        // forecast production using Arps equation\n        const Q_forecast = calculateRate(Q_start, b, D, tForecast);\n        // date is last prod date + tForecast\n        const date = new Date(forecastStartDate.getTime() + tForecast * 24 * 60 * 60 * 1000);\n        forecastData.push({\n          date,\n          Q: Q_forecast,\n          phase\n        });\n      }\n      forecasts[phase] = forecastData;\n    });\n    return forecasts;\n  }, [phaseParams, tMax, maxProdDate, forecastDays, isForecasting]);\n\n  // Flatten forecasts for domain calculations\n  const combinedForecast = useMemo(() => {\n    return Object.values(allForecastPoints).flat();\n  }, [allForecastPoints]);\n  const combinedAll = useMemo(() => {\n    return [...allHistoricalPoints, ...combinedForecast];\n  }, [allHistoricalPoints, combinedForecast]);\n\n  // Calculate estimated ultimate recovery for each phase\n  const calculatedEUR = useMemo(() => {\n    const results = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n\n      // Skip invalid parameters\n      if (!Qi || D <= 0) {\n        results[phase] = \"N/A\";\n        return;\n      }\n\n      // For exponential decline (b = 0)\n      if (b === 0) {\n        results[phase] = Qi / D;\n      }\n      // For hyperbolic decline with b between 0 and 1\n      else if (b > 0 && b < 1) {\n        results[phase] = Qi / (D * (1 - b));\n      }\n      // For harmonic decline (b = 1)\n      else if (b === 1) {\n        // In this case, EUR is theoretically infinite\n        // but we can calculate it to a practical economic limit\n        const economicLimit = 1; // 1 unit of production as cutoff\n        results[phase] = Qi * (1 + Math.log(Qi / economicLimit) / D);\n      } else {\n        results[phase] = \"N/A\"; // Invalid b value\n      }\n    });\n    return results;\n  }, [phaseParams]);\n\n  // 9) Render the chart\n  useEffect(() => {\n    if (!localHasData) return;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 60\n    };\n    const width = 800;\n    const height = 400;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // 10) Determine domain from combined historical + forecast data\n    const [minDate, maxDate] = d3.extent(combinedAll, d => d.date);\n    const [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\n\n    // For safety in log scale, if minQ <= 0, we clamp to something > 0\n    const minYVal = minQ <= 0 ? 1e-2 : minQ;\n\n    // Build xScale\n    const xScale = d3.scaleTime().domain([minDate, maxDate]).range([margin.left, width - margin.right]);\n\n    // Build yScale\n    let yScale;\n    if (yScaleType === \"log\") {\n      yScale = d3.scaleLog().domain([Math.max(1e-5, minYVal), maxQ * yMultiplier]).range([height - margin.bottom, margin.top]);\n    } else {\n      yScale = d3.scaleLinear().domain([0, maxQ * yMultiplier]).range([height - margin.bottom, margin.top]);\n    }\n\n    // 11) Axes\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\n    const yAxis = yScaleType === \"log\" ? d3.axisLeft(yScale).ticks(6, \"~s\") : d3.axisLeft(yScale);\n\n    // Add X and Y axes\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n\n    // Add axis labels\n    svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height - 5).style(\"text-anchor\", \"middle\").text(\"Date\");\n    svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", 15).style(\"text-anchor\", \"middle\").text(\"Production Rate\");\n\n    // 12) Plot historical raw data (circles)\n    Object.keys(phasesDetected).forEach(phase => {\n      const points = allHistoricalPoints.filter(p => p.phase === phase);\n      svg.selectAll(`circle.hist-${phase}`).data(points).enter().append(\"circle\").attr(\"class\", `hist-${phase}`).attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.Q)).attr(\"r\", 3).attr(\"fill\", colors[phase] || \"#888\");\n    });\n\n    // 13) Plot historical decline lines with Arps model\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n\n      // Skip if missing parameters\n      if (!Qi || D <= 0) return;\n\n      // Build line data for \"historical decline\" (0 -> tMax)\n      const histLineData = [];\n      const numLinePts = 100;\n      for (let i = 0; i <= numLinePts; i++) {\n        const frac = i / numLinePts;\n        const tVal = tMax * frac; // between 0 and tMax\n        const QVal = calculateRate(Qi, b, D, tVal);\n        const dateVal = new Date(firstDate.getTime() + tVal * 24 * 60 * 60 * 1000);\n        histLineData.push({\n          date: dateVal,\n          Q: QVal\n        });\n      }\n      const lineGenHist = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(histLineData).attr(\"fill\", \"none\").attr(\"stroke\", colors[phase] || \"#888888\").attr(\"stroke-width\", 2).attr(\"id\", `line-${phase}`).style(\"cursor\", \"pointer\").attr(\"d\", lineGenHist)\n      // DRAG: update D, Qi, or b based on pressed key\n      .call(d3.drag().on(\"start\", function () {\n        d3.select(this).attr(\"stroke-width\", 3); // Highlight active line\n      }).on(\"drag\", function (event) {\n        const phaseId = d3.select(this).attr(\"id\").replace(\"line-\", \"\");\n        setPhaseParams(prevParams => {\n          const newParams = {\n            ...prevParams\n          };\n          const currParams = {\n            ...prevParams[phaseId]\n          };\n\n          // Adjust parameters based on active key\n          if (activeKey === \"d\") {\n            // Adjust D with vertical drag (up = decrease, down = increase)\n            currParams.D = Math.max(0.0001, currParams.D - event.dy * 0.0005);\n          } else if (activeKey === \"q\") {\n            // Adjust Qi with vertical drag (up = increase, down = decrease)\n            currParams.Qi = Math.max(1, currParams.Qi - event.dy);\n          } else if (activeKey === \"b\") {\n            // Adjust b with horizontal drag (right = increase, left = decrease)\n            currParams.b = Math.max(0, Math.min(1, currParams.b + event.dx * 0.005));\n          }\n          newParams[phaseId] = currParams;\n          return newParams;\n        });\n      }).on(\"end\", function () {\n        d3.select(this).attr(\"stroke-width\", 2); // Reset line thickness\n      }));\n    });\n\n    // 14) Plot forecast lines\n    if (isForecasting) {\n      Object.keys(allForecastPoints).forEach(phase => {\n        const fData = allForecastPoints[phase];\n        if (!fData || !fData.length) return;\n        const lineGenForecast = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n        svg.append(\"path\").datum(fData).attr(\"fill\", \"none\").attr(\"stroke\", lightenColor(colors[phase] || \"#888\", 1.2)).attr(\"stroke-width\", 3).attr(\"stroke-dasharray\", \"5,3\").attr(\"d\", lineGenForecast);\n      });\n\n      // Add a vertical line at the forecasting transition point\n      svg.append(\"line\").attr(\"x1\", xScale(maxProdDate)).attr(\"y1\", margin.top).attr(\"x2\", xScale(maxProdDate)).attr(\"y2\", height - margin.bottom).attr(\"stroke\", \"#666\").attr(\"stroke-width\", 1).attr(\"stroke-dasharray\", \"5,5\");\n\n      // Add a \"Forecast Starts\" label\n      svg.append(\"text\").attr(\"x\", xScale(maxProdDate) + 5).attr(\"y\", margin.top + 15).attr(\"fill\", \"#666\").text(\"Forecast →\");\n    }\n  }, [localHasData, firstDate, tMax, maxProdDate, phasesDetected, phaseData, phaseParams, colors, activeKey, yScaleType, yMultiplier, forecastDays, allHistoricalPoints, allForecastPoints, combinedAll, isForecasting]);\n\n  // Show loading or no data message\n  if (!hasData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available. Please upload a CSV file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 12\n    }, this);\n  }\n  if (!localHasData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No valid data in the selected date range.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Format a date for display\n  const formatDate = date => {\n    if (!date) return \"\";\n    return date.toISOString().split('T')[0];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dca-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Interactive Decline Curve Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDatePicker(!showDatePicker),\n        style: {\n          marginRight: '10px'\n        },\n        children: showDatePicker ? 'Hide Date Filter' : 'Filter Data by Date'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this), dateRange.start || dateRange.end ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Active filter: \", formatDate(dateRange.start), \" to \", formatDate(dateRange.end), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetDateFilter,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Reset Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 11\n      }, this) : null, showDatePicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          marginTop: '10px',\n          borderRadius: '4px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '15px',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: tempDateRange.start ? formatDate(tempDateRange.start) : '',\n              onChange: e => {\n                const date = e.target.value ? new Date(e.target.value) : null;\n                setTempDateRange(prev => ({\n                  ...prev,\n                  start: date\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: tempDateRange.end ? formatDate(tempDateRange.end) : '',\n              onChange: e => {\n                const date = e.target.value ? new Date(e.target.value) : null;\n                setTempDateRange(prev => ({\n                  ...prev,\n                  end: date\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleApplyDateFilter,\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Apply Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDatePicker(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 800,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Decline Curve Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isForecasting,\n            onChange: e => setIsForecasting(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 13\n          }, this), \"Show Forecast\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"Phase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"Initial Rate (Qi)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"Decline Exponent (b)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"Decline Rate (D)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px',\n                textAlign: 'left'\n              },\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(phaseParams).map(phase => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: 'inline-block',\n                  width: '12px',\n                  height: '12px',\n                  backgroundColor: colors[phase],\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this), phase.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: phaseParams[phase].Qi.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: phaseParams[phase].b.toFixed(3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: phaseParams[phase].D.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: typeof calculatedEUR[phase] === 'number' ? calculatedEUR[phase].toFixed(0) : calculatedEUR[phase]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 17\n            }, this)]\n          }, phase, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Interactive Controls:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 49\n        }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 16\n        }, this), \" and drag vertically to adjust decline rate (D).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 82\n        }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 16\n        }, this), \" and drag vertically to adjust initial rate (Qi).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 83\n        }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 16\n        }, this), \" and drag horizontally to adjust decline exponent (b).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px',\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Chart Controls:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Y-Axis Scale:\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"linear\",\n                checked: yScaleType === \"linear\",\n                onChange: () => setYScaleType(\"linear\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 17\n              }, this), \" Linear\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 15\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"log\",\n                checked: yScaleType === \"log\",\n                onChange: () => setYScaleType(\"log\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this), \" Log\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Y-Axis Multiplier: \", yMultiplier.toFixed(2), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"3\",\n              step: \"0.05\",\n              value: yMultiplier,\n              onChange: e => setYMultiplier(+e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Forecast Extension (Days): \", forecastDays, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"30\",\n              max: \"365\",\n              step: \"30\",\n              value: forecastDays,\n              onChange: e => setForecastDays(+e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPhaseParams(computeInitialParams()),\n            style: {\n              padding: '5px 10px'\n            },\n            children: \"Reset Curve Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Phase Colors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 11\n        }, this), Object.keys(colors).map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [phase.toUpperCase(), \" Color:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: colors[phase],\n              onChange: e => setColors(prev => ({\n                ...prev,\n                [phase]: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this)\n        }, phase, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Key Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '20px'\n        },\n        children: Object.keys(phaseParams).map(phase => {\n          var _phaseParams$phase;\n          // Skip if no valid parameters\n          if (!((_phaseParams$phase = phaseParams[phase]) !== null && _phaseParams$phase !== void 0 && _phaseParams$phase.Qi)) return null;\n          const {\n            Qi,\n            b,\n            D\n          } = phaseParams[phase];\n\n          // Calculate current rate (at tMax)\n          const currentRate = calculateRate(Qi, b, D, tMax);\n\n          // Calculate rates at different timepoints\n          const sixMonthRate = calculateRate(Qi, b, D, tMax + 180);\n          const oneYearRate = calculateRate(Qi, b, D, tMax + 365);\n          const twoYearRate = calculateRate(Qi, b, D, tMax + 730);\n\n          // Calculate rate ratios\n          const sixMonthDecline = ((currentRate - sixMonthRate) / currentRate * 100).toFixed(1);\n          const oneYearDecline = ((currentRate - oneYearRate) / currentRate * 100).toFixed(1);\n          const twoYearDecline = ((currentRate - twoYearRate) / currentRate * 100).toFixed(1);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: `1px solid ${colors[phase]}`,\n              borderRadius: '4px',\n              padding: '10px',\n              minWidth: '200px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                color: colors[phase],\n                margin: '0 0 10px 0'\n              },\n              children: phase.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Current Rate: \", currentRate.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Decline in 6 Months: \", sixMonthDecline, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Decline in 1 Year: \", oneYearDecline, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Decline in 2 Years: \", twoYearDecline, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"EUR: \", typeof calculatedEUR[phase] === 'number' ? calculatedEUR[phase].toFixed(0) : calculatedEUR[phase]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 17\n            }, this)]\n          }, phase, true, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveDCAChart, \"jkc3ObjoFAbJeVfO+kLwGQP8hNs=\");\n_c = InteractiveDCAChart;\nexport default InteractiveDCAChart;\nvar _c;\n$RefreshReg$(_c, \"InteractiveDCAChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","useCallback","d3","jsxDEV","_jsxDEV","darkenColor","hex","factor","c","color","r","Math","floor","g","b","formatHex","lightenColor","min","detectDateColumn","headers","candidates","filter","h","lower","toLowerCase","includes","length","detectColumns","phases","forEach","header","oil","water","gas","pressure","calculateRate","Qi","D","t","exp","pow","fitDeclineParameters","data","fitWindow","_data$","value","sortedData","sort","a","recentData","slice","bestB","bestD","bestError","Infinity","bestDforB","bestErrorForB","error","d","predicted","InteractiveDCAChart","dataString","autoForecast","_s","svgRef","colors","setColors","activeKey","setActiveKey","yScaleType","setYScaleType","yMultiplier","setYMultiplier","forecastDays","setForecastDays","isForecasting","setIsForecasting","dateRange","setDateRange","start","end","showDatePicker","setShowDatePicker","tempDateRange","setTempDateRange","needsReforecast","setNeedsReforecast","parsedData","csvParse","err","console","hasData","prodDateCol","columns","phasesDetected","filteredData","dataWithDates","map","row","Date","isNaN","getTime","localHasData","firstDate","date","Production_Date","phaseData","result","Object","keys","phase","tMax","max","maxProdDate","computeInitialParams","params","series","_series$","phaseParams","setPhaseParams","handleApplyDateFilter","handleResetDateFilter","handleKeyDown","e","key","handleKeyUp","window","addEventListener","removeEventListener","allHistoricalPoints","points","push","Q","allForecastPoints","forecasts","Q_start","forecastStartDate","forecastData","numForecastPts","i","tForecast","Q_forecast","combinedForecast","values","flat","combinedAll","calculatedEUR","results","economicLimit","log","margin","top","right","bottom","left","width","height","svg","select","current","selectAll","remove","minDate","maxDate","extent","minQ","maxQ","minYVal","xScale","scaleTime","domain","range","yScale","scaleLog","scaleLinear","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisLeft","ticks","append","attr","call","style","text","p","enter","histLineData","numLinePts","frac","tVal","QVal","dateVal","lineGenHist","line","x","y","curve","curveMonotoneX","datum","drag","on","event","phaseId","replace","prevParams","newParams","currParams","dy","dx","fData","lineGenForecast","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","toISOString","split","className","marginBottom","onClick","marginRight","marginLeft","border","padding","marginTop","borderRadius","display","gap","type","onChange","target","prev","ref","justifyContent","alignItems","checked","borderCollapse","textAlign","backgroundColor","toUpperCase","toFixed","flexWrap","name","step","_phaseParams$phase","currentRate","sixMonthRate","oneYearRate","twoYearRate","sixMonthDecline","oneYearDecline","twoYearDecline","minWidth","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/InteractiveDCAChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo, useCallback } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// Helper: Darken a HEX color by a given factor.\r\nconst darkenColor = (hex, factor = 0.8) => {\r\n  let c = d3.color(hex);\r\n  if (c) {\r\n    c.r = Math.floor(c.r * factor);\r\n    c.g = Math.floor(c.g * factor);\r\n    c.b = Math.floor(c.b * factor);\r\n    return c.formatHex();\r\n  }\r\n  return hex;\r\n};\r\n\r\n// Helper: Lighten a HEX color by a given factor.\r\nconst lightenColor = (hex, factor = 1.2) => {\r\n  let c = d3.color(hex);\r\n  if (c) {\r\n    c.r = Math.min(255, Math.floor(c.r * factor));\r\n    c.g = Math.min(255, Math.floor(c.g * factor));\r\n    c.b = Math.min(255, Math.floor(c.b * factor));\r\n    return c.formatHex();\r\n  }\r\n  return hex;\r\n};\r\n\r\n// Auto-detect the production date column from common names.\r\nconst detectDateColumn = (headers) => {\r\n  const candidates = headers.filter(h => {\r\n    const lower = h.toLowerCase();\r\n    return (lower.includes(\"prod\") && lower.includes(\"date\")) ||\r\n           lower.includes(\"proddt\") ||\r\n           lower.includes(\"proddttm\") ||\r\n           lower === \"date\" ||\r\n           lower === \"datetime\";\r\n  });\r\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\r\n};\r\n\r\n// Auto-detect measurement columns using keywords.\r\nconst detectColumns = (headers) => {\r\n  let phases = {};\r\n  headers.forEach(header => {\r\n    const lower = header.toLowerCase();\r\n    // For oil: prefer \"bopd\", otherwise any \"oil\".\r\n    if (lower.includes(\"bopd\")) {\r\n      phases.oil = header;\r\n    } else if (lower.includes(\"oil\") && !phases.oil) {\r\n      phases.oil = header;\r\n    }\r\n    // For water: prefer \"bwpd\", otherwise any \"water\".\r\n    if (lower.includes(\"bwpd\")) {\r\n      phases.water = header;\r\n    } else if (lower.includes(\"water\") && !phases.water) {\r\n      phases.water = header;\r\n    }\r\n    // For gas: prefer \"mcfd\", otherwise any \"gas\".\r\n    if (lower.includes(\"mcfd\")) {\r\n      phases.gas = header;\r\n    } else if (lower.includes(\"gas\") && !phases.gas) {\r\n      phases.gas = header;\r\n    }\r\n    // For pressure: look for \"pip\", \"pressure\", or \"psi\".\r\n    if ((lower.includes(\"pip\") || lower.includes(\"pressure\") || lower.includes(\"psi\")) && !phases.pressure) {\r\n      phases.pressure = header;\r\n    }\r\n  });\r\n  return phases;\r\n};\r\n\r\n// Calculate production rate using Arps equation\r\nconst calculateRate = (Qi, b, D, t) => {\r\n  if (b === 0) {\r\n    // Exponential decline\r\n    return Qi * Math.exp(-D * t);\r\n  } else {\r\n    // Hyperbolic decline\r\n    return Qi / Math.pow(1 + b * D * t, 1 / b);\r\n  }\r\n};\r\n\r\n// Improved best-fit parameter calculation using Arps decline curve models\r\nconst fitDeclineParameters = (data, fitWindow = 60) => {\r\n  if (!data || data.length < 3) return { Qi: data?.[0]?.value || 100, b: 0.9, D: 0.01 };\r\n  \r\n  // Sort data by time and get the initial rate\r\n  const sortedData = [...data].sort((a, b) => a.t - b.t);\r\n  const Qi = sortedData[0].value;\r\n  \r\n  // Use recent data for fitting to prioritize latest trends\r\n  const recentData = sortedData.slice(-Math.min(fitWindow, sortedData.length));\r\n  \r\n  // Try different b values and find the one with least error\r\n  let bestB = 0;\r\n  let bestD = 0.01;\r\n  let bestError = Infinity;\r\n  \r\n  // First, try to find optimal b parameter (decline exponent)\r\n  for (let b = 0; b <= 1; b += 0.1) {\r\n    // For each b, find the best D\r\n    let bestDforB = 0.01;\r\n    let bestErrorForB = Infinity;\r\n    \r\n    for (let D = 0.001; D <= 0.5; D += 0.005) {\r\n      let error = 0;\r\n      \r\n      // Calculate mean squared error\r\n      recentData.forEach(d => {\r\n        const predicted = calculateRate(Qi, b, D, d.t);\r\n        error += Math.pow(predicted - d.value, 2);\r\n      });\r\n      \r\n      if (error < bestErrorForB) {\r\n        bestErrorForB = error;\r\n        bestDforB = D;\r\n      }\r\n    }\r\n    \r\n    if (bestErrorForB < bestError) {\r\n      bestError = bestErrorForB;\r\n      bestB = b;\r\n      bestD = bestDforB;\r\n    }\r\n  }\r\n  \r\n  return { Qi, b: bestB, D: bestD };\r\n};\r\n\r\nconst InteractiveDCAChart = ({ dataString, autoForecast = true }) => {\r\n  // SVG ref and chart settings\r\n  const svgRef = useRef(null);\r\n  const [colors, setColors] = useState({\r\n    oil: \"#008000\",\r\n    water: \"#0000ff\",\r\n    gas: \"#ff0000\",\r\n    pressure: \"#000000\"\r\n  });\r\n  const [activeKey, setActiveKey] = useState(null);\r\n  const [yScaleType, setYScaleType] = useState(\"linear\");\r\n  const [yMultiplier, setYMultiplier] = useState(1.1);\r\n  const [forecastDays, setForecastDays] = useState(90);\r\n  const [isForecasting, setIsForecasting] = useState(true);\r\n  \r\n  // Add merged date filter state\r\n  const [dateRange, setDateRange] = useState({ start: null, end: null });\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n  const [tempDateRange, setTempDateRange] = useState({ start: null, end: null });\r\n  const [needsReforecast, setNeedsReforecast] = useState(false);\r\n  \r\n  // 1) Parse CSV data\r\n  const parsedData = useMemo(() => {\r\n    try {\r\n      return d3.csvParse(dataString);\r\n    } catch (err) {\r\n      console.error(\"Error parsing CSV:\", err);\r\n      return [];\r\n    }\r\n  }, [dataString]);\r\n\r\n  const hasData = parsedData && parsedData.length > 0;\r\n  \r\n  // 2) Detect columns\r\n  const prodDateCol = useMemo(() => {\r\n    return hasData ? detectDateColumn(parsedData.columns) : \"Production_Date\";\r\n  }, [hasData, parsedData]);\r\n  \r\n  const phasesDetected = useMemo(() => {\r\n    return hasData ? detectColumns(parsedData.columns) : {};\r\n  }, [hasData, parsedData]);\r\n\r\n  // 3) Filter data by date\r\n  const filteredData = useMemo(() => {\r\n    if (!hasData) return [];\r\n    \r\n    let dataWithDates = parsedData.map(row => ({\r\n      ...row,\r\n      [prodDateCol]: new Date(row[prodDateCol])\r\n    }));\r\n\r\n    // valid dates only\r\n    dataWithDates = dataWithDates.filter(row => {\r\n      const d = row[prodDateCol];\r\n      return !isNaN(d.getTime());\r\n    });\r\n\r\n    // sort by date\r\n    dataWithDates.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\r\n\r\n    // apply date range filter\r\n    if (dateRange.start) {\r\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] >= dateRange.start);\r\n    }\r\n    if (dateRange.end) {\r\n      dataWithDates = dataWithDates.filter(row => row[prodDateCol] <= dateRange.end);\r\n    }\r\n    \r\n    return dataWithDates;\r\n  }, [parsedData, dateRange, hasData, prodDateCol]);\r\n\r\n  const localHasData = filteredData && filteredData.length > 0;\r\n  \r\n  // Get the first date and convert all dates to time values\r\n  const firstDate = useMemo(() => \r\n    localHasData ? filteredData[0][prodDateCol] : new Date()\r\n  , [filteredData, localHasData, prodDateCol]);\r\n  \r\n  const data = useMemo(() => {\r\n    if (!localHasData) return [];\r\n    return filteredData.map(row => {\r\n      const date = row[prodDateCol];\r\n      return {\r\n        ...row,\r\n        Production_Date: date,\r\n        t: (date - firstDate) / (1000 * 60 * 60 * 24)\r\n      };\r\n    });\r\n  }, [filteredData, prodDateCol, localHasData, firstDate]);\r\n\r\n  // 4) Build phase data (array of {t, value} for each phase)\r\n  const phaseData = useMemo(() => {\r\n    const result = {};\r\n    Object.keys(phasesDetected).forEach(phase => {\r\n      result[phase] = localHasData\r\n        ? data.map(d => ({\r\n            t: d.t,\r\n            value: +d[phasesDetected[phase]]\r\n          })).filter(d => !isNaN(d.value))\r\n        : [];\r\n    });\r\n    return result;\r\n  }, [data, phasesDetected, localHasData]);\r\n\r\n  // 5) Calculate tMax, last production date\r\n  const tMax = useMemo(() => \r\n    localHasData ? d3.max(data, d => d.t) : 0\r\n  , [data, localHasData]);\r\n  \r\n  const maxProdDate = useMemo(() =>\r\n    localHasData ? d3.max(data, d => d.Production_Date) : new Date()\r\n  , [data, localHasData]);\r\n\r\n  // 6) Compute initial parameters (but only when needed)\r\n  const computeInitialParams = useCallback(() => {\r\n    const params = {};\r\n    if (localHasData) {\r\n      Object.keys(phaseData).forEach(phase => {\r\n        const series = phaseData[phase];\r\n        if (!series || series.length < 3) {\r\n          params[phase] = { Qi: series?.[0]?.value || 100, b: 0.9, D: 0.01 };\r\n          return;\r\n        }\r\n        \r\n        // Automatically fit best parameters\r\n        params[phase] = fitDeclineParameters(series);\r\n      });\r\n    }\r\n    return params;\r\n  }, [phaseData, localHasData]);\r\n\r\n  // Create state for phase parameters\r\n  const [phaseParams, setPhaseParams] = useState({});\r\n  \r\n  // Initial calculation of parameters and update on data change\r\n  useEffect(() => {\r\n    setPhaseParams(computeInitialParams());\r\n    setNeedsReforecast(false);\r\n  }, [computeInitialParams]);\r\n  \r\n  // Apply reforecasting when date filter is released\r\n  useEffect(() => {\r\n    if (needsReforecast && autoForecast) {\r\n      setPhaseParams(computeInitialParams());\r\n      setNeedsReforecast(false);\r\n    }\r\n  }, [needsReforecast, computeInitialParams, autoForecast]);\r\n\r\n  // Handle date filter apply\r\n  const handleApplyDateFilter = () => {\r\n    setDateRange(tempDateRange);\r\n    setShowDatePicker(false);\r\n    setNeedsReforecast(true); // Mark for reforecasting when filter is applied\r\n  };\r\n  \r\n  // Handle date filter reset\r\n  const handleResetDateFilter = () => {\r\n    setTempDateRange({ start: null, end: null });\r\n    setDateRange({ start: null, end: null });\r\n    setShowDatePicker(false);\r\n    setNeedsReforecast(true); // Mark for reforecasting when filter is reset\r\n  };\r\n\r\n  // 7) Hotkey listeners (D, Q, B)\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      const key = e.key.toLowerCase();\r\n      if ([\"d\", \"q\", \"b\"].includes(key)) {\r\n        setActiveKey(key);\r\n      }\r\n    };\r\n    const handleKeyUp = () => {\r\n      setActiveKey(null);\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      window.removeEventListener(\"keyup\", handleKeyUp);\r\n    };\r\n  }, []);\r\n\r\n  // 8) Build data arrays for historical & forecast\r\n  const allHistoricalPoints = useMemo(() => {\r\n    const points = [];\r\n    Object.keys(phaseData).forEach(phase => {\r\n      phaseData[phase].forEach(d => {\r\n        points.push({\r\n          date: new Date(firstDate.getTime() + d.t * 24 * 60 * 60 * 1000),\r\n          Q: d.value,\r\n          phase\r\n        });\r\n      });\r\n    });\r\n    return points;\r\n  }, [phaseData, firstDate]);\r\n\r\n  // Calculate forecast for each phase\r\n  const allForecastPoints = useMemo(() => {\r\n    if (!isForecasting) return {};\r\n    \r\n    const forecasts = {};\r\n    \r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      \r\n      // Skip if no valid parameters\r\n      if (!Qi || D <= 0) {\r\n        forecasts[phase] = [];\r\n        return;\r\n      }\r\n      \r\n      // Calculate Q at tMax as the \"starting\" forecast value\r\n      const Q_start = calculateRate(Qi, b, D, tMax);\r\n      const forecastStartDate = maxProdDate;\r\n      const forecastData = [];\r\n      const numForecastPts = 50;\r\n\r\n      for (let i = 0; i <= numForecastPts; i++) {\r\n        // tForecast is additional time beyond tMax\r\n        const tForecast = (forecastDays * i) / numForecastPts;\r\n        // forecast production using Arps equation\r\n        const Q_forecast = calculateRate(Q_start, b, D, tForecast);\r\n        // date is last prod date + tForecast\r\n        const date = new Date(forecastStartDate.getTime() + tForecast * 24 * 60 * 60 * 1000);\r\n\r\n        forecastData.push({\r\n          date,\r\n          Q: Q_forecast,\r\n          phase\r\n        });\r\n      }\r\n      forecasts[phase] = forecastData;\r\n    });\r\n    \r\n    return forecasts;\r\n  }, [phaseParams, tMax, maxProdDate, forecastDays, isForecasting]);\r\n\r\n  // Flatten forecasts for domain calculations\r\n  const combinedForecast = useMemo(() => {\r\n    return Object.values(allForecastPoints).flat();\r\n  }, [allForecastPoints]);\r\n  \r\n  const combinedAll = useMemo(() => {\r\n    return [...allHistoricalPoints, ...combinedForecast];\r\n  }, [allHistoricalPoints, combinedForecast]);\r\n  \r\n  // Calculate estimated ultimate recovery for each phase\r\n  const calculatedEUR = useMemo(() => {\r\n    const results = {};\r\n    \r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n      \r\n      // Skip invalid parameters\r\n      if (!Qi || D <= 0) {\r\n        results[phase] = \"N/A\";\r\n        return;\r\n      }\r\n      \r\n      // For exponential decline (b = 0)\r\n      if (b === 0) {\r\n        results[phase] = Qi / D;\r\n      }\r\n      // For hyperbolic decline with b between 0 and 1\r\n      else if (b > 0 && b < 1) {\r\n        results[phase] = Qi / (D * (1 - b));\r\n      }\r\n      // For harmonic decline (b = 1)\r\n      else if (b === 1) {\r\n        // In this case, EUR is theoretically infinite\r\n        // but we can calculate it to a practical economic limit\r\n        const economicLimit = 1; // 1 unit of production as cutoff\r\n        results[phase] = Qi * (1 + Math.log(Qi / economicLimit) / D);\r\n      }\r\n      else {\r\n        results[phase] = \"N/A\"; // Invalid b value\r\n      }\r\n    });\r\n    \r\n    return results;\r\n  }, [phaseParams]);\r\n\r\n  // 9) Render the chart\r\n  useEffect(() => {\r\n    if (!localHasData) return;\r\n\r\n    const margin = { top: 20, right: 30, bottom: 40, left: 60 };\r\n    const width = 800;\r\n    const height = 400;\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    // 10) Determine domain from combined historical + forecast data\r\n    const [minDate, maxDate] = d3.extent(combinedAll, d => d.date);\r\n    const [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\r\n\r\n    // For safety in log scale, if minQ <= 0, we clamp to something > 0\r\n    const minYVal = minQ <= 0 ? 1e-2 : minQ;\r\n\r\n    // Build xScale\r\n    const xScale = d3.scaleTime()\r\n      .domain([minDate, maxDate])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    // Build yScale\r\n    let yScale;\r\n    if (yScaleType === \"log\") {\r\n      yScale = d3.scaleLog()\r\n        .domain([Math.max(1e-5, minYVal), maxQ * yMultiplier])\r\n        .range([height - margin.bottom, margin.top]);\r\n    } else {\r\n      yScale = d3.scaleLinear()\r\n        .domain([0, maxQ * yMultiplier])\r\n        .range([height - margin.bottom, margin.top]);\r\n    }\r\n\r\n    // 11) Axes\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\r\n    const yAxis = (yScaleType === \"log\")\r\n      ? d3.axisLeft(yScale).ticks(6, \"~s\")\r\n      : d3.axisLeft(yScale);\r\n\r\n    // Add X and Y axes\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n      .call(xAxis)\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\");\r\n\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},0)`)\r\n      .call(yAxis);\r\n\r\n    // Add axis labels\r\n    svg.append(\"text\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", height - 5)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Date\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"x\", -height / 2)\r\n      .attr(\"y\", 15)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Production Rate\");\r\n\r\n    // 12) Plot historical raw data (circles)\r\n    Object.keys(phasesDetected).forEach(phase => {\r\n      const points = allHistoricalPoints.filter(p => p.phase === phase);\r\n      svg.selectAll(`circle.hist-${phase}`)\r\n        .data(points)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"class\", `hist-${phase}`)\r\n        .attr(\"cx\", d => xScale(d.date))\r\n        .attr(\"cy\", d => yScale(d.Q))\r\n        .attr(\"r\", 3)\r\n        .attr(\"fill\", colors[phase] || \"#888\");\r\n    });\r\n\r\n    // 13) Plot historical decline lines with Arps model\r\n    Object.keys(phaseParams).forEach(phase => {\r\n      const { Qi, b, D } = phaseParams[phase];\r\n\r\n      // Skip if missing parameters\r\n      if (!Qi || D <= 0) return;\r\n\r\n      // Build line data for \"historical decline\" (0 -> tMax)\r\n      const histLineData = [];\r\n      const numLinePts = 100;\r\n      for (let i = 0; i <= numLinePts; i++) {\r\n        const frac = i / numLinePts;\r\n        const tVal = tMax * frac; // between 0 and tMax\r\n        const QVal = calculateRate(Qi, b, D, tVal);\r\n        const dateVal = new Date(firstDate.getTime() + tVal * 24 * 60 * 60 * 1000);\r\n        histLineData.push({ date: dateVal, Q: QVal });\r\n      }\r\n\r\n      const lineGenHist = d3.line()\r\n        .x(d => xScale(d.date))\r\n        .y(d => yScale(d.Q))\r\n        .curve(d3.curveMonotoneX);\r\n\r\n      svg.append(\"path\")\r\n        .datum(histLineData)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", colors[phase] || \"#888888\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"id\", `line-${phase}`)\r\n        .style(\"cursor\", \"pointer\")\r\n        .attr(\"d\", lineGenHist)\r\n        // DRAG: update D, Qi, or b based on pressed key\r\n        .call(d3.drag()\r\n          .on(\"start\", function() {\r\n            d3.select(this).attr(\"stroke-width\", 3); // Highlight active line\r\n          })\r\n          .on(\"drag\", function(event) {\r\n            const phaseId = d3.select(this).attr(\"id\").replace(\"line-\", \"\");\r\n            \r\n            setPhaseParams(prevParams => {\r\n              const newParams = { ...prevParams };\r\n              const currParams = { ...prevParams[phaseId] };\r\n              \r\n              // Adjust parameters based on active key\r\n              if (activeKey === \"d\") {\r\n                // Adjust D with vertical drag (up = decrease, down = increase)\r\n                currParams.D = Math.max(0.0001, currParams.D - event.dy * 0.0005);\r\n              } else if (activeKey === \"q\") {\r\n                // Adjust Qi with vertical drag (up = increase, down = decrease)\r\n                currParams.Qi = Math.max(1, currParams.Qi - event.dy);\r\n              } else if (activeKey === \"b\") {\r\n                // Adjust b with horizontal drag (right = increase, left = decrease)\r\n                currParams.b = Math.max(0, Math.min(1, currParams.b + event.dx * 0.005));\r\n              }\r\n              \r\n              newParams[phaseId] = currParams;\r\n              return newParams;\r\n            });\r\n          })\r\n          .on(\"end\", function() {\r\n            d3.select(this).attr(\"stroke-width\", 2); // Reset line thickness\r\n          })\r\n        );\r\n    });\r\n\r\n    // 14) Plot forecast lines\r\n    if (isForecasting) {\r\n      Object.keys(allForecastPoints).forEach(phase => {\r\n        const fData = allForecastPoints[phase];\r\n        if (!fData || !fData.length) return;\r\n        \r\n        const lineGenForecast = d3.line()\r\n          .x(d => xScale(d.date))\r\n          .y(d => yScale(d.Q))\r\n          .curve(d3.curveMonotoneX);\r\n\r\n        svg.append(\"path\")\r\n          .datum(fData)\r\n          .attr(\"fill\", \"none\")\r\n          .attr(\"stroke\", lightenColor(colors[phase] || \"#888\", 1.2))\r\n          .attr(\"stroke-width\", 3)\r\n          .attr(\"stroke-dasharray\", \"5,3\")\r\n          .attr(\"d\", lineGenForecast);\r\n      });\r\n\r\n      // Add a vertical line at the forecasting transition point\r\n      svg.append(\"line\")\r\n        .attr(\"x1\", xScale(maxProdDate))\r\n        .attr(\"y1\", margin.top)\r\n        .attr(\"x2\", xScale(maxProdDate))\r\n        .attr(\"y2\", height - margin.bottom)\r\n        .attr(\"stroke\", \"#666\")\r\n        .attr(\"stroke-width\", 1)\r\n        .attr(\"stroke-dasharray\", \"5,5\");\r\n\r\n      // Add a \"Forecast Starts\" label\r\n      svg.append(\"text\")\r\n        .attr(\"x\", xScale(maxProdDate) + 5)\r\n        .attr(\"y\", margin.top + 15)\r\n        .attr(\"fill\", \"#666\")\r\n        .text(\"Forecast →\");\r\n    }\r\n\r\n  }, [\r\n    localHasData, firstDate, tMax, maxProdDate, \r\n    phasesDetected, phaseData, phaseParams,\r\n    colors, activeKey, yScaleType, yMultiplier, forecastDays,\r\n    allHistoricalPoints, allForecastPoints, combinedAll, isForecasting\r\n  ]);\r\n\r\n  // Show loading or no data message\r\n  if (!hasData) {\r\n    return <div>No data available. Please upload a CSV file.</div>;\r\n  }\r\n  \r\n  if (!localHasData) {\r\n    return <div>No valid data in the selected date range.</div>;\r\n  }\r\n\r\n  // Format a date for display\r\n  const formatDate = (date) => {\r\n    if (!date) return \"\";\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n\r\n  return (\r\n    <div className=\"dca-container\">\r\n      <h3>Interactive Decline Curve Analysis</h3>\r\n      \r\n      {/* Date filter controls */}\r\n      <div style={{ marginBottom: '15px' }}>\r\n        <button \r\n          onClick={() => setShowDatePicker(!showDatePicker)}\r\n          style={{ marginRight: '10px' }}\r\n        >\r\n          {showDatePicker ? 'Hide Date Filter' : 'Filter Data by Date'}\r\n        </button>\r\n        \r\n        {dateRange.start || dateRange.end ? (\r\n          <span>\r\n            Active filter: {formatDate(dateRange.start)} to {formatDate(dateRange.end)}\r\n            <button \r\n              onClick={handleResetDateFilter}\r\n              style={{ marginLeft: '10px' }}\r\n            >\r\n              Reset Filter\r\n            </button>\r\n          </span>\r\n        ) : null}\r\n        \r\n        {showDatePicker && (\r\n          <div style={{ \r\n            border: '1px solid #ccc', \r\n            padding: '10px', \r\n            marginTop: '10px',\r\n            borderRadius: '4px'\r\n          }}>\r\n            <div style={{ display: 'flex', gap: '15px', marginBottom: '10px' }}>\r\n              <div>\r\n                <label>Start Date:</label>\r\n                <input \r\n                  type=\"date\" \r\n                  value={tempDateRange.start ? formatDate(tempDateRange.start) : ''} \r\n                  onChange={(e) => {\r\n                    const date = e.target.value ? new Date(e.target.value) : null;\r\n                    setTempDateRange(prev => ({ ...prev, start: date }));\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label>End Date:</label>\r\n                <input \r\n                  type=\"date\" \r\n                  value={tempDateRange.end ? formatDate(tempDateRange.end) : ''} \r\n                  onChange={(e) => {\r\n                    const date = e.target.value ? new Date(e.target.value) : null;\r\n                    setTempDateRange(prev => ({ ...prev, end: date }));\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button \r\n              onClick={handleApplyDateFilter}\r\n              style={{ marginRight: '10px' }}\r\n            >\r\n              Apply Filter\r\n            </button>\r\n            <button onClick={() => setShowDatePicker(false)}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <svg ref={svgRef} width={800} height={400}></svg>\r\n\r\n      {/* Display the parameters and EUR */}\r\n      <div style={{ marginTop: '20px' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <h4>Decline Curve Parameters</h4>\r\n          <label>\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={isForecasting} \r\n              onChange={(e) => setIsForecasting(e.target.checked)} \r\n            />\r\n            Show Forecast\r\n          </label>\r\n        </div>\r\n        \r\n        <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Phase</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Initial Rate (Qi)</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Decline Exponent (b)</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Decline Rate (D)</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>EUR</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.keys(phaseParams).map(phase => (\r\n              <tr key={phase}>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>\r\n                  <span style={{ \r\n                    display: 'inline-block', \r\n                    width: '12px', \r\n                    height: '12px', \r\n                    backgroundColor: colors[phase], \r\n                    marginRight: '5px' \r\n                  }}></span>\r\n                  {phase.toUpperCase()}\r\n                </td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>{phaseParams[phase].Qi.toFixed(2)}</td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>{phaseParams[phase].b.toFixed(3)}</td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>{phaseParams[phase].D.toFixed(4)}</td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>\r\n                  {typeof calculatedEUR[phase] === 'number' \r\n                    ? calculatedEUR[phase].toFixed(0) \r\n                    : calculatedEUR[phase]}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '15px' }}>\r\n        <p>\r\n          <strong>Interactive Controls:</strong><br />\r\n          Hold <strong>D</strong> and drag vertically to adjust decline rate (D).<br />\r\n          Hold <strong>Q</strong> and drag vertically to adjust initial rate (Qi).<br />\r\n          Hold <strong>B</strong> and drag horizontally to adjust decline exponent (b).\r\n        </p>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '15px', display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n        <div>\r\n          <h4>Chart Controls:</h4>\r\n          <div>\r\n            <label>\r\n              Y-Axis Scale:&nbsp;\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"yScaleType\"\r\n                  value=\"linear\"\r\n                  checked={yScaleType === \"linear\"}\r\n                  onChange={() => setYScaleType(\"linear\")}\r\n                /> Linear\r\n              </label>\r\n              &nbsp;\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"yScaleType\"\r\n                  value=\"log\"\r\n                  checked={yScaleType === \"log\"}\r\n                  onChange={() => setYScaleType(\"log\")}\r\n                /> Log\r\n              </label>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Y-Axis Multiplier: {yMultiplier.toFixed(2)}\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"3\"\r\n                step=\"0.05\"\r\n                value={yMultiplier}\r\n                onChange={(e) => setYMultiplier(+e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Forecast Extension (Days): {forecastDays}\r\n              <input\r\n                type=\"range\"\r\n                min=\"30\"\r\n                max=\"365\"\r\n                step=\"30\"\r\n                value={forecastDays}\r\n                onChange={(e) => setForecastDays(+e.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div style={{ marginTop: '10px' }}>\r\n            <button\r\n              onClick={() => setPhaseParams(computeInitialParams())}\r\n              style={{ padding: '5px 10px' }}\r\n            >\r\n              Reset Curve Parameters\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h4>Phase Colors:</h4>\r\n          {Object.keys(colors).map(phase => (\r\n            <div key={phase} style={{ marginBottom: '5px' }}>\r\n              <label>\r\n                {phase.toUpperCase()} Color:&nbsp;\r\n                <input\r\n                  type=\"color\"\r\n                  value={colors[phase]}\r\n                  onChange={(e) => setColors(prev => ({\r\n                    ...prev,\r\n                    [phase]: e.target.value\r\n                  }))}\r\n                />\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Display key metrics for each phase */}\r\n      <div style={{ marginTop: '20px' }}>\r\n        <h4>Key Metrics</h4>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n          {Object.keys(phaseParams).map(phase => {\r\n            // Skip if no valid parameters\r\n            if (!phaseParams[phase]?.Qi) return null;\r\n            \r\n            const { Qi, b, D } = phaseParams[phase];\r\n            \r\n            // Calculate current rate (at tMax)\r\n            const currentRate = calculateRate(Qi, b, D, tMax);\r\n            \r\n            // Calculate rates at different timepoints\r\n            const sixMonthRate = calculateRate(Qi, b, D, tMax + 180);\r\n            const oneYearRate = calculateRate(Qi, b, D, tMax + 365);\r\n            const twoYearRate = calculateRate(Qi, b, D, tMax + 730);\r\n            \r\n            // Calculate rate ratios\r\n            const sixMonthDecline = ((currentRate - sixMonthRate) / currentRate * 100).toFixed(1);\r\n            const oneYearDecline = ((currentRate - oneYearRate) / currentRate * 100).toFixed(1);\r\n            const twoYearDecline = ((currentRate - twoYearRate) / currentRate * 100).toFixed(1);\r\n            \r\n            return (\r\n              <div \r\n                key={phase} \r\n                style={{ \r\n                  border: `1px solid ${colors[phase]}`, \r\n                  borderRadius: '4px',\r\n                  padding: '10px',\r\n                  minWidth: '200px'\r\n                }}\r\n              >\r\n                <h5 style={{ color: colors[phase], margin: '0 0 10px 0' }}>\r\n                  {phase.toUpperCase()}\r\n                </h5>\r\n                <div>Current Rate: {currentRate.toFixed(2)}</div>\r\n                <div>Decline in 6 Months: {sixMonthDecline}%</div>\r\n                <div>Decline in 1 Year: {oneYearDecline}%</div>\r\n                <div>Decline in 2 Years: {twoYearDecline}%</div>\r\n                <div>EUR: {\r\n                  typeof calculatedEUR[phase] === 'number' \r\n                    ? calculatedEUR[phase].toFixed(0) \r\n                    : calculatedEUR[phase]\r\n                }</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveDCAChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}