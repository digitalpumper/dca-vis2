{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport * as XLSX from 'xlsx';\nimport InteractiveDCAChart from './InteractiveDCAChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [selectedColumns, setSelectedColumns] = useState({\n    oil: '',\n    water: '',\n    gas: '',\n    pressure: '',\n    date: ''\n  });\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      let parsedData;\n      if (file.name.endsWith('.csv')) {\n        parsedData = d3.csvParse(e.target.result);\n        setColumns(parsedData.columns);\n        setData(parsedData);\n      } else if (file.name.endsWith('.xls') || file.name.endsWith('.xlsx')) {\n        const workbook = XLSX.read(e.target.result, {\n          type: 'binary'\n        });\n        const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n        parsedData = XLSX.utils.sheet_to_json(firstSheet);\n        setColumns(Object.keys(parsedData[0]));\n        setData(parsedData);\n      } else {\n        alert(\"Unsupported file type\");\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DCA Interactive App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Select columns explicitly:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), ['oil', 'water', 'gas', 'pressure', 'date'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [type.charAt(0).toUpperCase() + type.slice(1), \" column:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedColumns[type],\n          onChange: e => setSelectedColumns(prev => ({\n            ...prev,\n            [type]: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- select --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), columns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: col,\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), data.length > 0 && selectedColumns.date && selectedColumns.oil && /*#__PURE__*/_jsxDEV(InteractiveDCAChart, {\n      data: data,\n      columns: selectedColumns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KOVyJJmrd0PfGmPNwqaYhRuW69g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","d3","XLSX","InteractiveDCAChart","jsxDEV","_jsxDEV","App","_s","data","setData","columns","setColumns","selectedColumns","setSelectedColumns","oil","water","gas","pressure","date","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","parsedData","name","endsWith","csvParse","result","workbook","read","type","firstSheet","Sheets","SheetNames","utils","sheet_to_json","Object","keys","alert","readAsBinaryString","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","length","marginTop","map","charAt","toUpperCase","slice","value","prev","col","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport * as XLSX from 'xlsx';\nimport InteractiveDCAChart from './InteractiveDCAChart';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [selectedColumns, setSelectedColumns] = useState({\n    oil: '',\n    water: '',\n    gas: '',\n    pressure: '',\n    date: '',\n  });\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      let parsedData;\n      if (file.name.endsWith('.csv')) {\n        parsedData = d3.csvParse(e.target.result);\n        setColumns(parsedData.columns);\n        setData(parsedData);\n      } else if (file.name.endsWith('.xls') || file.name.endsWith('.xlsx')) {\n        const workbook = XLSX.read(e.target.result, { type: 'binary' });\n        const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n        parsedData = XLSX.utils.sheet_to_json(firstSheet);\n        setColumns(Object.keys(parsedData[0]));\n        setData(parsedData);\n      } else {\n        alert(\"Unsupported file type\");\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n      <h2>DCA Interactive App</h2>\n      <input type=\"file\" onChange={handleFileUpload} />\n      \n      {columns.length > 0 && (\n        <div style={{ marginTop: \"20px\" }}>\n          <h4>Select columns explicitly:</h4>\n          {['oil', 'water', 'gas', 'pressure', 'date'].map(type => (\n            <div key={type}>\n              <label>{type.charAt(0).toUpperCase() + type.slice(1)} column:</label>\n              <select\n                value={selectedColumns[type]}\n                onChange={e => setSelectedColumns(prev => ({ ...prev, [type]: e.target.value }))}\n              >\n                <option value=\"\">-- select --</option>\n                {columns.map(col => (\n                  <option key={col} value={col}>{col}</option>\n                ))}\n              </select>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {data.length > 0 && selectedColumns.date && selectedColumns.oil && (\n        <InteractiveDCAChart data={data} columns={selectedColumns} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}