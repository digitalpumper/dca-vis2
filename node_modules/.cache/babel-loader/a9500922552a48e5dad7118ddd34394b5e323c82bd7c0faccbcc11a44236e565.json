{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport queryString from 'query-string';\nimport * as XLSX from 'xlsx';\nimport * as d3 from 'd3';\nimport InteractiveDCAChart from './InteractiveDCAChart';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\n// Helper: Auto-detect the production date column.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction detectDateColumn(headers) {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return lower.includes(\"prod\") && lower.includes(\"date\") || lower.includes(\"proddt\") || lower.includes(\"proddttm\") || lower === \"date\" || lower === \"datetime\";\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n}\n\n// Helper: Auto-detect measurement columns.\nfunction detectColumns(headers) {\n  let phases = {};\n  headers.forEach(header => {\n    const lower = header.toLowerCase();\n    if (lower.includes(\"bopd\") || lower.includes(\"oil\") && !phases.oil) {\n      phases.oil = header;\n    }\n    if (lower.includes(\"bwpd\") || lower.includes(\"water\") && !phases.water) {\n      phases.water = header;\n    }\n    if (lower.includes(\"mcfd\") || lower.includes(\"gas\") && !phases.gas) {\n      phases.gas = header;\n    }\n    if ((lower.includes(\"pip\") || lower.includes(\"pressure\") || lower.includes(\"psi\")) && !phases.pressure) {\n      phases.pressure = header;\n    }\n  });\n  return phases;\n}\nfunction App() {\n  _s();\n  // Basic state.\n  const [dataString, setDataString] = useState('');\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Date filter state.\n  const [minDate, setMinDate] = useState(null);\n  const [maxDate, setMaxDate] = useState(null);\n  const [dateRange, setDateRange] = useState([0, 0]);\n\n  // Toggles.\n  const [showDataInput, setShowDataInput] = useState(false);\n  const [showParameters, setShowParameters] = useState(false);\n  const [showInstructions, setShowInstructions] = useState(false);\n\n  // Sidebar controls.\n  const [colors, setColors] = useState({\n    oil: \"#008000\",\n    water: \"#0000ff\",\n    gas: \"#ff0000\",\n    pressure: \"#000000\"\n  });\n  const [yScaleType, setYScaleType] = useState(\"linear\");\n  const [yMultiplier, setYMultiplier] = useState(1.1);\n  const [forecastDays, setForecastDays] = useState(90);\n\n  // Chart reset key.\n  const [chartKey, setChartKey] = useState(0);\n  const resetAutoFit = () => {\n    setChartKey(prev => prev + 1);\n  };\n\n  // Computed parameters from chart.\n  const [chartParams, setChartParams] = useState(null);\n\n  // 60-day averages.\n  const [show60DayAverages, setShow60DayAverages] = useState(false);\n  const [sixtyDayAverages, setSixtyDayAverages] = useState(null);\n  const [sixtyDayJSON, setSixtyDayJSON] = useState(\"\");\n\n  // Parse query string for CSV data.\n  useEffect(() => {\n    const params = queryString.parse(window.location.search);\n    if (params.data) {\n      setDataString(params.data);\n      setShowDataInput(false);\n    }\n  }, []);\n\n  // When CSV data changes, determine production date range.\n  useEffect(() => {\n    if (!dataString) return;\n    try {\n      const parsed = d3.csvParse(dataString);\n      if (parsed && parsed.length > 0 && parsed.columns) {\n        const dateCol = detectDateColumn(parsed.columns);\n        const dates = parsed.map(row => new Date(row[dateCol])).filter(d => !isNaN(d));\n        if (dates.length > 0) {\n          const minD = new Date(Math.min(...dates));\n          const maxD = new Date(Math.max(...dates));\n          setMinDate(minD);\n          setMaxDate(maxD);\n          const totalDays = Math.ceil((maxD.getTime() - minD.getTime()) / (1000 * 60 * 60 * 24));\n          setDateRange([0, totalDays]);\n        }\n      }\n    } catch (e) {\n      console.error(\"Error parsing dates\", e);\n    }\n  }, [dataString]);\n\n  // File upload handler.\n  function handleFileUpload(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const fileName = file.name.toLowerCase();\n    const reader = new FileReader();\n    if (fileName.endsWith('.csv') || fileName.endsWith('.txt')) {\n      reader.onload = ev => setDataString(ev.target.result);\n      reader.readAsText(file);\n    } else if (fileName.endsWith('.xls') || fileName.endsWith('.xlsx')) {\n      reader.onload = ev => {\n        const data = new Uint8Array(ev.target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const csv = XLSX.utils.sheet_to_csv(worksheet);\n        setDataString(csv);\n      };\n      reader.readAsArrayBuffer(file);\n    } else {\n      alert('Unsupported file format. Please upload CSV, TXT, XLS, or XLSX.');\n    }\n  }\n\n  // Submit handler.\n  async function handleSubmit() {\n    if (!dataString) {\n      setError('CSV data is required.');\n      return;\n    }\n    // Simulate a response.\n    const parsed = d3.csvParse(dataString);\n    setResponse({\n      columns: parsed.columns,\n      rows: parsed.length\n    });\n    setError(null);\n  }\n  const totalDays = minDate && maxDate ? Math.ceil((maxDate.getTime() - minDate.getTime()) / (1000 * 60 * 60 * 24)) : 0;\n  const filteredStartDate = minDate ? new Date(minDate.getTime() + dateRange[0] * 24 * 60 * 60 * 1000) : null;\n  const filteredEndDate = minDate ? new Date(minDate.getTime() + dateRange[1] * 24 * 60 * 60 * 1000) : null;\n\n  // Compute 60-day averages.\n  const csvParsed = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      return [];\n    }\n  }, [dataString]);\n  const phasesDetected = useMemo(() => {\n    return csvParsed && csvParsed.length > 0 ? detectColumns(csvParsed.columns) : {};\n  }, [csvParsed]);\n  function calculate60DayAvg(data, phases) {\n    let results = {\n      oil: 0,\n      water: 0,\n      gas: 0,\n      pressure: 0\n    };\n    let counters = {\n      oil: 0,\n      water: 0,\n      gas: 0,\n      pressure: 0\n    };\n    data.forEach(row => {\n      if (row.t <= 60) {\n        if (phases.oil && !isNaN(+row[phases.oil])) {\n          results.oil += +row[phases.oil];\n          counters.oil++;\n        }\n        if (phases.water && !isNaN(+row[phases.water])) {\n          results.water += +row[phases.water];\n          counters.water++;\n        }\n        if (phases.gas && !isNaN(+row[phases.gas])) {\n          results.gas += +row[phases.gas];\n          counters.gas++;\n        }\n        if (phases.pressure && !isNaN(+row[phases.pressure])) {\n          results.pressure += +row[phases.pressure];\n          counters.pressure++;\n        }\n      }\n    });\n    Object.keys(results).forEach(key => {\n      results[key] = counters[key] > 0 ? results[key] / counters[key] : 0;\n    });\n    return results;\n  }\n  useEffect(() => {\n    if (!csvParsed || csvParsed.length === 0 || !minDate) return;\n    const dateCol = csvParsed.columns ? detectDateColumn(csvParsed.columns) : \"Production_Date\";\n    const localData = csvParsed.map(row => {\n      const dt = new Date(row[dateCol]);\n      return {\n        ...row,\n        t: (dt - minDate) / (1000 * 60 * 60 * 24)\n      };\n    });\n    const result = calculate60DayAvg(localData, phasesDetected);\n    setSixtyDayAverages(result);\n    setSixtyDayJSON(JSON.stringify(result, null, 2));\n  }, [csvParsed, minDate, phasesDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom DCA Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 10,\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload CSV/Excel:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDataInput(prev => !prev),\n        children: showDataInput ? 'Hide CSV Data' : 'Show CSV Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), showDataInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: dataString,\n        onChange: e => setDataString(e.target.value),\n        placeholder: \"Paste CSV data here...\",\n        rows: \"6\",\n        cols: \"80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: 10\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Data Successfully Processed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Columns: \", response.columns.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rows: \", response.rows]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShow60DayAverages(prev => !prev),\n        children: show60DayAverages ? 'Hide 60-Day Averages' : 'Show 60-Day Averages'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), show60DayAverages && sixtyDayAverages && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f9f9f9',\n        border: '1px solid #ccc',\n        padding: 10,\n        marginBottom: 10,\n        borderRadius: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"60-Day Averages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          margin: 0\n        },\n        children: sixtyDayJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 10,\n            left: 10,\n            zIndex: 10,\n            display: 'flex',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowInstructions(prev => !prev),\n            style: {\n              padding: '6px 12px',\n              border: 'none',\n              background: '#666',\n              color: '#fff',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: showInstructions ? 'Hide Instructions' : 'Show Instructions'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowParameters(prev => !prev),\n            style: {\n              padding: '6px 12px',\n              border: 'none',\n              background: '#1890ff',\n              color: '#fff',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: showParameters ? 'Hide Parameters' : 'Show Parameters'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), showParameters && chartParams && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 50,\n            right: 10,\n            background: 'rgba(255,255,255,0.95)',\n            border: '1px solid #ccc',\n            padding: 10,\n            zIndex: 10,\n            maxWidth: 300,\n            borderRadius: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Decline Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              width: '100%',\n              borderCollapse: 'collapse'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"Phase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"Qi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"b\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: \"EUR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: chartParams.phaseParams && Object.keys(chartParams.phaseParams).map(phase => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: phase.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: chartParams.phaseParams[phase].Qi.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: chartParams.phaseParams[phase].b.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: chartParams.phaseParams[phase].D.toFixed(4)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ddd',\n                    padding: '4px'\n                  },\n                  children: typeof chartParams.calculatedEUR[phase] === 'number' ? chartParams.calculatedEUR[phase].toFixed(0) : chartParams.calculatedEUR[phase]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 23\n                }, this)]\n              }, phase, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowParameters(false),\n            style: {\n              marginTop: 10\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), showInstructions && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 50,\n            left: 10,\n            background: 'rgba(255,255,255,0.95)',\n            border: '1px solid #ccc',\n            padding: 10,\n            zIndex: 10,\n            maxWidth: 300,\n            borderRadius: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Interactive Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 22\n            }, this), \" and drag vertically to adjust decline rate (D).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 88\n            }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Q\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 22\n            }, this), \" and drag vertically to adjust initial rate (Qi).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 89\n            }, this), \"Hold \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 22\n            }, this), \" and drag vertically to adjust decline exponent (b).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 92\n            }, this), \"(Dragging disables autofit until reset.)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 57\n            }, this), \"You can also scroll/drag vertically in the chart to zoom the y-axis.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowInstructions(false),\n            style: {\n              marginTop: 10\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InteractiveDCAChart, {\n          dataString: dataString,\n          startDate: filteredStartDate ? filteredStartDate.toISOString().slice(0, 10) : \"\",\n          endDate: filteredEndDate ? filteredEndDate.toISOString().slice(0, 10) : \"\",\n          colors: colors,\n          yScaleType: yScaleType,\n          yMultiplier: yMultiplier,\n          forecastDays: forecastDays,\n          onParametersCalculated: setChartParams\n        }, chartKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Production Date Range:\", /*#__PURE__*/_jsxDEV(Slider.Range, {\n              min: 0,\n              max: totalDays,\n              value: dateRange,\n              onChange: newRange => setDateRange(newRange),\n              tipFormatter: value => {\n                if (!minDate) return '';\n                const d = new Date(minDate.getTime() + value * 24 * 60 * 60 * 1000);\n                return d.toDateString();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [filteredStartDate ? filteredStartDate.toDateString() : 'N/A', \" \\u2013 \", filteredEndDate ? filteredEndDate.toDateString() : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 250\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Phase Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), ['oil', 'water', 'gas', 'pressure'].map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [phase.toUpperCase(), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"color\",\n                value: colors[phase],\n                onChange: e => setColors(prev => ({\n                  ...prev,\n                  [phase]: e.target.value\n                })),\n                style: {\n                  marginLeft: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)\n          }, phase, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Axis Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"linear\",\n                checked: yScaleType === \"linear\",\n                onChange: () => setYScaleType(\"linear\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), \" Linear\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginLeft: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"yScaleType\",\n                value: \"log\",\n                checked: yScaleType === \"log\",\n                onChange: () => setYScaleType(\"log\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this), \" Log\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y-Axis Multiplier: \", yMultiplier.toFixed(2), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"3\",\n                step: \"0.05\",\n                value: yMultiplier,\n                onChange: e => setYMultiplier(+e.target.value),\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Forecast Extension (Days): \", forecastDays, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"30\",\n                max: \"365\",\n                step: \"30\",\n                value: forecastDays,\n                onChange: e => setForecastDays(+e.target.value),\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetAutoFit,\n            style: {\n              padding: '6px 12px',\n              border: 'none',\n              background: '#fa541c',\n              color: '#fff',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Reset Autofit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1uy4Sh1E5DHE3yQv5uG+RKQ38xU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","queryString","XLSX","d3","InteractiveDCAChart","Slider","jsxDEV","_jsxDEV","detectDateColumn","headers","candidates","filter","h","lower","toLowerCase","includes","length","detectColumns","phases","forEach","header","oil","water","gas","pressure","App","_s","dataString","setDataString","response","setResponse","error","setError","minDate","setMinDate","maxDate","setMaxDate","dateRange","setDateRange","showDataInput","setShowDataInput","showParameters","setShowParameters","showInstructions","setShowInstructions","colors","setColors","yScaleType","setYScaleType","yMultiplier","setYMultiplier","forecastDays","setForecastDays","chartKey","setChartKey","resetAutoFit","prev","chartParams","setChartParams","show60DayAverages","setShow60DayAverages","sixtyDayAverages","setSixtyDayAverages","sixtyDayJSON","setSixtyDayJSON","params","parse","window","location","search","data","parsed","csvParse","columns","dateCol","dates","map","row","Date","d","isNaN","minD","Math","min","maxD","max","totalDays","ceil","getTime","e","console","handleFileUpload","file","target","files","fileName","name","reader","FileReader","endsWith","onload","ev","result","readAsText","Uint8Array","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","csv","utils","sheet_to_csv","readAsArrayBuffer","alert","handleSubmit","rows","filteredStartDate","filteredEndDate","csvParsed","err","phasesDetected","calculate60DayAvg","results","counters","t","Object","keys","key","localData","dt","JSON","stringify","style","padding","fontFamily","children","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","marginBottom","onChange","onClick","value","placeholder","cols","color","join","background","border","borderRadius","marginTop","margin","flexGrow","position","top","left","zIndex","cursor","right","maxWidth","width","borderCollapse","phaseParams","phase","toUpperCase","Qi","toFixed","b","D","calculatedEUR","startDate","toISOString","slice","endDate","onParametersCalculated","Range","newRange","tipFormatter","toDateString","marginLeft","checked","step","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport queryString from 'query-string';\nimport * as XLSX from 'xlsx';\nimport * as d3 from 'd3';\nimport InteractiveDCAChart from './InteractiveDCAChart';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\n// Helper: Auto-detect the production date column.\nfunction detectDateColumn(headers) {\n  const candidates = headers.filter(h => {\n    const lower = h.toLowerCase();\n    return (\n      (lower.includes(\"prod\") && lower.includes(\"date\")) ||\n      lower.includes(\"proddt\") ||\n      lower.includes(\"proddttm\") ||\n      lower === \"date\" ||\n      lower === \"datetime\"\n    );\n  });\n  return candidates.length > 0 ? candidates[0] : \"Production_Date\";\n}\n\n// Helper: Auto-detect measurement columns.\nfunction detectColumns(headers) {\n  let phases = {};\n  headers.forEach(header => {\n    const lower = header.toLowerCase();\n    if (lower.includes(\"bopd\") || (lower.includes(\"oil\") && !phases.oil)) {\n      phases.oil = header;\n    }\n    if (lower.includes(\"bwpd\") || (lower.includes(\"water\") && !phases.water)) {\n      phases.water = header;\n    }\n    if (lower.includes(\"mcfd\") || (lower.includes(\"gas\") && !phases.gas)) {\n      phases.gas = header;\n    }\n    if ((lower.includes(\"pip\") || lower.includes(\"pressure\") || lower.includes(\"psi\")) && !phases.pressure) {\n      phases.pressure = header;\n    }\n  });\n  return phases;\n}\n\nfunction App() {\n  // Basic state.\n  const [dataString, setDataString] = useState('');\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Date filter state.\n  const [minDate, setMinDate] = useState(null);\n  const [maxDate, setMaxDate] = useState(null);\n  const [dateRange, setDateRange] = useState([0, 0]);\n\n  // Toggles.\n  const [showDataInput, setShowDataInput] = useState(false);\n  const [showParameters, setShowParameters] = useState(false);\n  const [showInstructions, setShowInstructions] = useState(false);\n\n  // Sidebar controls.\n  const [colors, setColors] = useState({\n    oil: \"#008000\",\n    water: \"#0000ff\",\n    gas: \"#ff0000\",\n    pressure: \"#000000\"\n  });\n  const [yScaleType, setYScaleType] = useState(\"linear\");\n  const [yMultiplier, setYMultiplier] = useState(1.1);\n  const [forecastDays, setForecastDays] = useState(90);\n\n  // Chart reset key.\n  const [chartKey, setChartKey] = useState(0);\n  const resetAutoFit = () => {\n    setChartKey(prev => prev + 1);\n  };\n\n  // Computed parameters from chart.\n  const [chartParams, setChartParams] = useState(null);\n\n  // 60-day averages.\n  const [show60DayAverages, setShow60DayAverages] = useState(false);\n  const [sixtyDayAverages, setSixtyDayAverages] = useState(null);\n  const [sixtyDayJSON, setSixtyDayJSON] = useState(\"\");\n\n  // Parse query string for CSV data.\n  useEffect(() => {\n    const params = queryString.parse(window.location.search);\n    if (params.data) {\n      setDataString(params.data);\n      setShowDataInput(false);\n    }\n  }, []);\n\n  // When CSV data changes, determine production date range.\n  useEffect(() => {\n    if (!dataString) return;\n    try {\n      const parsed = d3.csvParse(dataString);\n      if (parsed && parsed.length > 0 && parsed.columns) {\n        const dateCol = detectDateColumn(parsed.columns);\n        const dates = parsed.map(row => new Date(row[dateCol])).filter(d => !isNaN(d));\n        if (dates.length > 0) {\n          const minD = new Date(Math.min(...dates));\n          const maxD = new Date(Math.max(...dates));\n          setMinDate(minD);\n          setMaxDate(maxD);\n          const totalDays = Math.ceil((maxD.getTime() - minD.getTime()) / (1000 * 60 * 60 * 24));\n          setDateRange([0, totalDays]);\n        }\n      }\n    } catch (e) {\n      console.error(\"Error parsing dates\", e);\n    }\n  }, [dataString]);\n\n  // File upload handler.\n  function handleFileUpload(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const fileName = file.name.toLowerCase();\n    const reader = new FileReader();\n    if (fileName.endsWith('.csv') || fileName.endsWith('.txt')) {\n      reader.onload = (ev) => setDataString(ev.target.result);\n      reader.readAsText(file);\n    } else if (fileName.endsWith('.xls') || fileName.endsWith('.xlsx')) {\n      reader.onload = (ev) => {\n        const data = new Uint8Array(ev.target.result);\n        const workbook = XLSX.read(data, { type: 'array' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const csv = XLSX.utils.sheet_to_csv(worksheet);\n        setDataString(csv);\n      };\n      reader.readAsArrayBuffer(file);\n    } else {\n      alert('Unsupported file format. Please upload CSV, TXT, XLS, or XLSX.');\n    }\n  }\n\n  // Submit handler.\n  async function handleSubmit() {\n    if (!dataString) {\n      setError('CSV data is required.');\n      return;\n    }\n    // Simulate a response.\n    const parsed = d3.csvParse(dataString);\n    setResponse({ columns: parsed.columns, rows: parsed.length });\n    setError(null);\n  }\n\n  const totalDays = minDate && maxDate\n    ? Math.ceil((maxDate.getTime() - minDate.getTime()) / (1000 * 60 * 60 * 24))\n    : 0;\n\n  const filteredStartDate = minDate\n    ? new Date(minDate.getTime() + dateRange[0] * 24 * 60 * 60 * 1000)\n    : null;\n  const filteredEndDate = minDate\n    ? new Date(minDate.getTime() + dateRange[1] * 24 * 60 * 60 * 1000)\n    : null;\n\n  // Compute 60-day averages.\n  const csvParsed = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      return [];\n    }\n  }, [dataString]);\n\n  const phasesDetected = useMemo(() => {\n    return (csvParsed && csvParsed.length > 0)\n      ? detectColumns(csvParsed.columns)\n      : {};\n  }, [csvParsed]);\n\n  function calculate60DayAvg(data, phases) {\n    let results = { oil: 0, water: 0, gas: 0, pressure: 0 };\n    let counters = { oil: 0, water: 0, gas: 0, pressure: 0 };\n    data.forEach(row => {\n      if (row.t <= 60) {\n        if (phases.oil && !isNaN(+row[phases.oil])) {\n          results.oil += +row[phases.oil];\n          counters.oil++;\n        }\n        if (phases.water && !isNaN(+row[phases.water])) {\n          results.water += +row[phases.water];\n          counters.water++;\n        }\n        if (phases.gas && !isNaN(+row[phases.gas])) {\n          results.gas += +row[phases.gas];\n          counters.gas++;\n        }\n        if (phases.pressure && !isNaN(+row[phases.pressure])) {\n          results.pressure += +row[phases.pressure];\n          counters.pressure++;\n        }\n      }\n    });\n    Object.keys(results).forEach(key => {\n      results[key] = counters[key] > 0 ? results[key] / counters[key] : 0;\n    });\n    return results;\n  }\n\n  useEffect(() => {\n    if (!csvParsed || csvParsed.length === 0 || !minDate) return;\n    const dateCol = csvParsed.columns ? detectDateColumn(csvParsed.columns) : \"Production_Date\";\n    const localData = csvParsed.map(row => {\n      const dt = new Date(row[dateCol]);\n      return { ...row, t: (dt - minDate) / (1000 * 60 * 60 * 24) };\n    });\n    const result = calculate60DayAvg(localData, phasesDetected);\n    setSixtyDayAverages(result);\n    setSixtyDayJSON(JSON.stringify(result, null, 2));\n  }, [csvParsed, minDate, phasesDetected]);\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial, sans-serif' }}>\n      <h2>Custom DCA Application</h2>\n      \n      {/* Top row: horizontally aligned controls */}\n      <div style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 10 }}>\n        <label>\n          Upload CSV/Excel:&nbsp;\n          <input type=\"file\" onChange={handleFileUpload} />\n        </label>\n        <button onClick={() => setShowDataInput(prev => !prev)}>\n          {showDataInput ? 'Hide CSV Data' : 'Show CSV Data'}\n        </button>\n        <button onClick={handleSubmit}>Submit Data</button>\n      </div>\n      \n      {showDataInput && (\n        <div style={{ marginBottom: 10 }}>\n          <textarea\n            value={dataString}\n            onChange={(e) => setDataString(e.target.value)}\n            placeholder=\"Paste CSV data here...\"\n            rows=\"6\"\n            cols=\"80\"\n          ></textarea>\n        </div>\n      )}\n      \n      {error && <div style={{ color: 'red', marginBottom: 10 }}>{error}</div>}\n      {response && (\n        <div style={{ marginBottom: 10 }}>\n          <h4>Data Successfully Processed</h4>\n          <p>Columns: {response.columns.join(', ')}</p>\n          <p>Rows: {response.rows}</p>\n        </div>\n      )}\n      \n      {/* 60-Day Averages */}\n      <div style={{ marginBottom: 10 }}>\n        <button onClick={() => setShow60DayAverages(prev => !prev)}>\n          {show60DayAverages ? 'Hide 60-Day Averages' : 'Show 60-Day Averages'}\n        </button>\n      </div>\n      {show60DayAverages && sixtyDayAverages && (\n        <div style={{\n          background: '#f9f9f9',\n          border: '1px solid #ccc',\n          padding: 10,\n          marginBottom: 10,\n          borderRadius: 4\n        }}>\n          <h4 style={{ marginTop: 0 }}>60-Day Averages</h4>\n          <pre style={{ margin: 0 }}>{sixtyDayJSON}</pre>\n        </div>\n      )}\n      \n      {/* Main layout: Chart & Sidebar */}\n      <div style={{ display: 'flex', gap: 20 }}>\n        {/* Chart Area */}\n        <div style={{ flexGrow: 1, position: 'relative' }}>\n          {/* Overlay Buttons on Chart */}\n          <div style={{ position: 'absolute', top: 10, left: 10, zIndex: 10, display: 'flex', gap: '10px' }}>\n            <button \n              onClick={() => setShowInstructions(prev => !prev)}\n              style={{\n                padding: '6px 12px',\n                border: 'none',\n                background: '#666',\n                color: '#fff',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              {showInstructions ? 'Hide Instructions' : 'Show Instructions'}\n            </button>\n            <button \n              onClick={() => setShowParameters(prev => !prev)}\n              style={{\n                padding: '6px 12px',\n                border: 'none',\n                background: '#1890ff',\n                color: '#fff',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              {showParameters ? 'Hide Parameters' : 'Show Parameters'}\n            </button>\n          </div>\n          \n          {/* Parameters Overlay */}\n          {showParameters && chartParams && (\n            <div style={{\n              position: 'absolute',\n              top: 50,\n              right: 10,\n              background: 'rgba(255,255,255,0.95)',\n              border: '1px solid #ccc',\n              padding: 10,\n              zIndex: 10,\n              maxWidth: 300,\n              borderRadius: 4\n            }}>\n              <h4 style={{ marginTop: 0 }}>Decline Parameters</h4>\n              <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                <thead>\n                  <tr>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>Phase</th>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>Qi</th>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>b</th>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>D</th>\n                    <th style={{ border: '1px solid #ddd', padding: '4px' }}>EUR</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {chartParams.phaseParams && Object.keys(chartParams.phaseParams).map(phase => (\n                    <tr key={phase}>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>{phase.toUpperCase()}</td>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>\n                        {chartParams.phaseParams[phase].Qi.toFixed(2)}\n                      </td>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>\n                        {chartParams.phaseParams[phase].b.toFixed(3)}\n                      </td>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>\n                        {chartParams.phaseParams[phase].D.toFixed(4)}\n                      </td>\n                      <td style={{ border: '1px solid #ddd', padding: '4px' }}>\n                        {typeof chartParams.calculatedEUR[phase] === 'number'\n                          ? chartParams.calculatedEUR[phase].toFixed(0)\n                          : chartParams.calculatedEUR[phase]}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <button onClick={() => setShowParameters(false)} style={{ marginTop: 10 }}>\n                Close\n              </button>\n            </div>\n          )}\n          \n          {/* Instructions Overlay */}\n          {showInstructions && (\n            <div style={{\n              position: 'absolute',\n              top: 50,\n              left: 10,\n              background: 'rgba(255,255,255,0.95)',\n              border: '1px solid #ccc',\n              padding: 10,\n              zIndex: 10,\n              maxWidth: 300,\n              borderRadius: 4\n            }}>\n              <h4 style={{ marginTop: 0 }}>Interactive Controls</h4>\n              <p>\n                Hold <strong>D</strong> and drag vertically to adjust decline rate (D).<br />\n                Hold <strong>Q</strong> and drag vertically to adjust initial rate (Qi).<br />\n                Hold <strong>B</strong> and drag vertically to adjust decline exponent (b).<br />\n                (Dragging disables autofit until reset.)<br />\n                You can also scroll/drag vertically in the chart to zoom the y-axis.\n              </p>\n              <button onClick={() => setShowInstructions(false)} style={{ marginTop: 10 }}>\n                Close\n              </button>\n            </div>\n          )}\n          \n          {/* Interactive Chart Component */}\n          <InteractiveDCAChart\n            key={chartKey}\n            dataString={dataString}\n            startDate={filteredStartDate ? filteredStartDate.toISOString().slice(0,10) : \"\"}\n            endDate={filteredEndDate ? filteredEndDate.toISOString().slice(0,10) : \"\"}\n            colors={colors}\n            yScaleType={yScaleType}\n            yMultiplier={yMultiplier}\n            forecastDays={forecastDays}\n            onParametersCalculated={setChartParams}\n          />\n          \n          {/* Dual-Range Slider */}\n          <div style={{ marginTop: 10 }}>\n            <label>\n              Production Date Range:\n              <Slider.Range \n                min={0}\n                max={totalDays}\n                value={dateRange}\n                onChange={(newRange) => setDateRange(newRange)}\n                tipFormatter={value => {\n                  if (!minDate) return '';\n                  const d = new Date(minDate.getTime() + value * 24 * 60 * 60 * 1000);\n                  return d.toDateString();\n                }}\n              />\n            </label>\n            <div>\n              {filteredStartDate ? filteredStartDate.toDateString() : 'N/A'} – {filteredEndDate ? filteredEndDate.toDateString() : 'N/A'}\n            </div>\n          </div>\n        </div>\n        \n        {/* Sidebar */}\n        <div style={{ width: 250 }}>\n          <div style={{ marginBottom: 20 }}>\n            <h4>Phase Colors</h4>\n            {['oil', 'water', 'gas', 'pressure'].map(phase => (\n              <div key={phase} style={{ marginBottom: 5 }}>\n                <label>\n                  {phase.toUpperCase()}:\n                  <input\n                    type=\"color\"\n                    value={colors[phase]}\n                    onChange={(e) => setColors(prev => ({ ...prev, [phase]: e.target.value }))}\n                    style={{ marginLeft: 5 }}\n                  />\n                </label>\n              </div>\n            ))}\n          </div>\n          <div style={{ marginBottom: 20 }}>\n            <h4>Axis Controls</h4>\n            <div style={{ marginBottom: 10 }}>\n              <label>\n                <input \n                  type=\"radio\"\n                  name=\"yScaleType\"\n                  value=\"linear\"\n                  checked={yScaleType === \"linear\"}\n                  onChange={() => setYScaleType(\"linear\")}\n                /> Linear\n              </label>\n              <label style={{ marginLeft: 10 }}>\n                <input \n                  type=\"radio\"\n                  name=\"yScaleType\"\n                  value=\"log\"\n                  checked={yScaleType === \"log\"}\n                  onChange={() => setYScaleType(\"log\")}\n                /> Log\n              </label>\n            </div>\n            <div style={{ marginBottom: 10 }}>\n              <label>\n                Y-Axis Multiplier: {yMultiplier.toFixed(2)}\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"3\"\n                  step=\"0.05\"\n                  value={yMultiplier}\n                  onChange={(e) => setYMultiplier(+e.target.value)}\n                  style={{ width: '100%' }}\n                />\n              </label>\n            </div>\n            <div>\n              <label>\n                Forecast Extension (Days): {forecastDays}\n                <input\n                  type=\"range\"\n                  min=\"30\"\n                  max=\"365\"\n                  step=\"30\"\n                  value={forecastDays}\n                  onChange={(e) => setForecastDays(+e.target.value)}\n                  style={{ width: '100%' }}\n                />\n              </label>\n            </div>\n          </div>\n          <div>\n            <button \n              onClick={resetAutoFit}\n              style={{\n                padding: '6px 12px',\n                border: 'none',\n                background: '#fa541c',\n                color: '#fff',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              Reset Autofit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}