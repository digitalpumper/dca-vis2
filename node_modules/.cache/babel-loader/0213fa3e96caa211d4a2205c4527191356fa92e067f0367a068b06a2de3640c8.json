{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lozan\\\\Desktop\\\\Git\\\\dca-spotfire\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateRate = (Qi, b, D, t) => {\n  if (b === 0) return Qi * Math.exp(-D * t);\n  return Qi / Math.pow(1 + b * D * t, 1 / b);\n};\nconst fitDeclineParameters = (data, fitWindow = 60) => {\n  var _data$;\n  if (!data || data.length < 3) return {\n    Qi: (data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.value) || 100,\n    b: 0.9,\n    D: 0.01\n  };\n  const sorted = data.slice().sort((a, b) => a.t - b.t);\n  const Qi = sorted[0].value;\n  const recent = sorted.slice(-Math.min(fitWindow, sorted.length));\n  let bestParams = {\n      b: 0,\n      D: 0.01\n    },\n    bestError = Infinity;\n  for (let b = 0; b <= 1; b += 0.1) {\n    const {\n      D,\n      error\n    } = findOptimalD(recent, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestParams = {\n        b,\n        D\n      };\n    }\n  }\n  const bmin = Math.max(0, bestParams.b - 0.1);\n  const bmax = Math.min(1, bestParams.b + 0.1);\n  for (let b = bmin; b <= bmax; b += 0.01) {\n    const {\n      D,\n      error\n    } = findOptimalD(recent, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestParams = {\n        b,\n        D\n      };\n    }\n  }\n  return {\n    Qi,\n    b: bestParams.b,\n    D: bestParams.D\n  };\n};\nfunction findOptimalD(recentData, Qi, b) {\n  let bestD = 0.01,\n    bestError = Infinity;\n  for (let D = 0.001; D <= 0.5; D += 0.005) {\n    let err = 0;\n    for (const d of recentData) {\n      const pred = calculateRate(Qi, b, D, d.t);\n      err += (pred - d.value) ** 2;\n    }\n    if (err < bestError) {\n      bestError = err;\n      bestD = D;\n    }\n  }\n  const Dmin = Math.max(0.001, bestD - 0.005);\n  const Dmax = bestD + 0.005;\n  for (let D = Dmin; D <= Dmax; D += 0.0005) {\n    let err = 0;\n    for (const d of recentData) {\n      const pred = calculateRate(Qi, b, D, d.t);\n      err += (pred - d.value) ** 2;\n    }\n    if (err < bestError) {\n      bestError = err;\n      bestD = D;\n    }\n  }\n  return {\n    D: bestD,\n    error: bestError\n  };\n}\nexport default function InteractiveDCAChart({\n  dataString,\n  startDate,\n  endDate,\n  colors,\n  yScaleType,\n  yMultiplier,\n  // always 1 from parent.\n  forecastDays,\n  autoForecast = true,\n  onParametersCalculated\n}) {\n  _s();\n  const svgRef = useRef(null);\n  const xScaleRef = useRef(null);\n  // Declare hoverInfo state.\n  const [hoverInfo, setHoverInfo] = useState(null);\n  // Throttle flag for hover updates.\n  const hoverUpdateFlag = useRef(false);\n\n  // Parse CSV data.\n  const parsedData = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      console.error(\"Error parsing CSV:\", err);\n      return [];\n    }\n  }, [dataString]);\n  const hasData = parsedData.length > 0;\n  const prodDateCol = hasData ? parsedData.columns.find(c => c.toLowerCase().includes(\"date\")) || \"Production_Date\" : \"Production_Date\";\n  const phasesDetected = hasData ? detectColumns(parsedData.columns) : {};\n  const filteredData = useMemo(() => {\n    if (!hasData) return [];\n    let arr = parsedData.map(row => ({\n      ...row,\n      [prodDateCol]: new Date(row[prodDateCol])\n    })).filter(row => !isNaN(row[prodDateCol].getTime()));\n    arr.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\n    if (startDate) {\n      const sd = new Date(startDate);\n      arr = arr.filter(row => row[prodDateCol] >= sd);\n    }\n    if (endDate) {\n      const ed = new Date(endDate);\n      arr = arr.filter(row => row[prodDateCol] <= ed);\n    }\n    return arr;\n  }, [parsedData, prodDateCol, startDate, endDate, hasData]);\n  const localHasData = filteredData.length > 0;\n  const firstDate = localHasData ? filteredData[0][prodDateCol] : new Date();\n  const data = useMemo(() => {\n    if (!localHasData) return [];\n    return filteredData.map(row => {\n      const date = row[prodDateCol];\n      return {\n        ...row,\n        t: (date - firstDate) / (1000 * 60 * 60 * 24)\n      };\n    });\n  }, [filteredData, localHasData, firstDate, prodDateCol]);\n  const phaseData = useMemo(() => {\n    let result = {};\n    Object.keys(phasesDetected).forEach(phase => {\n      result[phase] = data.map(d => ({\n        t: d.t,\n        value: +d[phasesDetected[phase]]\n      })).filter(d => !isNaN(d.value));\n    });\n    return result;\n  }, [data, phasesDetected]);\n  const tMax = localHasData ? d3.max(data, d => d.t) : 0;\n  const lastProdDate = localHasData ? d3.max(data, d => d[prodDateCol]) : new Date();\n  const [phaseParams, setPhaseParams] = useState({});\n  const [autoFitEnabled, setAutoFitEnabled] = useState(true);\n  const [activeKey, setActiveKey] = useState(null);\n\n  // Key events.\n  useEffect(() => {\n    const handleKeyDown = e => {\n      const key = e.key.toLowerCase();\n      if ([\"d\", \"q\", \"b\"].includes(key)) setActiveKey(key);\n    };\n    const handleKeyUp = () => setActiveKey(null);\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n\n  // Auto-fit decline parameters.\n  const prevParamsRef = useRef(\"\");\n  useEffect(() => {\n    if (!localHasData) return;\n    let newParams = {};\n    Object.keys(phaseData).forEach(phase => {\n      const arr = phaseData[phase];\n      if (arr.length < 3) {\n        var _arr$;\n        newParams[phase] = {\n          Qi: (arr === null || arr === void 0 ? void 0 : (_arr$ = arr[0]) === null || _arr$ === void 0 ? void 0 : _arr$.value) || 100,\n          b: 0.9,\n          D: 0.01\n        };\n      } else {\n        newParams[phase] = fitDeclineParameters(arr);\n      }\n    });\n    const newParamsStr = JSON.stringify(newParams);\n    if (autoFitEnabled && newParamsStr !== prevParamsRef.current) {\n      prevParamsRef.current = newParamsStr;\n      setPhaseParams(newParams);\n    }\n  }, [JSON.stringify(phaseData), autoFitEnabled, localHasData]);\n  const calculatedEUR = useMemo(() => {\n    let out = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      if (b === 0) out[phase] = Qi / D;else if (b > 0 && b < 1) out[phase] = Qi / (D * (1 - b));else if (b === 1) out[phase] = Qi * 10000;else out[phase] = \"N/A\";\n    });\n    return out;\n  }, [phaseParams]);\n  const forecastAverage = useMemo(() => {\n    let fa = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      const Q_start = calculateRate(Qi, b, D, tMax);\n      const steps = 60;\n      let sum = 0;\n      for (let i = 0; i <= steps; i++) {\n        const t = i / steps * 60;\n        const Q = b === 0 ? Q_start * Math.exp(-D * t) : Q_start / Math.pow(1 + b * D * t, 1 / b);\n        sum += Q;\n      }\n      fa[phase] = sum / (steps + 1);\n    });\n    return fa;\n  }, [phaseParams, tMax]);\n  useEffect(() => {\n    if (onParametersCalculated) {\n      onParametersCalculated({\n        phaseParams,\n        calculatedEUR,\n        forecastAverage\n      });\n    }\n  }, [phaseParams, calculatedEUR, forecastAverage, onParametersCalculated]);\n  const allHistoricalPoints = useMemo(() => {\n    let out = [];\n    Object.keys(phaseData).forEach(phase => {\n      phaseData[phase].forEach(d => {\n        out.push({\n          date: new Date(firstDate.getTime() + d.t * 86400000),\n          Q: d.value,\n          phase\n        });\n      });\n    });\n    return out;\n  }, [phaseData, firstDate]);\n  function calcForecast(Qi, b, D, tMaxVal, days) {\n    let Qstart = calculateRate(Qi, b, D, tMaxVal);\n    let arr = [];\n    const steps = 50;\n    for (let i = 0; i <= steps; i++) {\n      const dtFrac = i / steps * days;\n      const q = b === 0 ? Qstart * Math.exp(-D * dtFrac) : Qstart / Math.pow(1 + b * D * dtFrac, 1 / b);\n      const dt = new Date(lastProdDate.getTime() + dtFrac * 86400000);\n      arr.push({\n        date: dt,\n        Q: q\n      });\n    }\n    return arr;\n  }\n  const allForecastPoints = useMemo(() => {\n    let out = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      if (!Qi || D <= 0) out[phase] = [];else {\n        out[phase] = calcForecast(Qi, b, D, tMax, forecastDays).map(obj => ({\n          ...obj,\n          phase\n        }));\n      }\n    });\n    return out;\n  }, [phaseParams, tMax, forecastDays, localHasData]);\n  const combinedAll = useMemo(() => {\n    let arr = [...allHistoricalPoints];\n    Object.values(allForecastPoints).forEach(a => arr = arr.concat(a));\n    return arr;\n  }, [allHistoricalPoints, allForecastPoints]);\n\n  // D3 rendering.\n  useEffect(() => {\n    if (!localHasData) return;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 60\n    };\n    const width = 800;\n    const height = 400;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const [minDateDomain, maxDateDomain] = d3.extent(combinedAll, d => d.date);\n    let [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\n    if (yScaleType === \"log\" && minQ <= 0) minQ = 1e-2;\n    const xScale = d3.scaleTime().domain([minDateDomain, maxDateDomain]).range([margin.left, width - margin.right]);\n    xScaleRef.current = xScale;\n    const yDomain = yScaleType === \"log\" ? [Math.max(1e-5, minQ), maxQ] : [0, maxQ];\n    const yScale = yScaleType === \"log\" ? d3.scaleLog().domain(yDomain).range([height - margin.bottom, margin.top]) : d3.scaleLinear().domain(yDomain).range([height - margin.bottom, margin.top]);\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\n    const yAxis = yScaleType === \"log\" ? d3.axisLeft(yScale).ticks(6, \"~s\") : d3.axisLeft(yScale);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(xAxis).selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", \"end\");\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(yAxis);\n    svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height - 5).style(\"text-anchor\", \"middle\").text(\"Date\");\n    svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"y\", 15).style(\"text-anchor\", \"middle\").text(\"Production Rate\");\n\n    // Plot historical points.\n    Object.keys(phasesDetected).forEach(phase => {\n      const pts = allHistoricalPoints.filter(o => o.phase === phase);\n      svg.selectAll(`circle.hist-${phase}`).data(pts).enter().append(\"circle\").attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.Q)).attr(\"r\", 3).attr(\"fill\", colors[phase] || \"#888\");\n    });\n\n    // Plot decline lines with drag behavior.\n    Object.keys(phaseParams).forEach(phase => {\n      const {\n        Qi,\n        b,\n        D\n      } = phaseParams[phase];\n      const lineData = [];\n      const steps = 100;\n      for (let i = 0; i <= steps; i++) {\n        const frac = i / steps;\n        const tVal = tMax * frac;\n        const QVal = calculateRate(Qi, b, D, tVal);\n        const dt = new Date(firstDate.getTime() + tVal * 86400000);\n        lineData.push({\n          date: dt,\n          Q: QVal\n        });\n      }\n      const lineGen = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(lineData).attr(\"fill\", \"none\").attr(\"stroke\", colors[phase] || \"#888888\").attr(\"stroke-width\", 2).style(\"cursor\", \"pointer\").attr(\"d\", lineGen).call(d3.drag().on(\"drag\", event => {\n        if (autoFitEnabled) setAutoFitEnabled(false);\n        setPhaseParams(prev => {\n          const newParams = {\n            ...prev\n          };\n          const curr = {\n            ...prev[phase]\n          };\n          if (activeKey === \"d\") {\n            curr.D = Math.max(0.0001, curr.D + event.dy * 0.001);\n          } else if (activeKey === \"q\") {\n            curr.Qi = Math.max(1, curr.Qi - event.dy);\n          } else if (activeKey === \"b\") {\n            curr.b = Math.max(0, Math.min(1, curr.b + event.dy * 0.005));\n          }\n          newParams[phase] = curr;\n          return newParams;\n        });\n      }));\n    });\n\n    // Plot forecast lines.\n    Object.keys(allForecastPoints).forEach(phase => {\n      const fc = allForecastPoints[phase];\n      if (fc.length > 1) {\n        const lineGenFc = d3.line().x(d => xScale(d.date)).y(d => yScale(d.Q)).curve(d3.curveMonotoneX);\n        svg.append(\"path\").datum(fc).attr(\"fill\", \"none\").attr(\"stroke\", d3.color(colors[phase] || \"#888\").brighter(1.2)).attr(\"stroke-width\", 3).attr(\"stroke-dasharray\", \"5,3\").attr(\"d\", lineGenFc).on(\"mouseover\", function () {\n          d3.select(this).attr(\"stroke-width\", 5);\n        }).on(\"mouseout\", function () {\n          d3.select(this).attr(\"stroke-width\", 3);\n        }).on(\"mousedown\", function () {\n          d3.select(this).style(\"cursor\", \"grabbing\");\n        }).on(\"mouseup\", function () {\n          d3.select(this).style(\"cursor\", \"grab\");\n        });\n      }\n    });\n    svg.append(\"line\").attr(\"x1\", xScale(lastProdDate)).attr(\"y1\", margin.top).attr(\"x2\", xScale(lastProdDate)).attr(\"y2\", height - margin.bottom).attr(\"stroke\", \"#666\").attr(\"stroke-width\", 1).attr(\"stroke-dasharray\", \"5,5\");\n    svg.append(\"text\").attr(\"x\", xScale(lastProdDate) + 5).attr(\"y\", margin.top + 15).attr(\"fill\", \"#666\").text(\"Forecast →\");\n\n    // d3-zoom for vertical scaling.\n    const zoomBehavior = d3.zoom().scaleExtent([0.5, 10]).on(\"zoom\", event => {\n      const newYScale = event.transform.rescaleY(yScale);\n      svg.selectAll(\"circle\").attr(\"cy\", d => newYScale(d.Q));\n      svg.selectAll(\"path\").each(function (d) {\n        if (Array.isArray(d)) {\n          const newLineGen = d3.line().x(dd => xScale(dd.date)).y(dd => newYScale(dd.Q)).curve(d3.curveMonotoneX);\n          d3.select(this).attr(\"d\", newLineGen(d));\n        }\n      });\n      svg.select(\"g\").call(yAxis.scale(newYScale));\n    });\n    svg.call(zoomBehavior);\n  }, [localHasData, combinedAll, firstDate, lastProdDate, yScaleType, forecastDays, autoFitEnabled, tMax, activeKey, phaseParams, colors]);\n\n  // Throttle hover updates using requestAnimationFrame.\n  const handleMouseMove = event => {\n    if (!localHasData || !xScaleRef.current) return;\n    if (!hoverUpdateFlag.current) {\n      hoverUpdateFlag.current = true;\n      window.requestAnimationFrame(() => {\n        const [mouseX] = d3.pointer(event, svgRef.current);\n        const date = xScaleRef.current.invert(mouseX);\n        const t = (date - firstDate) / 86400000;\n        let vals = {};\n        Object.keys(phaseParams).forEach(phase => {\n          const {\n            Qi,\n            b,\n            D\n          } = phaseParams[phase] || {};\n          if (Qi && b !== undefined && D) {\n            vals[phase] = calculateRate(Qi, b, D, t);\n          }\n        });\n        setHoverInfo({\n          x: mouseX,\n          date,\n          values: vals\n        });\n        hoverUpdateFlag.current = false;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 800,\n      height: 400,\n      onMouseMove: handleMouseMove,\n      onMouseOut: () => setHoverInfo(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), hoverInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: hoverInfo.x + 5,\n        top: 0,\n        pointerEvents: 'none',\n        background: 'rgba(255,255,255,0.9)',\n        border: '1px solid #ccc',\n        padding: 5,\n        fontSize: 12,\n        borderRadius: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: hoverInfo.date.toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this), Object.keys(hoverInfo.values).map(ph => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [ph.toUpperCase(), \": \", hoverInfo.values[ph].toFixed(2)]\n      }, ph, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 466,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractiveDCAChart, \"EJhyC3t7uLXGpW882gAKJV0V3s8=\");\n_c = InteractiveDCAChart;\nvar _c;\n$RefreshReg$(_c, \"InteractiveDCAChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","d3","jsxDEV","_jsxDEV","calculateRate","Qi","b","D","t","Math","exp","pow","fitDeclineParameters","data","fitWindow","_data$","length","value","sorted","slice","sort","a","recent","min","bestParams","bestError","Infinity","error","findOptimalD","bmin","max","bmax","recentData","bestD","err","d","pred","Dmin","Dmax","InteractiveDCAChart","dataString","startDate","endDate","colors","yScaleType","yMultiplier","forecastDays","autoForecast","onParametersCalculated","_s","svgRef","xScaleRef","hoverInfo","setHoverInfo","hoverUpdateFlag","parsedData","csvParse","console","hasData","prodDateCol","columns","find","c","toLowerCase","includes","phasesDetected","detectColumns","filteredData","arr","map","row","Date","filter","isNaN","getTime","sd","ed","localHasData","firstDate","date","phaseData","result","Object","keys","forEach","phase","tMax","lastProdDate","phaseParams","setPhaseParams","autoFitEnabled","setAutoFitEnabled","activeKey","setActiveKey","handleKeyDown","e","key","handleKeyUp","window","addEventListener","removeEventListener","prevParamsRef","newParams","_arr$","newParamsStr","JSON","stringify","current","calculatedEUR","out","forecastAverage","fa","Q_start","steps","sum","i","Q","allHistoricalPoints","push","calcForecast","tMaxVal","days","Qstart","dtFrac","q","dt","allForecastPoints","obj","combinedAll","values","concat","margin","top","right","bottom","left","width","height","svg","select","selectAll","remove","minDateDomain","maxDateDomain","extent","minQ","maxQ","xScale","scaleTime","domain","range","yDomain","yScale","scaleLog","scaleLinear","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisLeft","ticks","append","attr","call","style","text","pts","o","enter","lineData","frac","tVal","QVal","lineGen","line","x","y","curve","curveMonotoneX","datum","drag","on","event","prev","curr","dy","fc","lineGenFc","color","brighter","zoomBehavior","zoom","scaleExtent","newYScale","transform","rescaleY","each","Array","isArray","newLineGen","dd","scale","handleMouseMove","requestAnimationFrame","mouseX","pointer","invert","vals","undefined","position","children","ref","onMouseMove","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","pointerEvents","background","border","padding","fontSize","borderRadius","toDateString","ph","toUpperCase","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/lozan/Desktop/Git/dca-spotfire/frontend/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\n\nconst calculateRate = (Qi, b, D, t) => {\n  if (b === 0) return Qi * Math.exp(-D * t);\n  return Qi / Math.pow(1 + b * D * t, 1 / b);\n};\n\nconst fitDeclineParameters = (data, fitWindow = 60) => {\n  if (!data || data.length < 3)\n    return { Qi: data?.[0]?.value || 100, b: 0.9, D: 0.01 };\n\n  const sorted = data.slice().sort((a, b) => a.t - b.t);\n  const Qi = sorted[0].value;\n  const recent = sorted.slice(-Math.min(fitWindow, sorted.length));\n  let bestParams = { b: 0, D: 0.01 }, bestError = Infinity;\n\n  for (let b = 0; b <= 1; b += 0.1) {\n    const { D, error } = findOptimalD(recent, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestParams = { b, D };\n    }\n  }\n  const bmin = Math.max(0, bestParams.b - 0.1);\n  const bmax = Math.min(1, bestParams.b + 0.1);\n  for (let b = bmin; b <= bmax; b += 0.01) {\n    const { D, error } = findOptimalD(recent, Qi, b);\n    if (error < bestError) {\n      bestError = error;\n      bestParams = { b, D };\n    }\n  }\n  return { Qi, b: bestParams.b, D: bestParams.D };\n};\n\nfunction findOptimalD(recentData, Qi, b) {\n  let bestD = 0.01, bestError = Infinity;\n  for (let D = 0.001; D <= 0.5; D += 0.005) {\n    let err = 0;\n    for (const d of recentData) {\n      const pred = calculateRate(Qi, b, D, d.t);\n      err += (pred - d.value) ** 2;\n    }\n    if (err < bestError) {\n      bestError = err;\n      bestD = D;\n    }\n  }\n  const Dmin = Math.max(0.001, bestD - 0.005);\n  const Dmax = bestD + 0.005;\n  for (let D = Dmin; D <= Dmax; D += 0.0005) {\n    let err = 0;\n    for (const d of recentData) {\n      const pred = calculateRate(Qi, b, D, d.t);\n      err += (pred - d.value) ** 2;\n    }\n    if (err < bestError) {\n      bestError = err;\n      bestD = D;\n    }\n  }\n  return { D: bestD, error: bestError };\n}\n\nexport default function InteractiveDCAChart({\n  dataString,\n  startDate,\n  endDate,\n  colors,\n  yScaleType,\n  yMultiplier, // always 1 from parent.\n  forecastDays,\n  autoForecast = true,\n  onParametersCalculated\n}) {\n  const svgRef = useRef(null);\n  const xScaleRef = useRef(null);\n  // Declare hoverInfo state.\n  const [hoverInfo, setHoverInfo] = useState(null);\n  // Throttle flag for hover updates.\n  const hoverUpdateFlag = useRef(false);\n\n  // Parse CSV data.\n  const parsedData = useMemo(() => {\n    try {\n      return d3.csvParse(dataString);\n    } catch (err) {\n      console.error(\"Error parsing CSV:\", err);\n      return [];\n    }\n  }, [dataString]);\n\n  const hasData = parsedData.length > 0;\n  const prodDateCol = hasData ? \n    parsedData.columns.find(c => c.toLowerCase().includes(\"date\")) || \"Production_Date\"\n    : \"Production_Date\";\n  const phasesDetected = hasData ? detectColumns(parsedData.columns) : {};\n  \n  const filteredData = useMemo(() => {\n    if (!hasData) return [];\n    let arr = parsedData.map(row => ({\n      ...row,\n      [prodDateCol]: new Date(row[prodDateCol])\n    })).filter(row => !isNaN(row[prodDateCol].getTime()));\n    arr.sort((a, b) => a[prodDateCol] - b[prodDateCol]);\n    if (startDate) {\n      const sd = new Date(startDate);\n      arr = arr.filter(row => row[prodDateCol] >= sd);\n    }\n    if (endDate) {\n      const ed = new Date(endDate);\n      arr = arr.filter(row => row[prodDateCol] <= ed);\n    }\n    return arr;\n  }, [parsedData, prodDateCol, startDate, endDate, hasData]);\n\n  const localHasData = filteredData.length > 0;\n  const firstDate = localHasData ? filteredData[0][prodDateCol] : new Date();\n\n  const data = useMemo(() => {\n    if (!localHasData) return [];\n    return filteredData.map(row => {\n      const date = row[prodDateCol];\n      return { ...row, t: (date - firstDate) / (1000 * 60 * 60 * 24) };\n    });\n  }, [filteredData, localHasData, firstDate, prodDateCol]);\n\n  const phaseData = useMemo(() => {\n    let result = {};\n    Object.keys(phasesDetected).forEach(phase => {\n      result[phase] = data.map(d => ({\n        t: d.t,\n        value: +d[phasesDetected[phase]]\n      })).filter(d => !isNaN(d.value));\n    });\n    return result;\n  }, [data, phasesDetected]);\n\n  const tMax = localHasData ? d3.max(data, d => d.t) : 0;\n  const lastProdDate = localHasData\n    ? d3.max(data, d => d[prodDateCol])\n    : new Date();\n\n  const [phaseParams, setPhaseParams] = useState({});\n  const [autoFitEnabled, setAutoFitEnabled] = useState(true);\n  const [activeKey, setActiveKey] = useState(null);\n\n  // Key events.\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const key = e.key.toLowerCase();\n      if ([\"d\", \"q\", \"b\"].includes(key)) setActiveKey(key);\n    };\n    const handleKeyUp = () => setActiveKey(null);\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n\n  // Auto-fit decline parameters.\n  const prevParamsRef = useRef(\"\");\n  useEffect(() => {\n    if (!localHasData) return;\n    let newParams = {};\n    Object.keys(phaseData).forEach(phase => {\n      const arr = phaseData[phase];\n      if (arr.length < 3) {\n        newParams[phase] = { Qi: arr?.[0]?.value || 100, b: 0.9, D: 0.01 };\n      } else {\n        newParams[phase] = fitDeclineParameters(arr);\n      }\n    });\n    const newParamsStr = JSON.stringify(newParams);\n    if (autoFitEnabled && newParamsStr !== prevParamsRef.current) {\n      prevParamsRef.current = newParamsStr;\n      setPhaseParams(newParams);\n    }\n  }, [JSON.stringify(phaseData), autoFitEnabled, localHasData]);\n\n  const calculatedEUR = useMemo(() => {\n    let out = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const { Qi, b, D } = phaseParams[phase];\n      if (b === 0) out[phase] = Qi / D;\n      else if (b > 0 && b < 1) out[phase] = Qi / (D * (1 - b));\n      else if (b === 1) out[phase] = Qi * 10000;\n      else out[phase] = \"N/A\";\n    });\n    return out;\n  }, [phaseParams]);\n\n  const forecastAverage = useMemo(() => {\n    let fa = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const { Qi, b, D } = phaseParams[phase];\n      const Q_start = calculateRate(Qi, b, D, tMax);\n      const steps = 60;\n      let sum = 0;\n      for (let i = 0; i <= steps; i++) {\n        const t = (i / steps) * 60;\n        const Q = b === 0 ? Q_start * Math.exp(-D * t) : Q_start / Math.pow(1 + b * D * t, 1 / b);\n        sum += Q;\n      }\n      fa[phase] = sum / (steps + 1);\n    });\n    return fa;\n  }, [phaseParams, tMax]);\n\n  useEffect(() => {\n    if (onParametersCalculated) {\n      onParametersCalculated({ phaseParams, calculatedEUR, forecastAverage });\n    }\n  }, [phaseParams, calculatedEUR, forecastAverage, onParametersCalculated]);\n\n  const allHistoricalPoints = useMemo(() => {\n    let out = [];\n    Object.keys(phaseData).forEach(phase => {\n      phaseData[phase].forEach(d => {\n        out.push({\n          date: new Date(firstDate.getTime() + d.t * 86400000),\n          Q: d.value,\n          phase\n        });\n      });\n    });\n    return out;\n  }, [phaseData, firstDate]);\n\n  function calcForecast(Qi, b, D, tMaxVal, days) {\n    let Qstart = calculateRate(Qi, b, D, tMaxVal);\n    let arr = [];\n    const steps = 50;\n    for (let i = 0; i <= steps; i++) {\n      const dtFrac = (i / steps) * days;\n      const q = b === 0 ? Qstart * Math.exp(-D * dtFrac) : Qstart / Math.pow(1 + b * D * dtFrac, 1 / b);\n      const dt = new Date(lastProdDate.getTime() + dtFrac * 86400000);\n      arr.push({ date: dt, Q: q });\n    }\n    return arr;\n  }\n\n  const allForecastPoints = useMemo(() => {\n    let out = {};\n    Object.keys(phaseParams).forEach(phase => {\n      const { Qi, b, D } = phaseParams[phase];\n      if (!Qi || D <= 0) out[phase] = [];\n      else {\n        out[phase] = calcForecast(Qi, b, D, tMax, forecastDays).map(obj => ({\n          ...obj,\n          phase\n        }));\n      }\n    });\n    return out;\n  }, [phaseParams, tMax, forecastDays, localHasData]);\n\n  const combinedAll = useMemo(() => {\n    let arr = [...allHistoricalPoints];\n    Object.values(allForecastPoints).forEach(a => (arr = arr.concat(a)));\n    return arr;\n  }, [allHistoricalPoints, allForecastPoints]);\n\n  // D3 rendering.\n  useEffect(() => {\n    if (!localHasData) return;\n    const margin = { top: 20, right: 30, bottom: 40, left: 60 };\n    const width = 800;\n    const height = 400;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const [minDateDomain, maxDateDomain] = d3.extent(combinedAll, d => d.date);\n    let [minQ, maxQ] = d3.extent(combinedAll, d => d.Q);\n    if (yScaleType === \"log\" && minQ <= 0) minQ = 1e-2;\n    const xScale = d3.scaleTime()\n      .domain([minDateDomain, maxDateDomain])\n      .range([margin.left, width - margin.right]);\n    xScaleRef.current = xScale;\n    const yDomain = yScaleType === \"log\" ? [Math.max(1e-5, minQ), maxQ] : [0, maxQ];\n    const yScale = yScaleType === \"log\"\n      ? d3.scaleLog().domain(yDomain).range([height - margin.bottom, margin.top])\n      : d3.scaleLinear().domain(yDomain).range([height - margin.bottom, margin.top]);\n\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m-%d\"));\n    const yAxis = yScaleType === \"log\" ? d3.axisLeft(yScale).ticks(6, \"~s\") : d3.axisLeft(yScale);\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .attr(\"transform\", \"rotate(-45)\")\n      .style(\"text-anchor\", \"end\");\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(yAxis);\n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", height - 5)\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Date\");\n    svg.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", -height / 2)\n      .attr(\"y\", 15)\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Production Rate\");\n    \n    // Plot historical points.\n    Object.keys(phasesDetected).forEach(phase => {\n      const pts = allHistoricalPoints.filter(o => o.phase === phase);\n      svg.selectAll(`circle.hist-${phase}`)\n        .data(pts)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", d => xScale(d.date))\n        .attr(\"cy\", d => yScale(d.Q))\n        .attr(\"r\", 3)\n        .attr(\"fill\", colors[phase] || \"#888\");\n    });\n    \n    // Plot decline lines with drag behavior.\n    Object.keys(phaseParams).forEach(phase => {\n      const { Qi, b, D } = phaseParams[phase];\n      const lineData = [];\n      const steps = 100;\n      for (let i = 0; i <= steps; i++) {\n        const frac = i / steps;\n        const tVal = tMax * frac;\n        const QVal = calculateRate(Qi, b, D, tVal);\n        const dt = new Date(firstDate.getTime() + tVal * 86400000);\n        lineData.push({ date: dt, Q: QVal });\n      }\n      const lineGen = d3.line()\n        .x(d => xScale(d.date))\n        .y(d => yScale(d.Q))\n        .curve(d3.curveMonotoneX);\n      svg.append(\"path\")\n        .datum(lineData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", colors[phase] || \"#888888\")\n        .attr(\"stroke-width\", 2)\n        .style(\"cursor\", \"pointer\")\n        .attr(\"d\", lineGen)\n        .call(\n          d3.drag().on(\"drag\", (event) => {\n            if (autoFitEnabled) setAutoFitEnabled(false);\n            setPhaseParams(prev => {\n              const newParams = { ...prev };\n              const curr = { ...prev[phase] };\n              if (activeKey === \"d\") {\n                curr.D = Math.max(0.0001, curr.D + event.dy * 0.001);\n              } else if (activeKey === \"q\") {\n                curr.Qi = Math.max(1, curr.Qi - event.dy);\n              } else if (activeKey === \"b\") {\n                curr.b = Math.max(0, Math.min(1, curr.b + event.dy * 0.005));\n              }\n              newParams[phase] = curr;\n              return newParams;\n            });\n          })\n        );\n    });\n    \n    // Plot forecast lines.\n    Object.keys(allForecastPoints).forEach(phase => {\n      const fc = allForecastPoints[phase];\n      if (fc.length > 1) {\n        const lineGenFc = d3.line()\n          .x(d => xScale(d.date))\n          .y(d => yScale(d.Q))\n          .curve(d3.curveMonotoneX);\n        svg.append(\"path\")\n          .datum(fc)\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", d3.color(colors[phase] || \"#888\").brighter(1.2))\n          .attr(\"stroke-width\", 3)\n          .attr(\"stroke-dasharray\", \"5,3\")\n          .attr(\"d\", lineGenFc)\n          .on(\"mouseover\", function() {\n            d3.select(this).attr(\"stroke-width\", 5);\n          })\n          .on(\"mouseout\", function() {\n            d3.select(this).attr(\"stroke-width\", 3);\n          })\n          .on(\"mousedown\", function() {\n            d3.select(this).style(\"cursor\", \"grabbing\");\n          })\n          .on(\"mouseup\", function() {\n            d3.select(this).style(\"cursor\", \"grab\");\n          });\n      }\n    });\n    \n    svg.append(\"line\")\n      .attr(\"x1\", xScale(lastProdDate))\n      .attr(\"y1\", margin.top)\n      .attr(\"x2\", xScale(lastProdDate))\n      .attr(\"y2\", height - margin.bottom)\n      .attr(\"stroke\", \"#666\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke-dasharray\", \"5,5\");\n    svg.append(\"text\")\n      .attr(\"x\", xScale(lastProdDate) + 5)\n      .attr(\"y\", margin.top + 15)\n      .attr(\"fill\", \"#666\")\n      .text(\"Forecast →\");\n    \n    // d3-zoom for vertical scaling.\n    const zoomBehavior = d3.zoom()\n      .scaleExtent([0.5, 10])\n      .on(\"zoom\", (event) => {\n        const newYScale = event.transform.rescaleY(yScale);\n        svg.selectAll(\"circle\").attr(\"cy\", d => newYScale(d.Q));\n        svg.selectAll(\"path\").each(function(d) {\n          if (Array.isArray(d)) {\n            const newLineGen = d3.line()\n              .x(dd => xScale(dd.date))\n              .y(dd => newYScale(dd.Q))\n              .curve(d3.curveMonotoneX);\n            d3.select(this).attr(\"d\", newLineGen(d));\n          }\n        });\n        svg.select(\"g\").call(yAxis.scale(newYScale));\n      });\n    svg.call(zoomBehavior);\n  }, [\n    localHasData,\n    combinedAll,\n    firstDate,\n    lastProdDate,\n    yScaleType,\n    forecastDays,\n    autoFitEnabled,\n    tMax,\n    activeKey,\n    phaseParams,\n    colors\n  ]);\n\n  // Throttle hover updates using requestAnimationFrame.\n  const handleMouseMove = (event) => {\n    if (!localHasData || !xScaleRef.current) return;\n    if (!hoverUpdateFlag.current) {\n      hoverUpdateFlag.current = true;\n      window.requestAnimationFrame(() => {\n        const [mouseX] = d3.pointer(event, svgRef.current);\n        const date = xScaleRef.current.invert(mouseX);\n        const t = (date - firstDate) / 86400000;\n        let vals = {};\n        Object.keys(phaseParams).forEach(phase => {\n          const { Qi, b, D } = phaseParams[phase] || {};\n          if (Qi && b !== undefined && D) {\n            vals[phase] = calculateRate(Qi, b, D, t);\n          }\n        });\n        setHoverInfo({ x: mouseX, date, values: vals });\n        hoverUpdateFlag.current = false;\n      });\n    }\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <svg\n        ref={svgRef}\n        width={800}\n        height={400}\n        onMouseMove={handleMouseMove}\n        onMouseOut={() => setHoverInfo(null)}\n      />\n      {hoverInfo && (\n        <div\n          style={{\n            position: 'absolute',\n            left: hoverInfo.x + 5,\n            top: 0,\n            pointerEvents: 'none',\n            background: 'rgba(255,255,255,0.9)',\n            border: '1px solid #ccc',\n            padding: 5,\n            fontSize: 12,\n            borderRadius: 4\n          }}\n        >\n          <div>{hoverInfo.date.toDateString()}</div>\n          {Object.keys(hoverInfo.values).map(ph => (\n            <div key={ph}>\n              {ph.toUpperCase()}: {hoverInfo.values[ph].toFixed(2)}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}